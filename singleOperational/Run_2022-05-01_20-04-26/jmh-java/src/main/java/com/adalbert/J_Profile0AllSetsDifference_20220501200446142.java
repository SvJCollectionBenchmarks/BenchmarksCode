package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile0AllSetsDifference_20220501200446142 {
	java.util.HashSet<Double> collection = new java.util.HashSet<>();
	@Setup(Level.Invocation)
	public void setupJHashSet() {
		collection = new java.util.HashSet<>();
		collection.add(18.0);
		collection.add(7.0);
		collection.add(176.0);
		collection.add(189.0);
		collection.add(123.0);
		collection.add(108.0);
		collection.add(51.0);
		collection.add(160.0);
		collection.add(186.0);
		collection.add(58.0);
		collection.add(23.0);
		collection.add(95.0);
		collection.add(159.0);
		collection.add(35.0);
		collection.add(63.0);
		collection.add(109.0);
		collection.add(26.0);
		collection.add(55.0);
		collection.add(66.0);
		collection.add(137.0);
		collection.add(185.0);
		collection.add(184.0);
		collection.add(141.0);
		collection.add(23.0);
		collection.add(28.0);
		collection.add(70.0);
		collection.add(33.0);
		collection.add(63.0);
		collection.add(141.0);
		collection.add(20.0);
		collection.add(155.0);
		collection.add(180.0);
		collection.add(22.0);
		collection.add(197.0);
		collection.add(80.0);
		collection.add(177.0);
		collection.add(75.0);
		collection.add(25.0);
		collection.add(115.0);
		collection.add(93.0);
		collection.add(188.0);
		collection.add(173.0);
		collection.add(106.0);
		collection.add(89.0);
		collection.add(22.0);
		collection.add(66.0);
		collection.add(42.0);
		collection.add(132.0);
		collection.add(39.0);
		collection.add(188.0);
		collection.add(21.0);
		collection.add(43.0);
		collection.add(97.0);
		collection.add(75.0);
		collection.add(97.0);
		collection.add(198.0);
		collection.add(22.0);
		collection.add(121.0);
		collection.add(16.0);
		collection.add(170.0);
		collection.add(94.0);
		collection.add(189.0);
		collection.add(142.0);
		collection.add(172.0);
		collection.add(145.0);
		collection.add(90.0);
		collection.add(100.0);
		collection.add(98.0);
		collection.add(65.0);
		collection.add(25.0);
		collection.add(150.0);
		collection.add(193.0);
		collection.add(2.0);
		collection.add(169.0);
		collection.add(65.0);
		collection.add(21.0);
		collection.add(191.0);
		collection.add(139.0);
		collection.add(44.0);
		collection.add(107.0);
		collection.add(61.0);
		collection.add(197.0);
		collection.add(75.0);
		collection.add(23.0);
		collection.add(133.0);
		collection.add(86.0);
		collection.add(96.0);
		collection.add(183.0);
		collection.add(5.0);
		collection.add(190.0);
		collection.add(1.0);
		collection.add(74.0);
		collection.add(1.0);
		collection.add(136.0);
		collection.add(25.0);
		collection.add(192.0);
		collection.add(23.0);
		collection.add(197.0);
		collection.add(112.0);
		collection.add(41.0);
		collection.add(32.0);
		collection.add(19.0);
		collection.add(1.0);
		collection.add(35.0);
		collection.add(41.0);
		collection.add(130.0);
		collection.add(60.0);
		collection.add(142.0);
		collection.add(96.0);
		collection.add(149.0);
		collection.add(122.0);
		collection.add(31.0);
		collection.add(164.0);
		collection.add(140.0);
		collection.add(161.0);
		collection.add(131.0);
		collection.add(139.0);
		collection.add(24.0);
		collection.add(101.0);
		collection.add(135.0);
		collection.add(83.0);
		collection.add(164.0);
		collection.add(153.0);
		collection.add(146.0);
		collection.add(88.0);
		collection.add(62.0);
		collection.add(64.0);
		collection.add(159.0);
		collection.add(47.0);
		collection.add(58.0);
		collection.add(181.0);
		collection.add(169.0);
		collection.add(149.0);
		collection.add(106.0);
		collection.add(14.0);
		collection.add(50.0);
		collection.add(4.0);
		collection.add(64.0);
		collection.add(7.0);
		collection.add(137.0);
		collection.add(117.0);
		collection.add(166.0);
		collection.add(39.0);
		collection.add(46.0);
		collection.add(188.0);
		collection.add(149.0);
		collection.add(39.0);
		collection.add(1.0);
		collection.add(11.0);
		collection.add(141.0);
		collection.add(82.0);
		collection.add(182.0);
		collection.add(3.0);
		collection.add(177.0);
		collection.add(86.0);
		collection.add(68.0);
		collection.add(19.0);
		collection.add(6.0);
		collection.add(92.0);
		collection.add(9.0);
		collection.add(161.0);
		collection.add(50.0);
		collection.add(135.0);
		collection.add(80.0);
		collection.add(98.0);
		collection.add(43.0);
		collection.add(117.0);
		collection.add(36.0);
		collection.add(142.0);
		collection.add(149.0);
		collection.add(4.0);
		collection.add(173.0);
		collection.add(83.0);
		collection.add(41.0);
		collection.add(103.0);
		collection.add(176.0);
		collection.add(27.0);
		collection.add(116.0);
		collection.add(195.0);
		collection.add(47.0);
		collection.add(55.0);
		collection.add(145.0);
		collection.add(46.0);
		collection.add(144.0);
		collection.add(194.0);
		collection.add(94.0);
		collection.add(187.0);
		collection.add(104.0);
		collection.add(170.0);
		collection.add(113.0);
		collection.add(146.0);
		collection.add(51.0);
		collection.add(171.0);
		collection.add(167.0);
		collection.add(89.0);
		collection.add(109.0);
		collection.add(47.0);
		collection.add(183.0);
		collection.add(61.0);
		collection.add(20.0);
		collection.add(35.0);
		collection.add(145.0);
		collection.add(182.0);
		collection.add(72.0);
		collection.add(168.0);
		collection.add(161.0);
		collection.add(104.0);
		collection.add(2.0);
		collection.add(33.0);
		collection.add(105.0);
		collection.add(122.0);
		collection.add(111.0);
		collection.add(113.0);
		collection.add(136.0);
		collection.add(144.0);
		collection.add(139.0);
		collection.add(10.0);
		collection.add(173.0);
		collection.add(180.0);
		collection.add(105.0);
		collection.add(151.0);
		collection.add(168.0);
		collection.add(12.0);
		collection.add(26.0);
		collection.add(173.0);
		collection.add(98.0);
		collection.add(88.0);
		collection.add(195.0);
		collection.add(129.0);
		collection.add(130.0);
		collection.add(106.0);
		collection.add(114.0);
		collection.add(159.0);
		collection.add(102.0);
		collection.add(148.0);
		collection.add(70.0);
		collection.add(147.0);
		collection.add(158.0);
		collection.add(192.0);
		collection.add(35.0);
		collection.add(130.0);
		collection.add(195.0);
		collection.add(69.0);
		collection.add(122.0);
		collection.add(123.0);
		collection.add(55.0);
		collection.add(172.0);
		collection.add(197.0);
		collection.add(199.0);
		collection.add(171.0);
		collection.add(189.0);
		collection.add(5.0);
		collection.add(59.0);
		collection.add(30.0);
		collection.add(24.0);
		collection.add(144.0);
		collection.add(116.0);
		collection.add(48.0);
		collection.add(40.0);
		collection.add(153.0);
		collection.add(179.0);
		collection.add(185.0);
		collection.add(161.0);
		collection.add(164.0);
		collection.add(47.0);
		collection.add(192.0);
		collection.add(45.0);
		collection.add(52.0);
		collection.add(52.0);
		collection.add(1.0);
		collection.add(23.0);
		collection.add(20.0);
		collection.add(139.0);
		collection.add(114.0);
		collection.add(66.0);
		collection.add(107.0);
		collection.add(27.0);
		collection.add(142.0);
		collection.add(163.0);
		collection.add(183.0);
		collection.add(8.0);
		collection.add(138.0);
		collection.add(63.0);
		collection.add(79.0);
		collection.add(187.0);
		collection.add(57.0);
		collection.add(61.0);
		collection.add(126.0);
		collection.add(92.0);
		collection.add(64.0);
		collection.add(140.0);
		collection.add(122.0);
		collection.add(63.0);
		collection.add(62.0);
		collection.add(144.0);
		collection.add(83.0);
		collection.add(187.0);
		collection.add(123.0);
		collection.add(59.0);
		collection.add(51.0);
		collection.add(28.0);
		collection.add(60.0);
		collection.add(172.0);
		collection.add(8.0);
		collection.add(76.0);
		collection.add(167.0);
		collection.add(119.0);
		collection.add(120.0);
		collection.add(17.0);
		collection.add(127.0);
		collection.add(192.0);
		collection.add(12.0);
		collection.add(115.0);
		collection.add(92.0);
		collection.add(131.0);
		collection.add(93.0);
		collection.add(185.0);
		collection.add(162.0);
		collection.add(189.0);
		collection.add(176.0);
		collection.add(80.0);
		collection.add(162.0);
		collection.add(136.0);
		collection.add(57.0);
		collection.add(143.0);
		collection.add(9.0);
		collection.add(58.0);
		collection.add(185.0);
		collection.add(57.0);
		collection.add(159.0);
		collection.add(81.0);
		collection.add(125.0);
		collection.add(96.0);
		collection.add(143.0);
		collection.add(35.0);
		collection.add(76.0);
		collection.add(136.0);
		collection.add(81.0);
		collection.add(90.0);
		collection.add(171.0);
		collection.add(41.0);
		collection.add(37.0);
		collection.add(81.0);
		collection.add(146.0);
		collection.add(143.0);
		collection.add(31.0);
		collection.add(130.0);
		collection.add(64.0);
		collection.add(9.0);
		collection.add(51.0);
		collection.add(167.0);
		collection.add(164.0);
		collection.add(7.0);
		collection.add(42.0);
		collection.add(43.0);
		collection.add(61.0);
		collection.add(190.0);
		collection.add(197.0);
		collection.add(91.0);
		collection.add(155.0);
		collection.add(148.0);
		collection.add(176.0);
		collection.add(108.0);
		collection.add(73.0);
		collection.add(23.0);
		collection.add(79.0);
		collection.add(134.0);
		collection.add(92.0);
		collection.add(193.0);
		collection.add(31.0);
		collection.add(150.0);
		collection.add(39.0);
		collection.add(31.0);
		collection.add(87.0);
		collection.add(81.0);
		collection.add(176.0);
		collection.add(126.0);
		collection.add(151.0);
		collection.add(147.0);
		collection.add(152.0);
		collection.add(68.0);
		collection.add(62.0);
		collection.add(165.0);
		collection.add(171.0);
		collection.add(4.0);
		collection.add(155.0);
		collection.add(36.0);
		collection.add(96.0);
		collection.add(190.0);
		collection.add(24.0);
		collection.add(195.0);
		collection.add(173.0);
		collection.add(85.0);
		collection.add(69.0);
		collection.add(178.0);
		collection.add(141.0);
		collection.add(3.0);
		collection.add(48.0);
		collection.add(124.0);
		collection.add(54.0);
		collection.add(15.0);
		collection.add(197.0);
		collection.add(123.0);
		collection.add(154.0);
		collection.add(168.0);
		collection.add(162.0);
		collection.add(85.0);
		collection.add(155.0);
		collection.add(10.0);
		collection.add(42.0);
		collection.add(88.0);
		collection.add(87.0);
		collection.add(146.0);
		collection.add(164.0);
		collection.add(62.0);
		collection.add(148.0);
		collection.add(98.0);
		collection.add(76.0);
		collection.add(146.0);
		collection.add(37.0);
		collection.add(143.0);
		collection.add(171.0);
		collection.add(113.0);
		collection.add(18.0);
		collection.add(173.0);
		collection.add(148.0);
		collection.add(28.0);
		collection.add(110.0);
		collection.add(42.0);
		collection.add(90.0);
		collection.add(87.0);
		collection.add(176.0);
		collection.add(62.0);
		collection.add(195.0);
		collection.add(135.0);
		collection.add(187.0);
		collection.add(41.0);
		collection.add(22.0);
		collection.add(56.0);
		collection.add(174.0);
		collection.add(154.0);
		collection.add(1.0);
		collection.add(41.0);
		collection.add(174.0);
		collection.add(119.0);
		collection.add(142.0);
		collection.add(168.0);
		collection.add(54.0);
		collection.add(58.0);
		collection.add(85.0);
		collection.add(84.0);
		collection.add(36.0);
		collection.add(149.0);
		collection.add(118.0);
		collection.add(197.0);
		collection.add(79.0);
		collection.add(187.0);
		collection.add(188.0);
		collection.add(109.0);
		collection.add(65.0);
		collection.add(126.0);
		collection.add(21.0);
		collection.add(72.0);
		collection.add(190.0);
		collection.add(29.0);
		collection.add(36.0);
		collection.add(20.0);
		collection.add(120.0);
		collection.add(73.0);
		collection.add(129.0);
		collection.add(13.0);
		collection.add(163.0);
		collection.add(128.0);
		collection.add(42.0);
		collection.add(182.0);
		collection.add(134.0);
		collection.add(80.0);
		collection.add(37.0);
		collection.add(16.0);
		collection.add(137.0);
		collection.add(156.0);
		collection.add(46.0);
		collection.add(53.0);
		collection.add(195.0);
		collection.add(42.0);
		collection.add(109.0);
		collection.add(72.0);
		collection.add(157.0);
		collection.add(43.0);
		collection.add(162.0);
		collection.add(167.0);
		collection.add(8.0);
		collection.add(163.0);
		collection.add(92.0);
		collection.add(87.0);
		collection.add(180.0);
		collection.add(89.0);
		collection.add(141.0);
		collection.add(16.0);
		collection.add(138.0);
		collection.add(71.0);
		collection.add(104.0);
		collection.add(158.0);
		collection.add(4.0);
		collection.add(34.0);
		collection.add(41.0);
		collection.add(172.0);
		collection.add(103.0);
		collection.add(131.0);
		collection.add(175.0);
		collection.add(178.0);
		collection.add(11.0);
		collection.add(166.0);
		collection.add(31.0);
		collection.add(144.0);
		collection.add(32.0);
		collection.add(10.0);
		collection.add(54.0);
		collection.add(105.0);
		collection.add(122.0);
		collection.add(22.0);
		collection.add(143.0);
		collection.add(160.0);
		collection.add(48.0);
		collection.add(2.0);
		collection.add(36.0);
		collection.add(58.0);
		collection.add(43.0);
		collection.add(163.0);
		collection.add(92.0);
		collection.add(53.0);
		collection.add(22.0);
		collection.add(85.0);
		collection.add(91.0);
		collection.add(34.0);
		collection.add(61.0);
		collection.add(20.0);
		collection.add(52.0);
		collection.add(130.0);
		collection.add(183.0);
		collection.add(53.0);
		collection.add(114.0);
		collection.add(4.0);
		collection.add(4.0);
		collection.add(135.0);
		collection.add(106.0);
		collection.add(109.0);
		collection.add(93.0);
		collection.add(102.0);
		collection.add(50.0);
		collection.add(165.0);
		collection.add(120.0);
		collection.add(39.0);
		collection.add(37.0);
		collection.add(131.0);
		collection.add(161.0);
		collection.add(109.0);
		collection.add(88.0);
		collection.add(94.0);
		collection.add(173.0);
		collection.add(133.0);
		collection.add(135.0);
		collection.add(50.0);
		collection.add(200.0);
		collection.add(99.0);
		collection.add(190.0);
		collection.add(96.0);
		collection.add(184.0);
		collection.add(186.0);
		collection.add(49.0);
		collection.add(7.0);
		collection.add(184.0);
		collection.add(174.0);
		collection.add(85.0);
		collection.add(86.0);
		collection.add(122.0);
		collection.add(138.0);
		collection.add(39.0);
		collection.add(61.0);
		collection.add(59.0);
		collection.add(89.0);
		collection.add(106.0);
		collection.add(135.0);
		collection.add(146.0);
		collection.add(79.0);
		collection.add(194.0);
		collection.add(63.0);
		collection.add(114.0);
		collection.add(167.0);
		collection.add(54.0);
		collection.add(34.0);
		collection.add(155.0);
		collection.add(68.0);
		collection.add(146.0);
		collection.add(104.0);
		collection.add(51.0);
		collection.add(52.0);
		collection.add(86.0);
		collection.add(93.0);
		collection.add(152.0);
		collection.add(32.0);
		collection.add(31.0);
		collection.add(35.0);
		collection.add(121.0);
		collection.add(82.0);
		collection.add(89.0);
		collection.add(70.0);
		collection.add(99.0);
		collection.add(57.0);
		collection.add(107.0);
		collection.add(51.0);
		collection.add(1.0);
		collection.add(99.0);
		collection.add(4.0);
		collection.add(156.0);
		collection.add(124.0);
		collection.add(155.0);
		collection.add(80.0);
		collection.add(23.0);
		collection.add(103.0);
		collection.add(137.0);
		collection.add(197.0);
		collection.add(87.0);
		collection.add(31.0);
		collection.add(25.0);
		collection.add(29.0);
		collection.add(74.0);
		collection.add(168.0);
		collection.add(69.0);
		collection.add(106.0);
		collection.add(22.0);
		collection.add(52.0);
		collection.add(39.0);
		collection.add(119.0);
		collection.add(59.0);
		collection.add(64.0);
		collection.add(42.0);
		collection.add(145.0);
		collection.add(100.0);
		collection.add(58.0);
		collection.add(35.0);
		collection.add(118.0);
		collection.add(119.0);
		collection.add(65.0);
		collection.add(23.0);
		collection.add(126.0);
		collection.add(51.0);
		collection.add(154.0);
		collection.add(44.0);
		collection.add(171.0);
		collection.add(8.0);
		collection.add(136.0);
		collection.add(1.0);
		collection.add(17.0);
		collection.add(2.0);
		collection.add(134.0);
		collection.add(13.0);
		collection.add(136.0);
		collection.add(93.0);
		collection.add(68.0);
		collection.add(102.0);
		collection.add(100.0);
		collection.add(199.0);
		collection.add(65.0);
		collection.add(166.0);
		collection.add(2.0);
		collection.add(32.0);
		collection.add(25.0);
		collection.add(153.0);
		collection.add(72.0);
		collection.add(98.0);
		collection.add(7.0);
		collection.add(174.0);
		collection.add(50.0);
		collection.add(132.0);
		collection.add(23.0);
		collection.add(91.0);
		collection.add(145.0);
		collection.add(24.0);
		collection.add(1.0);
		collection.add(194.0);
		collection.add(6.0);
		collection.add(195.0);
		collection.add(99.0);
		collection.add(99.0);
		collection.add(193.0);
		collection.add(180.0);
		collection.add(61.0);
		collection.add(76.0);
		collection.add(51.0);
		collection.add(122.0);
		collection.add(32.0);
		collection.add(13.0);
		collection.add(6.0);
		collection.add(82.0);
		collection.add(46.0);
		collection.add(191.0);
		collection.add(57.0);
		collection.add(103.0);
		collection.add(59.0);
		collection.add(80.0);
		collection.add(90.0);
		collection.add(121.0);
		collection.add(137.0);
		collection.add(122.0);
		collection.add(119.0);
		collection.add(96.0);
		collection.add(3.0);
		collection.add(30.0);
		collection.add(196.0);
		collection.add(136.0);
		collection.add(44.0);
		collection.add(48.0);
		collection.add(149.0);
		collection.add(52.0);
		collection.add(185.0);
		collection.add(33.0);
		collection.add(171.0);
		collection.add(145.0);
		collection.add(32.0);
		collection.add(12.0);
		collection.add(130.0);
		collection.add(117.0);
		collection.add(51.0);
		collection.add(70.0);
		collection.add(47.0);
		collection.add(73.0);
		collection.add(184.0);
		collection.add(172.0);
		collection.add(38.0);
		collection.add(125.0);
		collection.add(75.0);
		collection.add(176.0);
		collection.add(175.0);
		collection.add(155.0);
		collection.add(89.0);
		collection.add(126.0);
		collection.add(42.0);
		collection.add(164.0);
		collection.add(68.0);
		collection.add(114.0);
		collection.add(7.0);
		collection.add(173.0);
		collection.add(44.0);
		collection.add(59.0);
		collection.add(107.0);
		collection.add(56.0);
		collection.add(188.0);
		collection.add(78.0);
		collection.add(182.0);
		collection.add(191.0);
		collection.add(91.0);
		collection.add(100.0);
		collection.add(81.0);
		collection.add(141.0);
		collection.add(107.0);
		collection.add(61.0);
		collection.add(10.0);
		collection.add(10.0);
		collection.add(13.0);
		collection.add(18.0);
		collection.add(70.0);
		collection.add(120.0);
		collection.add(93.0);
		collection.add(194.0);
		collection.add(174.0);
		collection.add(12.0);
		collection.add(104.0);
		collection.add(48.0);
		collection.add(109.0);
		collection.add(11.0);
		collection.add(193.0);
		collection.add(33.0);
		collection.add(56.0);
		collection.add(162.0);
		collection.add(91.0);
		collection.add(102.0);
		collection.add(181.0);
		collection.add(44.0);
		collection.add(2.0);
		collection.add(61.0);
		collection.add(142.0);
		collection.add(16.0);
		collection.add(11.0);
		collection.add(110.0);
		collection.add(96.0);
		collection.add(78.0);
		collection.add(197.0);
		collection.add(141.0);
		collection.add(12.0);
		collection.add(100.0);
		collection.add(54.0);
		collection.add(110.0);
		collection.add(60.0);
		collection.add(140.0);
		collection.add(135.0);
		collection.add(99.0);
		collection.add(96.0);
		collection.add(134.0);
		collection.add(197.0);
		collection.add(94.0);
		collection.add(136.0);
		collection.add(192.0);
		collection.add(165.0);
		collection.add(35.0);
		collection.add(93.0);
		collection.add(199.0);
		collection.add(17.0);
		collection.add(24.0);
		collection.add(181.0);
		collection.add(190.0);
		collection.add(153.0);
		collection.add(108.0);
		collection.add(69.0);
		collection.add(172.0);
		collection.add(124.0);
		collection.add(6.0);
		collection.add(3.0);
		collection.add(74.0);
		collection.add(34.0);
		collection.add(161.0);
		collection.add(65.0);
		collection.add(23.0);
		collection.add(95.0);
		collection.add(30.0);
		collection.add(6.0);
		collection.add(193.0);
		collection.add(188.0);
		collection.add(151.0);
		collection.add(167.0);
		collection.add(177.0);
		collection.add(119.0);
		collection.add(25.0);
		collection.add(174.0);
		collection.add(102.0);
		collection.add(62.0);
		collection.add(167.0);
		collection.add(10.0);
		collection.add(122.0);
		collection.add(71.0);
		collection.add(195.0);
		collection.add(91.0);
		collection.add(173.0);
		collection.add(27.0);
		collection.add(199.0);
		collection.add(198.0);
		collection.add(116.0);
		collection.add(174.0);
		collection.add(24.0);
		collection.add(32.0);
		collection.add(86.0);
		collection.add(27.0);
		collection.add(150.0);
		collection.add(196.0);
		collection.add(190.0);
		collection.add(15.0);
		collection.add(114.0);
		collection.add(114.0);
		collection.add(59.0);
		collection.add(59.0);
		collection.add(166.0);
		collection.add(56.0);
		collection.add(119.0);
		collection.add(30.0);
		collection.add(148.0);
		collection.add(3.0);
		collection.add(19.0);
		collection.add(42.0);
		collection.add(30.0);
		collection.add(61.0);
		collection.add(192.0);
		collection.add(63.0);
		collection.add(115.0);
		collection.add(120.0);
		collection.add(2.0);
		collection.add(102.0);
		collection.add(123.0);
		collection.add(197.0);
		collection.add(185.0);
		collection.add(56.0);
		collection.add(173.0);
		collection.add(72.0);
		collection.add(96.0);
		collection.add(35.0);
		collection.add(143.0);
		collection.add(42.0);
		collection.add(26.0);
		collection.add(175.0);
		collection.add(140.0);
		collection.add(38.0);
		collection.add(39.0);
		collection.add(31.0);
		collection.add(57.0);
		collection.add(125.0);
		collection.add(137.0);
		collection.add(63.0);
		collection.add(124.0);
		collection.add(40.0);
		collection.add(105.0);
		collection.add(83.0);
		collection.add(159.0);
		collection.add(197.0);
		collection.add(132.0);
		collection.add(180.0);
		collection.add(177.0);
		collection.add(26.0);
		collection.add(75.0);
		collection.add(174.0);
		collection.add(120.0);
		collection.add(72.0);
		collection.add(158.0);
		collection.add(137.0);
		collection.add(101.0);
		collection.add(149.0);
		collection.add(138.0);
		collection.add(154.0);
		collection.add(181.0);
		collection.add(113.0);
		collection.add(183.0);
		collection.add(134.0);
		collection.add(57.0);
		collection.add(36.0);
		collection.add(3.0);
		collection.add(17.0);
		collection.add(91.0);
		collection.add(95.0);
		collection.add(44.0);
		collection.add(197.0);
		collection.add(67.0);
		collection.add(87.0);
		collection.add(98.0);
		collection.add(94.0);
		collection.add(26.0);
		collection.add(63.0);
		collection.add(118.0);
		collection.add(187.0);
		collection.add(114.0);
		collection.add(60.0);
		collection.add(6.0);
		collection.add(186.0);
		collection.add(24.0);
		collection.add(8.0);
		collection.add(192.0);
		collection.add(94.0);
		collection.add(155.0);
		collection.add(122.0);
		collection.add(90.0);
		collection.add(51.0);
		collection.add(129.0);
		collection.add(98.0);
		collection.add(10.0);
		collection.add(32.0);
		collection.add(178.0);
		collection.add(92.0);
		collection.add(97.0);
		collection.add(136.0);
		collection.add(58.0);
		collection.add(27.0);
		collection.add(121.0);
		collection.add(198.0);
		collection.add(44.0);
		collection.add(93.0);
		collection.add(33.0);
		collection.add(40.0);
		collection.add(103.0);
		collection.add(131.0);
		collection.add(102.0);
		collection.add(35.0);
		collection.add(25.0);
		collection.add(121.0);
		collection.add(151.0);
		collection.add(66.0);
		collection.add(76.0);
		collection.add(15.0);
		collection.add(146.0);
		collection.add(153.0);
		collection.add(194.0);
		collection.add(124.0);
		collection.add(84.0);
		collection.add(49.0);
		collection.add(66.0);
		collection.add(6.0);
		collection.add(14.0);
		collection.add(187.0);
		collection.add(24.0);
		collection.add(189.0);
		collection.add(15.0);
		collection.add(22.0);
		collection.add(104.0);
		collection.add(160.0);
		collection.add(125.0);
		collection.add(12.0);
		collection.add(83.0);
		collection.add(131.0);
		collection.add(93.0);
		collection.add(99.0);
		collection.add(128.0);
		collection.add(154.0);
		collection.add(150.0);
		collection.add(112.0);
		collection.add(11.0);
		collection.add(88.0);
		collection.add(75.0);
		collection.add(15.0);
		collection.add(59.0);
		collection.add(8.0);
		collection.add(114.0);
		collection.add(192.0);
		collection.add(115.0);
		collection.add(79.0);
		collection.add(173.0);
		collection.add(83.0);
		collection.add(176.0);
		collection.add(117.0);
		collection.add(73.0);
		collection.add(158.0);
		collection.add(116.0);
		collection.add(24.0);
		collection.add(199.0);
		collection.add(176.0);
		collection.add(124.0);
		collection.add(108.0);
		collection.add(167.0);
		collection.add(86.0);
		collection.add(43.0);
		collection.add(177.0);
		collection.add(30.0);
		collection.add(165.0);
		collection.add(162.0);
		collection.add(156.0);
		collection.add(35.0);
		collection.add(199.0);
		collection.add(177.0);
		collection.add(61.0);
		collection.add(64.0);
		collection.add(163.0);
		collection.add(113.0);
		collection.add(190.0);
		collection.add(172.0);
		collection.add(103.0);
		collection.add(153.0);
		collection.add(69.0);
		collection.add(144.0);
		collection.add(140.0);
		collection.add(198.0);
		collection.add(188.0);
		collection.add(51.0);
		collection.add(194.0);
		collection.add(76.0);
		collection.add(71.0);
		collection.add(100.0);
		collection.add(13.0);
		collection.add(2.0);
		collection.add(93.0);
		collection.add(180.0);
		collection.add(120.0);
		collection.add(45.0);
		collection.add(128.0);
		collection.add(192.0);
		collection.add(106.0);
		collection.add(62.0);
		collection.add(191.0);
		collection.add(128.0);
		collection.add(187.0);
		collection.add(178.0);
		collection.add(148.0);
		collection.add(91.0);
		collection.add(47.0);
		collection.add(115.0);
		collection.add(138.0);
		collection.add(35.0);
		collection.add(153.0);
		collection.add(189.0);
		collection.add(88.0);
		collection.add(149.0);
		collection.add(11.0);
		collection.add(52.0);
		collection.add(149.0);
		collection.add(166.0);
		collection.add(23.0);
		collection.add(54.0);
		collection.add(37.0);
		collection.add(62.0);
		collection.add(190.0);
		collection.add(110.0);
		collection.add(186.0);
		collection.add(198.0);
		collection.add(146.0);
		collection.add(176.0);
		collection.add(162.0);
		collection.add(74.0);
		collection.add(128.0);
		collection.add(189.0);
		collection.add(189.0);
		collection.add(96.0);
		collection.add(132.0);
		collection.add(60.0);
		collection.add(134.0);
		collection.add(118.0);
		collection.add(8.0);
		collection.add(170.0);
		collection.add(20.0);
		collection.add(173.0);
		collection.add(96.0);
		collection.add(31.0);
		collection.add(161.0);
		collection.add(22.0);
		collection.add(51.0);
		collection.add(151.0);
		collection.add(99.0);
		collection.add(42.0);
		collection.add(88.0);
		collection.add(133.0);
		collection.add(136.0);
		collection.add(136.0);
		collection.add(175.0);
		collection.add(31.0);
		collection.add(190.0);
		collection.add(182.0);
		collection.add(54.0);
		collection.add(53.0);
		collection.add(95.0);
		collection.add(153.0);
		collection.add(59.0);
		collection.add(167.0);
		collection.add(194.0);
		collection.add(15.0);
		collection.add(14.0);
		collection.add(67.0);
		collection.add(62.0);
		collection.add(177.0);
		collection.add(11.0);
		collection.add(54.0);
		collection.add(101.0);
		collection.add(177.0);
		collection.add(109.0);
		collection.add(11.0);
		collection.add(150.0);
		collection.add(35.0);
		collection.add(191.0);
		collection.add(179.0);
		collection.add(8.0);
		collection.add(124.0);
		collection.add(29.0);
		collection.add(41.0);
		collection.add(26.0);
		collection.add(122.0);
		collection.add(59.0);
		collection.add(66.0);
		collection.add(2.0);
		collection.add(156.0);
		collection.add(174.0);
		collection.add(14.0);
		collection.add(18.0);
		collection.add(13.0);
		collection.add(24.0);
		collection.add(57.0);
		collection.add(115.0);
		collection.add(178.0);
		collection.add(45.0);
		collection.add(80.0);
		collection.add(1.0);
		collection.add(153.0);
		collection.add(147.0);
		collection.add(92.0);
		collection.add(115.0);
		collection.add(23.0);
		collection.add(24.0);
		collection.add(142.0);
		collection.add(99.0);
		collection.add(146.0);
		collection.add(50.0);
		collection.add(160.0);
		collection.add(63.0);
		collection.add(5.0);
		collection.add(196.0);
		collection.add(6.0);
		collection.add(198.0);
		collection.add(57.0);
		collection.add(91.0);
		collection.add(17.0);
		collection.add(75.0);
		collection.add(13.0);
		collection.add(138.0);
		collection.add(113.0);
		collection.add(143.0);
		collection.add(194.0);
		collection.add(188.0);
		collection.add(95.0);
		collection.add(130.0);
		collection.add(164.0);
		collection.add(184.0);
		collection.add(26.0);
		collection.add(120.0);
		collection.add(192.0);
		collection.add(11.0);
		collection.add(41.0);
		collection.add(22.0);
		collection.add(91.0);
		collection.add(18.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=30)
	public void JHashSet(Blackhole bh) {
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,64.0,146.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,99.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,93.0,174.0,143.0,22.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,113.0,69.0,87.0,149.0,192.0,10.0,109.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,151.0,132.0,18.0,88.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,47.0,128.0,115.0,167.0,47.0,35.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,175.0,180.0,43.0,81.0,59.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,169.0,94.0,57.0,200.0,89.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,178.0,168.0,133.0,43.0,187.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,121.0,127.0,152.0,90.0,3.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,152.0,7.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,91.0,78.0,78.0,4.0,152.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,132.0,54.0,22.0,112.0,189.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,186.0,131.0,105.0,164.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,77.0,171.0,189.0,172.0,44.0,174.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,18.0,109.0,188.0,35.0,70.0,44.0,118.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,167.0,118.0,176.0,64.0,130.0,173.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,113.0,47.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,188.0,65.0,108.0,191.0,77.0,27.0,145.0,193.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,82.0,10.0,100.0,196.0,39.0,119.0,64.0,194.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,166.0,94.0,97.0,24.0,136.0,137.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,17.0,182.0,170.0,49.0,86.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,26.0,16.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,4.0,39.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,188.0,159.0,107.0,83.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,50.0,20.0,71.0,112.0,192.0,84.0,173.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,170.0,175.0,29.0,146.0,19.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,94.0,118.0,67.0,32.0,160.0,198.0,128.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,123.0,14.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,4.0,168.0,39.0,163.0,54.0,178.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,186.0,89.0,189.0,82.0,40.0,158.0,111.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,31.0,138.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,193.0,155.0,80.0,69.0,186.0,193.0,185.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,139.0,35.0,46.0,33.0,59.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,88.0,11.0,179.0,51.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,149.0,142.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,18.0,125.0,72.0,108.0,2.0,141.0,116.0,9.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,167.0,49.0,75.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,119.0,108.0,134.0,30.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,177.0,28.0,139.0,179.0,33.0,195.0,159.0,80.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,52.0,116.0,141.0,118.0,168.0,193.0,178.0,96.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,170.0,40.0,22.0,89.0,87.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,153.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,177.0,141.0,87.0,184.0,44.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,14.0,187.0,83.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,61.0,62.0,188.0,58.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,76.0,97.0,71.0,174.0,64.0,136.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,134.0,5.0,96.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,198.0,180.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,187.0,3.0,107.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,181.0,7.0,181.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,112.0,187.0,167.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,192.0,38.0,180.0,121.0,86.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,119.0,51.0,115.0,43.0,83.0,162.0,141.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,74.0,134.0,116.0,111.0,136.0,171.0,18.0,60.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,114.0,113.0,126.0,58.0,28.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,90.0,7.0,27.0,143.0,174.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,65.0,40.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,136.0,132.0,136.0,198.0,97.0,32.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,114.0,51.0,165.0,4.0,151.0,13.0,34.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,20.0,96.0,48.0,63.0,182.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,44.0,65.0,144.0,10.0,89.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,146.0,50.0,9.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,184.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,188.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,150.0,86.0,58.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,197.0,73.0,144.0,8.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,67.0,27.0,174.0,23.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,96.0,7.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,111.0,38.0,68.0,142.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,138.0,95.0,158.0,130.0,44.0,172.0,136.0,117.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,186.0,123.0,118.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,20.0,189.0,17.0,1.0,165.0,46.0,88.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,123.0,168.0,78.0,51.0,91.0,137.0,26.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,150.0,166.0,122.0,76.0,93.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,167.0,49.0,183.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,134.0,162.0,166.0,71.0,92.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,113.0,25.0,26.0,42.0,191.0,157.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,71.0,6.0,79.0,179.0,150.0,104.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,159.0,105.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,4.0,172.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,115.0,90.0,175.0,44.0,113.0,146.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,149.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,113.0,26.0,149.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,61.0,83.0,22.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,3.0,23.0,17.0,100.0,8.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,44.0,46.0,101.0,67.0,143.0,160.0,178.0,98.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,109.0,19.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,45.0,105.0,110.0,115.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,116.0,101.0,23.0,106.0,137.0,28.0,49.0,60.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,62.0,74.0,115.0,74.0,33.0,81.0,15.0,174.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,95.0,173.0,184.0,191.0,77.0,17.0,120.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,20.0,55.0,151.0,178.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,93.0,172.0,13.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,198.0,89.0,164.0,53.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,35.0,37.0,116.0,183.0,171.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,22.0,159.0,161.0,130.0,143.0,53.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,76.0,30.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,176.0,27.0,162.0,102.0,181.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,130.0,56.0,84.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,93.0,131.0,167.0,118.0,184.0,7.0,87.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,70.0,73.0,72.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,71.0,179.0,147.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,89.0,198.0,124.0,136.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,168.0,77.0,130.0,187.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,180.0,130.0,52.0,184.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,25.0,14.0,29.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,22.0,126.0,176.0,150.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,80.0,170.0,17.0,20.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,65.0,140.0,182.0,39.0,150.0,52.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,156.0,121.0,52.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(135.0,91.0,89.0,107.0,29.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,142.0,88.0,139.0,54.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,108.0,23.0,157.0,103.0,98.0,95.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,142.0,112.0,182.0,40.0,192.0,41.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,89.0,90.0,22.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,101.0,153.0,195.0,95.0,71.0,141.0,58.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,173.0,110.0,54.0,179.0,164.0,89.0,35.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,188.0,82.0,51.0,84.0,47.0,194.0,20.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,193.0,48.0,85.0,161.0,117.0,18.0,80.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,125.0,185.0,20.0,2.0,116.0,54.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,44.0,70.0,103.0,188.0,24.0,142.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,46.0,197.0,188.0,127.0,8.0,40.0,70.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,166.0,150.0,26.0,130.0,10.0,66.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,74.0,102.0,119.0,186.0,198.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,19.0,167.0,79.0,109.0,49.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,20.0,100.0,18.0,164.0,55.0,52.0,47.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,177.0,37.0,43.0,174.0,130.0,56.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,17.0,144.0,194.0,97.0,165.0,17.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,39.0,171.0,18.0,103.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,166.0,1.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,174.0,103.0,148.0,151.0,143.0,37.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,19.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,46.0,53.0,41.0,15.0,168.0,133.0,144.0,168.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,198.0,134.0,110.0,103.0,143.0,22.0,142.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,15.0,169.0,141.0,145.0,196.0,55.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,161.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,59.0,62.0,20.0,50.0,35.0,129.0,64.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,88.0,67.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,20.0,16.0,27.0,53.0,193.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,93.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,75.0,93.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,117.0,81.0,132.0,96.0,182.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,65.0,186.0,72.0,101.0,75.0,101.0,27.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,74.0,62.0,66.0,33.0,57.0,157.0,44.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,164.0,189.0,158.0,32.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,178.0,172.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,138.0,85.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,139.0,128.0,88.0,137.0,75.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,124.0,94.0,61.0,120.0,85.0,148.0,44.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,130.0,83.0,40.0,88.0,166.0,61.0,72.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,15.0,9.0,182.0,126.0,112.0,194.0,135.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,147.0,6.0,55.0,59.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,55.0,112.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,128.0,77.0,26.0,196.0,13.0,41.0,70.0,151.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,129.0,82.0,148.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,70.0,34.0,48.0,125.0,44.0,55.0,14.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,188.0,138.0,6.0,91.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,182.0,19.0,35.0,35.0,115.0,65.0,19.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,49.0,79.0,107.0,9.0,53.0,44.0,153.0,194.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,52.0,151.0,170.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,196.0,43.0,71.0,113.0,179.0,74.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,180.0,54.0,28.0,11.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,176.0,82.0,116.0,69.0,4.0,181.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,50.0,151.0,150.0,136.0,15.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,200.0,52.0,166.0,98.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,8.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,72.0,75.0,90.0,108.0,16.0,181.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,148.0,153.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,88.0,41.0,111.0,115.0,136.0,103.0,103.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,193.0,63.0,196.0,195.0,99.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,19.0,48.0,68.0,8.0,34.0,111.0,48.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,188.0,24.0,73.0,195.0,49.0,15.0,72.0,7.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,72.0,96.0,7.0,81.0,193.0,195.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,72.0,185.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,31.0,138.0,88.0,177.0,11.0,5.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,41.0,88.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,54.0,9.0,152.0,93.0,56.0,47.0,6.0,153.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,33.0,120.0,181.0,132.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,148.0,191.0,196.0,32.0,29.0,192.0,123.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,136.0,171.0,182.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,160.0,147.0,68.0,196.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,66.0,187.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,79.0,21.0,59.0,160.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,15.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,63.0,23.0,110.0,199.0,90.0,42.0,120.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,162.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,76.0,157.0,110.0,165.0,177.0,11.0,39.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,81.0,36.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,172.0,45.0,198.0,171.0,77.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,157.0,175.0,121.0,59.0,48.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,91.0,3.0,82.0,186.0,194.0,35.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,82.0,19.0,149.0,104.0,99.0,124.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,94.0,34.0,7.0,180.0,135.0,12.0,24.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,81.0,31.0,92.0,103.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,83.0,1.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,123.0,65.0,134.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,51.0,84.0,68.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,89.0,45.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,200.0,159.0,173.0,83.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,157.0,72.0,60.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,56.0,192.0,97.0,86.0,114.0,31.0,30.0,123.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,164.0,28.0,39.0,66.0,133.0,167.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,35.0,141.0,115.0,84.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,154.0,63.0,85.0,116.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,158.0,83.0,80.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,134.0,199.0,140.0,112.0,47.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,141.0,196.0,20.0,74.0,175.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,44.0,32.0,2.0,159.0,181.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,125.0,77.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,99.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,158.0,53.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,77.0,192.0,43.0,71.0,50.0,71.0,137.0,142.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,56.0,86.0,33.0,172.0,196.0,71.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,15.0,200.0,141.0,200.0,187.0,6.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,97.0,172.0,86.0,46.0,180.0,9.0,30.0,51.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,116.0,105.0,16.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,156.0,177.0,126.0,21.0,10.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,182.0,103.0,50.0,126.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,108.0,25.0,69.0,161.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,46.0,156.0,79.0,108.0,171.0,171.0,182.0,103.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,183.0,74.0,44.0,63.0,51.0,163.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,89.0,158.0,151.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,86.0,43.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,105.0,125.0,104.0,18.0,151.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,54.0,127.0,135.0,57.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,49.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,45.0,9.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,125.0,140.0,156.0,139.0,107.0,162.0,131.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,38.0,133.0,200.0,79.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,152.0,96.0,45.0,32.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,41.0,12.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,51.0,11.0,154.0,177.0,177.0,200.0,42.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,16.0,186.0,48.0,177.0,144.0,3.0,156.0,139.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,35.0,194.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,148.0,108.0,72.0,30.0,27.0,174.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,161.0,128.0,69.0,60.0,83.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,29.0,189.0,126.0,148.0,2.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,10.0,38.0,152.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,164.0,126.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,166.0,86.0,161.0,87.0,71.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,184.0,50.0,122.0,59.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,3.0,22.0,128.0,63.0,199.0,12.0,151.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,115.0,193.0,63.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,96.0,24.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,197.0,60.0,140.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,170.0,86.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,13.0,181.0,45.0,20.0,100.0,121.0,172.0,60.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,157.0,145.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,161.0,38.0,142.0,65.0,189.0,96.0,123.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,64.0,8.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,190.0,26.0,162.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,123.0,130.0,44.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,188.0,44.0,194.0,179.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,78.0,170.0,47.0,99.0,70.0,120.0,147.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,50.0,183.0,42.0,93.0,48.0,92.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,188.0,128.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,27.0,53.0,198.0,31.0,157.0,99.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,157.0,166.0,166.0,41.0,24.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,11.0,199.0,27.0,200.0,172.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,159.0,63.0,44.0,46.0,2.0,4.0,27.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,171.0,130.0,1.0,196.0,159.0,57.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,110.0,129.0,10.0,5.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,136.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,117.0,78.0,33.0,33.0,161.0,9.0,142.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,34.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,28.0,114.0,168.0,176.0,5.0,88.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,31.0,1.0,179.0,59.0,78.0,95.0,17.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,122.0,34.0,130.0,83.0,78.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,154.0,33.0,113.0,115.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,86.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,62.0,184.0,19.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,110.0,192.0,132.0,192.0,132.0,111.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,4.0,20.0,113.0,64.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,190.0,92.0,3.0,52.0,61.0,80.0,81.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,165.0,87.0,13.0,97.0,15.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,110.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,2.0,145.0,64.0,63.0,194.0,89.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,161.0,1.0,67.0,19.0,40.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,134.0,48.0,166.0,127.0,71.0,55.0,130.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,25.0,109.0,46.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,147.0,77.0,98.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,167.0,45.0,172.0,193.0,133.0,31.0,132.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,175.0,126.0,146.0,64.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,81.0,24.0,160.0,36.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,2.0,90.0,55.0,149.0,14.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,25.0,66.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,61.0,130.0,73.0,5.0,161.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,129.0,151.0,1.0,194.0,85.0,192.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,112.0,19.0,116.0,85.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,109.0,98.0,168.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,104.0,29.0,52.0,141.0,131.0,137.0,85.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,77.0,150.0,53.0,22.0,93.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,82.0,25.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,22.0,143.0,73.0,56.0,111.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,90.0,112.0,14.0,97.0,197.0,149.0,194.0,84.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,69.0,61.0,97.0,69.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,173.0,119.0,12.0,122.0,189.0,165.0,187.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,32.0,133.0,157.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,39.0,109.0,9.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,20.0,36.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,155.0,141.0,42.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,200.0,167.0,199.0,138.0,27.0,126.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,47.0,144.0,69.0,79.0,173.0,114.0,108.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,170.0,11.0,20.0,151.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,93.0,141.0,146.0,67.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,40.0,60.0,133.0,117.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,69.0,188.0,38.0,96.0,126.0,114.0,117.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,96.0,21.0,88.0,51.0,110.0,168.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,146.0,80.0,77.0,29.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,11.0,79.0,27.0,137.0,89.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,79.0,68.0,49.0,5.0,152.0,20.0,51.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,78.0,157.0,47.0,29.0,199.0,45.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,20.0,68.0,92.0,64.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,53.0,35.0,162.0,63.0,98.0,184.0,134.0,181.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,113.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,89.0,170.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,28.0,98.0,181.0,16.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,129.0,173.0,118.0,127.0,153.0,95.0,116.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,182.0,74.0,183.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,187.0,158.0,132.0,55.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,164.0,72.0,122.0,67.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,153.0,93.0,68.0,61.0,130.0,196.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,105.0,115.0,122.0,29.0,174.0,174.0,71.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,195.0,126.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,10.0,86.0,100.0,181.0,184.0,156.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,6.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,184.0,111.0,168.0,32.0,21.0,107.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,69.0,171.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,131.0,165.0,104.0,165.0,90.0,78.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,55.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,38.0,146.0,179.0,5.0,121.0,176.0,51.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,196.0,7.0,24.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,25.0,20.0,24.0,73.0,23.0,197.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,173.0,119.0,36.0,44.0,186.0,139.0,180.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,25.0,2.0,61.0,174.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,20.0,87.0,138.0,116.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,64.0,110.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,75.0,166.0,190.0,45.0,148.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,182.0,122.0,152.0,129.0,122.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,120.0,138.0,4.0,39.0,187.0,187.0,103.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,7.0,43.0,165.0,30.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,29.0,108.0,110.0,77.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,136.0,181.0,140.0,5.0,32.0,93.0,138.0,45.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,151.0,82.0,11.0,67.0,90.0,47.0,138.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,79.0,42.0,55.0,157.0,198.0,19.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,93.0,28.0,199.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,191.0,139.0,145.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,115.0,23.0,87.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,2.0,102.0,145.0,162.0,200.0,128.0,96.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,36.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,87.0,113.0,146.0,198.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,48.0,166.0,43.0,89.0,71.0,111.0,58.0,197.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,101.0,126.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,175.0,54.0,38.0,190.0,67.0,76.0,141.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,174.0,112.0,71.0,127.0,111.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,139.0,169.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,6.0,160.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,31.0,154.0,110.0,103.0,31.0,181.0,167.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,200.0,104.0,133.0,161.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,87.0,158.0,168.0,140.0,88.0,30.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,62.0,172.0,169.0,59.0,105.0,139.0,132.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,60.0,184.0,96.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,140.0,107.0,168.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,160.0,135.0,170.0,153.0,18.0,143.0,51.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,146.0,116.0,132.0,54.0,51.0,145.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,40.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,194.0,36.0,49.0,199.0,145.0,59.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,103.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,132.0,52.0,32.0,95.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,93.0,165.0,43.0,141.0,178.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,193.0,9.0,72.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,183.0,200.0,133.0,104.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,54.0,15.0,105.0,115.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,170.0,147.0,148.0,12.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,174.0,92.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,46.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,9.0,5.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,193.0,74.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,119.0,174.0,66.0,138.0,81.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,127.0,34.0,112.0,94.0,107.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,67.0,188.0,148.0,2.0,107.0,80.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,148.0,182.0,71.0,100.0,55.0,90.0,200.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(182.0,94.0,165.0,195.0,31.0,105.0,112.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,32.0,184.0,80.0,162.0,96.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,127.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,173.0,164.0,43.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,68.0,81.0,6.0,51.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,89.0,17.0,5.0,79.0,146.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,111.0,120.0,172.0,72.0,78.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,152.0,82.0,173.0,124.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,126.0,169.0,178.0,160.0,114.0,183.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,81.0,196.0,159.0,159.0,98.0,117.0,103.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,196.0,143.0,8.0,180.0,198.0,87.0,39.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,101.0,17.0,115.0,23.0,11.0,27.0,108.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,199.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,108.0,171.0,17.0,126.0,22.0,7.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,42.0,159.0,41.0,13.0,140.0,174.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,193.0,5.0,166.0,118.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,166.0,1.0,188.0,99.0,133.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,97.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,10.0,103.0,167.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,21.0,84.0,172.0,161.0,86.0,43.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,124.0,128.0,115.0,120.0,49.0,47.0,34.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,57.0,148.0,98.0,22.0,190.0,158.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,57.0,138.0,7.0,72.0,35.0,98.0,97.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,154.0,96.0,39.0,90.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,82.0,93.0,15.0,149.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,144.0,90.0,171.0,119.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,163.0,35.0,110.0,9.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(79.0,97.0,182.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,41.0,99.0,75.0,161.0,52.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,160.0,195.0,192.0,45.0,99.0,171.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,107.0,176.0,99.0,190.0,64.0,145.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,181.0,58.0,5.0,72.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,58.0,161.0,139.0,105.0,16.0,137.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,99.0,136.0,6.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,61.0,51.0,70.0,67.0,139.0,21.0,62.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,8.0,65.0,148.0,71.0,92.0,15.0,191.0,150.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,98.0,164.0,173.0,37.0,5.0,12.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,110.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,23.0,59.0,192.0,92.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,149.0,32.0,120.0,36.0,61.0,13.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,140.0,38.0,106.0,81.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,151.0,103.0,40.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,104.0,46.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,170.0,92.0,101.0,38.0,78.0,42.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,9.0,1.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,14.0,55.0,106.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,20.0,188.0,97.0,102.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,89.0,116.0,115.0,34.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,171.0,72.0,69.0,90.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,53.0,70.0,141.0,163.0,100.0,86.0,150.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,64.0,1.0,68.0,193.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,169.0,189.0,177.0,53.0,184.0,74.0,130.0,19.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,151.0,163.0,183.0,15.0,32.0,116.0,3.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,24.0,137.0,65.0,110.0,95.0,74.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,4.0,48.0,178.0,104.0,3.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,52.0,123.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,140.0,100.0,26.0,54.0,165.0,72.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,139.0,29.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,159.0,159.0,3.0,159.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,179.0,39.0,119.0,140.0,105.0,105.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,97.0,92.0,119.0,43.0,63.0,46.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,2.0,5.0,79.0,102.0,67.0,68.0,184.0,97.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,12.0,40.0,176.0,159.0,104.0,137.0,23.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,95.0,170.0,185.0,105.0,135.0,53.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,156.0,200.0,136.0,9.0,30.0,31.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,67.0,77.0,151.0,123.0,70.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,92.0,186.0,72.0,198.0,27.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,180.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,136.0,104.0,33.0,75.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,127.0,76.0,41.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,159.0,8.0,135.0,200.0,188.0,198.0,38.0,110.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,134.0,39.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,180.0,101.0,162.0,15.0,67.0,24.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,92.0,156.0,79.0,143.0,143.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,120.0,51.0,198.0,161.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,38.0,144.0,37.0,113.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,111.0,100.0,43.0,1.0,67.0,20.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,103.0,96.0,60.0,46.0,194.0,186.0,164.0,28.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,78.0,124.0,139.0,79.0,69.0,128.0,53.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,73.0,53.0,75.0,154.0,28.0,9.0,142.0,65.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,122.0,142.0,121.0,20.0,105.0,122.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,112.0,3.0,163.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,182.0,28.0,93.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,50.0,158.0,185.0,168.0,46.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,145.0,11.0,23.0,4.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,122.0,149.0,39.0,133.0,135.0,124.0,194.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,11.0,192.0,193.0,89.0,199.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,79.0,121.0,72.0,180.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,29.0,2.0,91.0,109.0,47.0,162.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,122.0,2.0,159.0,110.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,78.0,171.0,69.0,111.0,190.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,173.0,160.0,185.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,196.0,159.0,142.0,116.0,117.0,48.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,22.0,160.0,5.0,64.0,192.0,119.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,48.0,199.0,155.0,96.0,172.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,51.0,181.0,62.0,157.0,64.0,121.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,175.0,137.0,34.0,2.0,148.0,46.0,51.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,149.0,73.0,171.0,165.0,200.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,166.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,81.0,184.0,182.0,131.0,172.0,108.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,197.0,99.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,132.0,173.0,85.0,14.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,130.0,92.0,51.0,49.0,135.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,83.0,125.0,179.0,143.0,158.0,76.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,82.0,50.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,44.0,32.0,62.0,134.0,63.0,66.0,134.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,132.0,142.0,160.0,1.0,115.0,127.0,102.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,41.0,65.0,22.0,58.0,26.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,126.0,61.0,134.0,156.0,86.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,156.0,181.0,166.0,174.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,132.0,39.0,160.0,177.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,47.0,52.0,151.0,186.0,59.0,32.0,3.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,45.0,2.0,170.0,50.0,20.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,175.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,180.0,51.0,191.0,12.0,199.0,141.0,22.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,187.0,120.0,108.0,156.0,135.0,38.0,186.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,62.0,22.0,25.0)));
	}
}
