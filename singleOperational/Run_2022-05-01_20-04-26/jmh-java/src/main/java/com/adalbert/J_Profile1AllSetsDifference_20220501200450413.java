package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile1AllSetsDifference_20220501200450413 {
	java.util.LinkedHashSet<Double> collection = new java.util.LinkedHashSet<>();
	@Setup(Level.Invocation)
	public void setupJLinkedSet() {
		collection = new java.util.LinkedHashSet<>();
		collection.add(91.0);
		collection.add(19.0);
		collection.add(81.0);
		collection.add(20.0);
		collection.add(41.0);
		collection.add(165.0);
		collection.add(22.0);
		collection.add(9.0);
		collection.add(93.0);
		collection.add(111.0);
		collection.add(3.0);
		collection.add(183.0);
		collection.add(131.0);
		collection.add(63.0);
		collection.add(142.0);
		collection.add(147.0);
		collection.add(145.0);
		collection.add(37.0);
		collection.add(111.0);
		collection.add(36.0);
		collection.add(23.0);
		collection.add(158.0);
		collection.add(83.0);
		collection.add(12.0);
		collection.add(18.0);
		collection.add(83.0);
		collection.add(5.0);
		collection.add(114.0);
		collection.add(81.0);
		collection.add(72.0);
		collection.add(32.0);
		collection.add(48.0);
		collection.add(96.0);
		collection.add(27.0);
		collection.add(133.0);
		collection.add(159.0);
		collection.add(42.0);
		collection.add(54.0);
		collection.add(113.0);
		collection.add(97.0);
		collection.add(31.0);
		collection.add(45.0);
		collection.add(126.0);
		collection.add(85.0);
		collection.add(117.0);
		collection.add(124.0);
		collection.add(116.0);
		collection.add(176.0);
		collection.add(51.0);
		collection.add(143.0);
		collection.add(125.0);
		collection.add(173.0);
		collection.add(196.0);
		collection.add(20.0);
		collection.add(75.0);
		collection.add(30.0);
		collection.add(53.0);
		collection.add(91.0);
		collection.add(30.0);
		collection.add(173.0);
		collection.add(185.0);
		collection.add(118.0);
		collection.add(97.0);
		collection.add(131.0);
		collection.add(42.0);
		collection.add(32.0);
		collection.add(76.0);
		collection.add(195.0);
		collection.add(54.0);
		collection.add(180.0);
		collection.add(132.0);
		collection.add(31.0);
		collection.add(26.0);
		collection.add(182.0);
		collection.add(53.0);
		collection.add(49.0);
		collection.add(196.0);
		collection.add(34.0);
		collection.add(156.0);
		collection.add(117.0);
		collection.add(198.0);
		collection.add(90.0);
		collection.add(78.0);
		collection.add(41.0);
		collection.add(129.0);
		collection.add(149.0);
		collection.add(107.0);
		collection.add(138.0);
		collection.add(99.0);
		collection.add(183.0);
		collection.add(118.0);
		collection.add(35.0);
		collection.add(140.0);
		collection.add(92.0);
		collection.add(192.0);
		collection.add(175.0);
		collection.add(87.0);
		collection.add(78.0);
		collection.add(113.0);
		collection.add(194.0);
		collection.add(78.0);
		collection.add(98.0);
		collection.add(133.0);
		collection.add(85.0);
		collection.add(38.0);
		collection.add(136.0);
		collection.add(116.0);
		collection.add(138.0);
		collection.add(142.0);
		collection.add(184.0);
		collection.add(69.0);
		collection.add(125.0);
		collection.add(7.0);
		collection.add(135.0);
		collection.add(100.0);
		collection.add(143.0);
		collection.add(99.0);
		collection.add(22.0);
		collection.add(119.0);
		collection.add(96.0);
		collection.add(127.0);
		collection.add(180.0);
		collection.add(168.0);
		collection.add(180.0);
		collection.add(165.0);
		collection.add(104.0);
		collection.add(140.0);
		collection.add(29.0);
		collection.add(77.0);
		collection.add(85.0);
		collection.add(1.0);
		collection.add(165.0);
		collection.add(182.0);
		collection.add(82.0);
		collection.add(128.0);
		collection.add(168.0);
		collection.add(21.0);
		collection.add(147.0);
		collection.add(123.0);
		collection.add(190.0);
		collection.add(111.0);
		collection.add(98.0);
		collection.add(124.0);
		collection.add(1.0);
		collection.add(116.0);
		collection.add(137.0);
		collection.add(189.0);
		collection.add(125.0);
		collection.add(65.0);
		collection.add(177.0);
		collection.add(23.0);
		collection.add(187.0);
		collection.add(199.0);
		collection.add(6.0);
		collection.add(84.0);
		collection.add(68.0);
		collection.add(65.0);
		collection.add(173.0);
		collection.add(178.0);
		collection.add(15.0);
		collection.add(126.0);
		collection.add(197.0);
		collection.add(188.0);
		collection.add(112.0);
		collection.add(199.0);
		collection.add(74.0);
		collection.add(151.0);
		collection.add(172.0);
		collection.add(12.0);
		collection.add(197.0);
		collection.add(105.0);
		collection.add(98.0);
		collection.add(104.0);
		collection.add(66.0);
		collection.add(77.0);
		collection.add(2.0);
		collection.add(36.0);
		collection.add(107.0);
		collection.add(49.0);
		collection.add(173.0);
		collection.add(95.0);
		collection.add(15.0);
		collection.add(172.0);
		collection.add(108.0);
		collection.add(21.0);
		collection.add(131.0);
		collection.add(36.0);
		collection.add(70.0);
		collection.add(79.0);
		collection.add(53.0);
		collection.add(4.0);
		collection.add(138.0);
		collection.add(189.0);
		collection.add(1.0);
		collection.add(87.0);
		collection.add(55.0);
		collection.add(142.0);
		collection.add(2.0);
		collection.add(162.0);
		collection.add(59.0);
		collection.add(17.0);
		collection.add(160.0);
		collection.add(45.0);
		collection.add(150.0);
		collection.add(49.0);
		collection.add(37.0);
		collection.add(170.0);
		collection.add(92.0);
		collection.add(181.0);
		collection.add(25.0);
		collection.add(3.0);
		collection.add(21.0);
		collection.add(133.0);
		collection.add(94.0);
		collection.add(35.0);
		collection.add(4.0);
		collection.add(131.0);
		collection.add(31.0);
		collection.add(103.0);
		collection.add(87.0);
		collection.add(146.0);
		collection.add(77.0);
		collection.add(175.0);
		collection.add(25.0);
		collection.add(86.0);
		collection.add(30.0);
		collection.add(43.0);
		collection.add(151.0);
		collection.add(24.0);
		collection.add(134.0);
		collection.add(140.0);
		collection.add(156.0);
		collection.add(166.0);
		collection.add(181.0);
		collection.add(126.0);
		collection.add(64.0);
		collection.add(33.0);
		collection.add(94.0);
		collection.add(87.0);
		collection.add(28.0);
		collection.add(198.0);
		collection.add(180.0);
		collection.add(73.0);
		collection.add(138.0);
		collection.add(154.0);
		collection.add(69.0);
		collection.add(59.0);
		collection.add(133.0);
		collection.add(191.0);
		collection.add(141.0);
		collection.add(83.0);
		collection.add(178.0);
		collection.add(86.0);
		collection.add(124.0);
		collection.add(172.0);
		collection.add(71.0);
		collection.add(42.0);
		collection.add(98.0);
		collection.add(25.0);
		collection.add(164.0);
		collection.add(86.0);
		collection.add(60.0);
		collection.add(162.0);
		collection.add(63.0);
		collection.add(13.0);
		collection.add(60.0);
		collection.add(106.0);
		collection.add(106.0);
		collection.add(53.0);
		collection.add(141.0);
		collection.add(97.0);
		collection.add(194.0);
		collection.add(130.0);
		collection.add(4.0);
		collection.add(6.0);
		collection.add(21.0);
		collection.add(146.0);
		collection.add(123.0);
		collection.add(38.0);
		collection.add(47.0);
		collection.add(54.0);
		collection.add(96.0);
		collection.add(127.0);
		collection.add(13.0);
		collection.add(51.0);
		collection.add(70.0);
		collection.add(139.0);
		collection.add(58.0);
		collection.add(42.0);
		collection.add(59.0);
		collection.add(112.0);
		collection.add(169.0);
		collection.add(91.0);
		collection.add(51.0);
		collection.add(181.0);
		collection.add(194.0);
		collection.add(44.0);
		collection.add(53.0);
		collection.add(15.0);
		collection.add(190.0);
		collection.add(56.0);
		collection.add(94.0);
		collection.add(48.0);
		collection.add(145.0);
		collection.add(4.0);
		collection.add(18.0);
		collection.add(53.0);
		collection.add(199.0);
		collection.add(161.0);
		collection.add(181.0);
		collection.add(159.0);
		collection.add(81.0);
		collection.add(70.0);
		collection.add(131.0);
		collection.add(53.0);
		collection.add(185.0);
		collection.add(53.0);
		collection.add(190.0);
		collection.add(105.0);
		collection.add(147.0);
		collection.add(159.0);
		collection.add(127.0);
		collection.add(33.0);
		collection.add(37.0);
		collection.add(165.0);
		collection.add(144.0);
		collection.add(23.0);
		collection.add(171.0);
		collection.add(189.0);
		collection.add(178.0);
		collection.add(28.0);
		collection.add(26.0);
		collection.add(181.0);
		collection.add(123.0);
		collection.add(93.0);
		collection.add(150.0);
		collection.add(127.0);
		collection.add(185.0);
		collection.add(188.0);
		collection.add(27.0);
		collection.add(193.0);
		collection.add(44.0);
		collection.add(103.0);
		collection.add(7.0);
		collection.add(37.0);
		collection.add(140.0);
		collection.add(75.0);
		collection.add(120.0);
		collection.add(139.0);
		collection.add(110.0);
		collection.add(186.0);
		collection.add(110.0);
		collection.add(118.0);
		collection.add(145.0);
		collection.add(17.0);
		collection.add(17.0);
		collection.add(180.0);
		collection.add(180.0);
		collection.add(162.0);
		collection.add(91.0);
		collection.add(88.0);
		collection.add(116.0);
		collection.add(112.0);
		collection.add(4.0);
		collection.add(77.0);
		collection.add(127.0);
		collection.add(170.0);
		collection.add(48.0);
		collection.add(133.0);
		collection.add(32.0);
		collection.add(64.0);
		collection.add(55.0);
		collection.add(105.0);
		collection.add(58.0);
		collection.add(81.0);
		collection.add(61.0);
		collection.add(78.0);
		collection.add(20.0);
		collection.add(95.0);
		collection.add(130.0);
		collection.add(99.0);
		collection.add(123.0);
		collection.add(131.0);
		collection.add(67.0);
		collection.add(188.0);
		collection.add(94.0);
		collection.add(76.0);
		collection.add(71.0);
		collection.add(110.0);
		collection.add(195.0);
		collection.add(65.0);
		collection.add(85.0);
		collection.add(158.0);
		collection.add(171.0);
		collection.add(166.0);
		collection.add(137.0);
		collection.add(108.0);
		collection.add(24.0);
		collection.add(159.0);
		collection.add(106.0);
		collection.add(95.0);
		collection.add(11.0);
		collection.add(100.0);
		collection.add(129.0);
		collection.add(50.0);
		collection.add(175.0);
		collection.add(75.0);
		collection.add(161.0);
		collection.add(53.0);
		collection.add(179.0);
		collection.add(164.0);
		collection.add(44.0);
		collection.add(142.0);
		collection.add(179.0);
		collection.add(156.0);
		collection.add(151.0);
		collection.add(57.0);
		collection.add(35.0);
		collection.add(11.0);
		collection.add(112.0);
		collection.add(113.0);
		collection.add(91.0);
		collection.add(5.0);
		collection.add(128.0);
		collection.add(128.0);
		collection.add(64.0);
		collection.add(191.0);
		collection.add(151.0);
		collection.add(86.0);
		collection.add(39.0);
		collection.add(130.0);
		collection.add(67.0);
		collection.add(161.0);
		collection.add(102.0);
		collection.add(195.0);
		collection.add(147.0);
		collection.add(2.0);
		collection.add(55.0);
		collection.add(7.0);
		collection.add(32.0);
		collection.add(132.0);
		collection.add(72.0);
		collection.add(77.0);
		collection.add(76.0);
		collection.add(197.0);
		collection.add(187.0);
		collection.add(191.0);
		collection.add(55.0);
		collection.add(68.0);
		collection.add(122.0);
		collection.add(118.0);
		collection.add(26.0);
		collection.add(155.0);
		collection.add(187.0);
		collection.add(136.0);
		collection.add(138.0);
		collection.add(70.0);
		collection.add(89.0);
		collection.add(131.0);
		collection.add(115.0);
		collection.add(115.0);
		collection.add(197.0);
		collection.add(40.0);
		collection.add(53.0);
		collection.add(136.0);
		collection.add(124.0);
		collection.add(98.0);
		collection.add(18.0);
		collection.add(48.0);
		collection.add(47.0);
		collection.add(160.0);
		collection.add(198.0);
		collection.add(126.0);
		collection.add(10.0);
		collection.add(47.0);
		collection.add(150.0);
		collection.add(116.0);
		collection.add(64.0);
		collection.add(134.0);
		collection.add(156.0);
		collection.add(17.0);
		collection.add(135.0);
		collection.add(114.0);
		collection.add(97.0);
		collection.add(182.0);
		collection.add(14.0);
		collection.add(9.0);
		collection.add(19.0);
		collection.add(26.0);
		collection.add(193.0);
		collection.add(178.0);
		collection.add(176.0);
		collection.add(27.0);
		collection.add(190.0);
		collection.add(175.0);
		collection.add(112.0);
		collection.add(106.0);
		collection.add(56.0);
		collection.add(191.0);
		collection.add(57.0);
		collection.add(27.0);
		collection.add(194.0);
		collection.add(127.0);
		collection.add(195.0);
		collection.add(107.0);
		collection.add(90.0);
		collection.add(121.0);
		collection.add(133.0);
		collection.add(1.0);
		collection.add(72.0);
		collection.add(91.0);
		collection.add(100.0);
		collection.add(154.0);
		collection.add(33.0);
		collection.add(151.0);
		collection.add(30.0);
		collection.add(113.0);
		collection.add(103.0);
		collection.add(34.0);
		collection.add(42.0);
		collection.add(17.0);
		collection.add(20.0);
		collection.add(95.0);
		collection.add(177.0);
		collection.add(19.0);
		collection.add(136.0);
		collection.add(28.0);
		collection.add(57.0);
		collection.add(64.0);
		collection.add(170.0);
		collection.add(56.0);
		collection.add(163.0);
		collection.add(100.0);
		collection.add(4.0);
		collection.add(137.0);
		collection.add(117.0);
		collection.add(104.0);
		collection.add(156.0);
		collection.add(164.0);
		collection.add(49.0);
		collection.add(19.0);
		collection.add(190.0);
		collection.add(60.0);
		collection.add(133.0);
		collection.add(25.0);
		collection.add(35.0);
		collection.add(58.0);
		collection.add(198.0);
		collection.add(195.0);
		collection.add(133.0);
		collection.add(175.0);
		collection.add(161.0);
		collection.add(115.0);
		collection.add(115.0);
		collection.add(7.0);
		collection.add(125.0);
		collection.add(63.0);
		collection.add(118.0);
		collection.add(126.0);
		collection.add(155.0);
		collection.add(64.0);
		collection.add(45.0);
		collection.add(190.0);
		collection.add(24.0);
		collection.add(9.0);
		collection.add(22.0);
		collection.add(116.0);
		collection.add(122.0);
		collection.add(49.0);
		collection.add(124.0);
		collection.add(87.0);
		collection.add(47.0);
		collection.add(148.0);
		collection.add(112.0);
		collection.add(112.0);
		collection.add(51.0);
		collection.add(30.0);
		collection.add(78.0);
		collection.add(168.0);
		collection.add(76.0);
		collection.add(84.0);
		collection.add(119.0);
		collection.add(191.0);
		collection.add(123.0);
		collection.add(38.0);
		collection.add(193.0);
		collection.add(121.0);
		collection.add(38.0);
		collection.add(62.0);
		collection.add(140.0);
		collection.add(69.0);
		collection.add(166.0);
		collection.add(50.0);
		collection.add(172.0);
		collection.add(76.0);
		collection.add(55.0);
		collection.add(148.0);
		collection.add(70.0);
		collection.add(14.0);
		collection.add(116.0);
		collection.add(35.0);
		collection.add(123.0);
		collection.add(6.0);
		collection.add(124.0);
		collection.add(182.0);
		collection.add(198.0);
		collection.add(121.0);
		collection.add(142.0);
		collection.add(132.0);
		collection.add(110.0);
		collection.add(154.0);
		collection.add(115.0);
		collection.add(103.0);
		collection.add(91.0);
		collection.add(189.0);
		collection.add(31.0);
		collection.add(128.0);
		collection.add(172.0);
		collection.add(137.0);
		collection.add(129.0);
		collection.add(164.0);
		collection.add(30.0);
		collection.add(185.0);
		collection.add(132.0);
		collection.add(127.0);
		collection.add(100.0);
		collection.add(184.0);
		collection.add(159.0);
		collection.add(38.0);
		collection.add(84.0);
		collection.add(51.0);
		collection.add(75.0);
		collection.add(192.0);
		collection.add(126.0);
		collection.add(103.0);
		collection.add(137.0);
		collection.add(126.0);
		collection.add(8.0);
		collection.add(64.0);
		collection.add(137.0);
		collection.add(48.0);
		collection.add(2.0);
		collection.add(164.0);
		collection.add(85.0);
		collection.add(172.0);
		collection.add(103.0);
		collection.add(76.0);
		collection.add(154.0);
		collection.add(11.0);
		collection.add(137.0);
		collection.add(125.0);
		collection.add(69.0);
		collection.add(116.0);
		collection.add(64.0);
		collection.add(196.0);
		collection.add(109.0);
		collection.add(61.0);
		collection.add(113.0);
		collection.add(24.0);
		collection.add(81.0);
		collection.add(110.0);
		collection.add(187.0);
		collection.add(44.0);
		collection.add(141.0);
		collection.add(55.0);
		collection.add(40.0);
		collection.add(175.0);
		collection.add(188.0);
		collection.add(89.0);
		collection.add(12.0);
		collection.add(57.0);
		collection.add(18.0);
		collection.add(94.0);
		collection.add(37.0);
		collection.add(198.0);
		collection.add(108.0);
		collection.add(35.0);
		collection.add(139.0);
		collection.add(117.0);
		collection.add(106.0);
		collection.add(49.0);
		collection.add(1.0);
		collection.add(191.0);
		collection.add(40.0);
		collection.add(16.0);
		collection.add(87.0);
		collection.add(178.0);
		collection.add(29.0);
		collection.add(193.0);
		collection.add(8.0);
		collection.add(133.0);
		collection.add(39.0);
		collection.add(139.0);
		collection.add(15.0);
		collection.add(9.0);
		collection.add(50.0);
		collection.add(65.0);
		collection.add(111.0);
		collection.add(177.0);
		collection.add(155.0);
		collection.add(17.0);
		collection.add(6.0);
		collection.add(43.0);
		collection.add(108.0);
		collection.add(107.0);
		collection.add(81.0);
		collection.add(97.0);
		collection.add(67.0);
		collection.add(22.0);
		collection.add(138.0);
		collection.add(119.0);
		collection.add(81.0);
		collection.add(71.0);
		collection.add(185.0);
		collection.add(93.0);
		collection.add(78.0);
		collection.add(182.0);
		collection.add(156.0);
		collection.add(3.0);
		collection.add(168.0);
		collection.add(133.0);
		collection.add(42.0);
		collection.add(186.0);
		collection.add(29.0);
		collection.add(73.0);
		collection.add(110.0);
		collection.add(146.0);
		collection.add(163.0);
		collection.add(11.0);
		collection.add(85.0);
		collection.add(145.0);
		collection.add(78.0);
		collection.add(15.0);
		collection.add(21.0);
		collection.add(125.0);
		collection.add(31.0);
		collection.add(125.0);
		collection.add(114.0);
		collection.add(19.0);
		collection.add(174.0);
		collection.add(68.0);
		collection.add(138.0);
		collection.add(199.0);
		collection.add(78.0);
		collection.add(106.0);
		collection.add(122.0);
		collection.add(106.0);
		collection.add(194.0);
		collection.add(113.0);
		collection.add(56.0);
		collection.add(72.0);
		collection.add(170.0);
		collection.add(133.0);
		collection.add(46.0);
		collection.add(111.0);
		collection.add(89.0);
		collection.add(177.0);
		collection.add(43.0);
		collection.add(45.0);
		collection.add(113.0);
		collection.add(49.0);
		collection.add(182.0);
		collection.add(87.0);
		collection.add(141.0);
		collection.add(38.0);
		collection.add(55.0);
		collection.add(171.0);
		collection.add(92.0);
		collection.add(96.0);
		collection.add(30.0);
		collection.add(115.0);
		collection.add(16.0);
		collection.add(162.0);
		collection.add(36.0);
		collection.add(7.0);
		collection.add(149.0);
		collection.add(200.0);
		collection.add(168.0);
		collection.add(63.0);
		collection.add(192.0);
		collection.add(90.0);
		collection.add(73.0);
		collection.add(19.0);
		collection.add(191.0);
		collection.add(103.0);
		collection.add(34.0);
		collection.add(144.0);
		collection.add(100.0);
		collection.add(32.0);
		collection.add(144.0);
		collection.add(127.0);
		collection.add(159.0);
		collection.add(124.0);
		collection.add(19.0);
		collection.add(166.0);
		collection.add(89.0);
		collection.add(175.0);
		collection.add(123.0);
		collection.add(43.0);
		collection.add(172.0);
		collection.add(111.0);
		collection.add(57.0);
		collection.add(169.0);
		collection.add(104.0);
		collection.add(156.0);
		collection.add(198.0);
		collection.add(159.0);
		collection.add(109.0);
		collection.add(27.0);
		collection.add(22.0);
		collection.add(76.0);
		collection.add(148.0);
		collection.add(24.0);
		collection.add(72.0);
		collection.add(153.0);
		collection.add(81.0);
		collection.add(166.0);
		collection.add(60.0);
		collection.add(169.0);
		collection.add(162.0);
		collection.add(51.0);
		collection.add(103.0);
		collection.add(129.0);
		collection.add(188.0);
		collection.add(192.0);
		collection.add(197.0);
		collection.add(44.0);
		collection.add(30.0);
		collection.add(46.0);
		collection.add(83.0);
		collection.add(122.0);
		collection.add(63.0);
		collection.add(73.0);
		collection.add(187.0);
		collection.add(149.0);
		collection.add(44.0);
		collection.add(143.0);
		collection.add(93.0);
		collection.add(82.0);
		collection.add(22.0);
		collection.add(160.0);
		collection.add(157.0);
		collection.add(71.0);
		collection.add(10.0);
		collection.add(13.0);
		collection.add(40.0);
		collection.add(103.0);
		collection.add(149.0);
		collection.add(191.0);
		collection.add(88.0);
		collection.add(22.0);
		collection.add(184.0);
		collection.add(125.0);
		collection.add(73.0);
		collection.add(7.0);
		collection.add(105.0);
		collection.add(152.0);
		collection.add(190.0);
		collection.add(146.0);
		collection.add(23.0);
		collection.add(31.0);
		collection.add(1.0);
		collection.add(154.0);
		collection.add(91.0);
		collection.add(17.0);
		collection.add(124.0);
		collection.add(90.0);
		collection.add(63.0);
		collection.add(8.0);
		collection.add(100.0);
		collection.add(180.0);
		collection.add(108.0);
		collection.add(6.0);
		collection.add(91.0);
		collection.add(140.0);
		collection.add(67.0);
		collection.add(164.0);
		collection.add(10.0);
		collection.add(169.0);
		collection.add(167.0);
		collection.add(134.0);
		collection.add(92.0);
		collection.add(157.0);
		collection.add(61.0);
		collection.add(26.0);
		collection.add(69.0);
		collection.add(76.0);
		collection.add(173.0);
		collection.add(97.0);
		collection.add(140.0);
		collection.add(83.0);
		collection.add(88.0);
		collection.add(28.0);
		collection.add(11.0);
		collection.add(67.0);
		collection.add(139.0);
		collection.add(192.0);
		collection.add(184.0);
		collection.add(18.0);
		collection.add(101.0);
		collection.add(102.0);
		collection.add(157.0);
		collection.add(163.0);
		collection.add(199.0);
		collection.add(157.0);
		collection.add(147.0);
		collection.add(4.0);
		collection.add(176.0);
		collection.add(141.0);
		collection.add(168.0);
		collection.add(51.0);
		collection.add(141.0);
		collection.add(132.0);
		collection.add(200.0);
		collection.add(62.0);
		collection.add(53.0);
		collection.add(114.0);
		collection.add(65.0);
		collection.add(29.0);
		collection.add(96.0);
		collection.add(46.0);
		collection.add(174.0);
		collection.add(171.0);
		collection.add(12.0);
		collection.add(119.0);
		collection.add(96.0);
		collection.add(121.0);
		collection.add(124.0);
		collection.add(74.0);
		collection.add(191.0);
		collection.add(81.0);
		collection.add(198.0);
		collection.add(169.0);
		collection.add(108.0);
		collection.add(184.0);
		collection.add(114.0);
		collection.add(69.0);
		collection.add(189.0);
		collection.add(157.0);
		collection.add(183.0);
		collection.add(143.0);
		collection.add(123.0);
		collection.add(163.0);
		collection.add(91.0);
		collection.add(159.0);
		collection.add(119.0);
		collection.add(196.0);
		collection.add(13.0);
		collection.add(116.0);
		collection.add(127.0);
		collection.add(5.0);
		collection.add(55.0);
		collection.add(62.0);
		collection.add(16.0);
		collection.add(138.0);
		collection.add(143.0);
		collection.add(125.0);
		collection.add(116.0);
		collection.add(168.0);
		collection.add(117.0);
		collection.add(132.0);
		collection.add(146.0);
		collection.add(72.0);
		collection.add(79.0);
		collection.add(55.0);
		collection.add(58.0);
		collection.add(100.0);
		collection.add(142.0);
		collection.add(180.0);
		collection.add(8.0);
		collection.add(145.0);
		collection.add(128.0);
		collection.add(196.0);
		collection.add(159.0);
		collection.add(92.0);
		collection.add(19.0);
		collection.add(90.0);
		collection.add(34.0);
		collection.add(62.0);
		collection.add(142.0);
		collection.add(78.0);
		collection.add(58.0);
		collection.add(154.0);
		collection.add(56.0);
		collection.add(39.0);
		collection.add(43.0);
		collection.add(18.0);
		collection.add(52.0);
		collection.add(86.0);
		collection.add(43.0);
		collection.add(126.0);
		collection.add(66.0);
		collection.add(32.0);
		collection.add(143.0);
		collection.add(31.0);
		collection.add(67.0);
		collection.add(179.0);
		collection.add(164.0);
		collection.add(43.0);
		collection.add(105.0);
		collection.add(120.0);
		collection.add(52.0);
		collection.add(169.0);
		collection.add(15.0);
		collection.add(64.0);
		collection.add(66.0);
		collection.add(84.0);
		collection.add(137.0);
		collection.add(57.0);
		collection.add(10.0);
		collection.add(133.0);
		collection.add(188.0);
		collection.add(195.0);
		collection.add(50.0);
		collection.add(71.0);
		collection.add(8.0);
		collection.add(121.0);
		collection.add(45.0);
		collection.add(82.0);
		collection.add(56.0);
		collection.add(153.0);
		collection.add(85.0);
		collection.add(176.0);
		collection.add(12.0);
		collection.add(183.0);
		collection.add(164.0);
		collection.add(30.0);
		collection.add(21.0);
		collection.add(152.0);
		collection.add(9.0);
		collection.add(132.0);
		collection.add(1.0);
		collection.add(92.0);
		collection.add(51.0);
		collection.add(122.0);
		collection.add(120.0);
		collection.add(129.0);
		collection.add(167.0);
		collection.add(136.0);
		collection.add(24.0);
		collection.add(8.0);
		collection.add(43.0);
		collection.add(106.0);
		collection.add(119.0);
		collection.add(60.0);
		collection.add(50.0);
		collection.add(84.0);
		collection.add(24.0);
		collection.add(48.0);
		collection.add(119.0);
		collection.add(115.0);
		collection.add(142.0);
		collection.add(186.0);
		collection.add(66.0);
		collection.add(160.0);
		collection.add(155.0);
		collection.add(160.0);
		collection.add(147.0);
		collection.add(191.0);
		collection.add(170.0);
		collection.add(77.0);
		collection.add(88.0);
		collection.add(48.0);
		collection.add(131.0);
		collection.add(74.0);
		collection.add(23.0);
		collection.add(196.0);
		collection.add(136.0);
		collection.add(21.0);
		collection.add(40.0);
		collection.add(180.0);
		collection.add(90.0);
		collection.add(40.0);
		collection.add(141.0);
		collection.add(26.0);
		collection.add(143.0);
		collection.add(116.0);
		collection.add(123.0);
		collection.add(95.0);
		collection.add(88.0);
		collection.add(54.0);
		collection.add(105.0);
		collection.add(99.0);
		collection.add(48.0);
		collection.add(77.0);
		collection.add(83.0);
		collection.add(187.0);
		collection.add(157.0);
		collection.add(14.0);
		collection.add(85.0);
		collection.add(115.0);
		collection.add(67.0);
		collection.add(3.0);
		collection.add(154.0);
		collection.add(140.0);
		collection.add(134.0);
		collection.add(66.0);
		collection.add(193.0);
		collection.add(172.0);
		collection.add(119.0);
		collection.add(82.0);
		collection.add(141.0);
		collection.add(54.0);
		collection.add(10.0);
		collection.add(13.0);
		collection.add(99.0);
		collection.add(177.0);
		collection.add(158.0);
		collection.add(113.0);
		collection.add(20.0);
		collection.add(80.0);
		collection.add(142.0);
		collection.add(92.0);
		collection.add(59.0);
		collection.add(162.0);
		collection.add(57.0);
		collection.add(114.0);
		collection.add(164.0);
		collection.add(117.0);
		collection.add(165.0);
		collection.add(111.0);
		collection.add(129.0);
		collection.add(51.0);
		collection.add(129.0);
		collection.add(108.0);
		collection.add(90.0);
		collection.add(29.0);
		collection.add(65.0);
		collection.add(127.0);
		collection.add(7.0);
		collection.add(102.0);
		collection.add(164.0);
		collection.add(125.0);
		collection.add(124.0);
		collection.add(139.0);
		collection.add(118.0);
		collection.add(167.0);
		collection.add(198.0);
		collection.add(84.0);
		collection.add(25.0);
		collection.add(117.0);
		collection.add(27.0);
		collection.add(37.0);
		collection.add(187.0);
		collection.add(151.0);
		collection.add(82.0);
		collection.add(107.0);
		collection.add(20.0);
		collection.add(38.0);
		collection.add(39.0);
		collection.add(115.0);
		collection.add(192.0);
		collection.add(13.0);
		collection.add(45.0);
		collection.add(45.0);
		collection.add(133.0);
		collection.add(128.0);
		collection.add(98.0);
		collection.add(95.0);
		collection.add(86.0);
		collection.add(163.0);
		collection.add(153.0);
		collection.add(93.0);
		collection.add(185.0);
		collection.add(117.0);
		collection.add(39.0);
		collection.add(25.0);
		collection.add(51.0);
		collection.add(32.0);
		collection.add(159.0);
		collection.add(37.0);
		collection.add(144.0);
		collection.add(52.0);
		collection.add(16.0);
		collection.add(177.0);
		collection.add(105.0);
		collection.add(41.0);
		collection.add(154.0);
		collection.add(153.0);
		collection.add(77.0);
		collection.add(33.0);
		collection.add(6.0);
		collection.add(47.0);
		collection.add(159.0);
		collection.add(3.0);
		collection.add(59.0);
		collection.add(61.0);
		collection.add(8.0);
		collection.add(22.0);
		collection.add(43.0);
		collection.add(129.0);
		collection.add(80.0);
		collection.add(95.0);
		collection.add(29.0);
		collection.add(24.0);
		collection.add(164.0);
		collection.add(186.0);
		collection.add(77.0);
		collection.add(19.0);
		collection.add(64.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=30)
	public void JLinkedSet(Blackhole bh) {
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,30.0,79.0,10.0,165.0,61.0,177.0,114.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,151.0,168.0,139.0,68.0,4.0,85.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,86.0,116.0,169.0,4.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,65.0,142.0,146.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,37.0,85.0,90.0,172.0,121.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,74.0,70.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,76.0,124.0,172.0,29.0,143.0,192.0,136.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,185.0,7.0,48.0,167.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,13.0,25.0,14.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,15.0,115.0,19.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,52.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,185.0,2.0,12.0,162.0,68.0,42.0,122.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,47.0,79.0,97.0,7.0,183.0,126.0,82.0,176.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,114.0,113.0,124.0,148.0,175.0,90.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,34.0,128.0,134.0,50.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,120.0,97.0,137.0,197.0,102.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,140.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,64.0,72.0,121.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,2.0,20.0,103.0,56.0,109.0,86.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,99.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,200.0,150.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,81.0,2.0,5.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,27.0,116.0,92.0,148.0,182.0,192.0,102.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,162.0,185.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,147.0,32.0,116.0,81.0,199.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,14.0,139.0,162.0,97.0,112.0,7.0,86.0,149.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,35.0,141.0,36.0,27.0,81.0,176.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,180.0,115.0,41.0,47.0,179.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,109.0,193.0,144.0,87.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,24.0,24.0,171.0,167.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,190.0,86.0,40.0,108.0,101.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,192.0,53.0,133.0,196.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,3.0,123.0,4.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,10.0,46.0,59.0,94.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,198.0,86.0,112.0,154.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,18.0,71.0,49.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,1.0,30.0,167.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,99.0,8.0,95.0,43.0,131.0,96.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,157.0,157.0,8.0,51.0,185.0,200.0,145.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,149.0,81.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,178.0,164.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,76.0,38.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,74.0,30.0,191.0,189.0,74.0,68.0,62.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,34.0,35.0,190.0,21.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,70.0,40.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,22.0,48.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,199.0,145.0,95.0,161.0,37.0,149.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,197.0,114.0,16.0,173.0,125.0,197.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,18.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,53.0,181.0,120.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,2.0,185.0,99.0,127.0,104.0,51.0,45.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,112.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,6.0,3.0,68.0,136.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,102.0,197.0,193.0,147.0,77.0,139.0,48.0,83.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,81.0,138.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,93.0,88.0,99.0,48.0,39.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,137.0,118.0,68.0,106.0,86.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,100.0,85.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,198.0,94.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,107.0,28.0,77.0,164.0,114.0,10.0,93.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,72.0,64.0,76.0,127.0,37.0,199.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,44.0,185.0,92.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,114.0,60.0,121.0,121.0,21.0,81.0,197.0,162.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,45.0,41.0,27.0,78.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,71.0,132.0,177.0,40.0,199.0,11.0,46.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,26.0,176.0,193.0,25.0,148.0,111.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,164.0,71.0,9.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,51.0,81.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,21.0,65.0,105.0,58.0,110.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,12.0,103.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,113.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,14.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,95.0,161.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,168.0,192.0,117.0,90.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,31.0,158.0,121.0,152.0,17.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,33.0,181.0,85.0,113.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,86.0,152.0,36.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,188.0,85.0,17.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,61.0,67.0,121.0,30.0,73.0,78.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,133.0,123.0,163.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,120.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,44.0,179.0,145.0,63.0,199.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,56.0,96.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,102.0,57.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,19.0,181.0,21.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,68.0,7.0,47.0,139.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,106.0,2.0,197.0,196.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,133.0,33.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,172.0,9.0,138.0,143.0,153.0,133.0,13.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,115.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,88.0,104.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,192.0,38.0,59.0,83.0,177.0,142.0,41.0,148.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,2.0,146.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,67.0,83.0,178.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,161.0,44.0,104.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,96.0,87.0,139.0,135.0,43.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,48.0,32.0,160.0,3.0,12.0,94.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,23.0,131.0,37.0,140.0,51.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,58.0,52.0,47.0,80.0,174.0,99.0,52.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,11.0,112.0,17.0,37.0,135.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,87.0,195.0,111.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,169.0,176.0,148.0,103.0,130.0,95.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,30.0,84.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,57.0,99.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,51.0,48.0,118.0,26.0,200.0,80.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,34.0,39.0,158.0,3.0,143.0,153.0,196.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,20.0,32.0,186.0,123.0,72.0,195.0,33.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,180.0,33.0,155.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,38.0,21.0,190.0,71.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,6.0,152.0,142.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,33.0,86.0,119.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,66.0,46.0,113.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,9.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,134.0,10.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,67.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,170.0,167.0,155.0,122.0,118.0,27.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,105.0,57.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,54.0,147.0,92.0,132.0,117.0,31.0,127.0,145.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,127.0,6.0,197.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,65.0,155.0,89.0,133.0,17.0,126.0,36.0,113.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,172.0,24.0,197.0,45.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,154.0,176.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,159.0,195.0,149.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,191.0,165.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,130.0,31.0,56.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,73.0,149.0,37.0,41.0,106.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,72.0,58.0,178.0,82.0,193.0,66.0,97.0,149.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,107.0,121.0,140.0,65.0,103.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,38.0,55.0,70.0,76.0,36.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,134.0,193.0,65.0,91.0,125.0,152.0,113.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,73.0,88.0,145.0,22.0,120.0,47.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,79.0,29.0,4.0,119.0,155.0,101.0,198.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,53.0,131.0,36.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,15.0,160.0,49.0,56.0,144.0,3.0,21.0,30.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,145.0,143.0,32.0,43.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,51.0,63.0,115.0,173.0,125.0,29.0,53.0,88.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,11.0,198.0,118.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,138.0,15.0,17.0,80.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,59.0,189.0,169.0,37.0,111.0,8.0,56.0,13.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,152.0,95.0,87.0,13.0,24.0,138.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,24.0,109.0,72.0,53.0,6.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,145.0,140.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,142.0,154.0,39.0,67.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,7.0,32.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,44.0,37.0,100.0,36.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,127.0,12.0,172.0,195.0,106.0,53.0,62.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,140.0,22.0,155.0,123.0,5.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,98.0,159.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,182.0,63.0,98.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,165.0,156.0,15.0,75.0,25.0,112.0,135.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,120.0,59.0,170.0,137.0,37.0,45.0,21.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,101.0,137.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,150.0,154.0,78.0,15.0,74.0,77.0,189.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,72.0,3.0,13.0,103.0,11.0,4.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,111.0,167.0,150.0,102.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,141.0,181.0,138.0,188.0,184.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,156.0,178.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,6.0,113.0,110.0,168.0,189.0,14.0,196.0,8.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,156.0,2.0,130.0,8.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,126.0,99.0,168.0,93.0,1.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,2.0,170.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,24.0,176.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,193.0,27.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,137.0,55.0,13.0,122.0,74.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,103.0,10.0,137.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,195.0,188.0,69.0,82.0,30.0,33.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,126.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,57.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,21.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,186.0,99.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,166.0,189.0,90.0,171.0,175.0,36.0,140.0,138.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,42.0,143.0,133.0,123.0,60.0,89.0,89.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,4.0,186.0,44.0,109.0,53.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,30.0,63.0,178.0,119.0,101.0,89.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,124.0,46.0,76.0,20.0,91.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,27.0,106.0,132.0,74.0,116.0,49.0,149.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,1.0,171.0,111.0,120.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,17.0,84.0,125.0,175.0,164.0,42.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,117.0,96.0,32.0,5.0,39.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,100.0,114.0,129.0,54.0,83.0,114.0,117.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,116.0,134.0,42.0,169.0,56.0,65.0,22.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,37.0,182.0,157.0,151.0,27.0,92.0,20.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,199.0,25.0,113.0,82.0,125.0,176.0,184.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,164.0,96.0,150.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,170.0,163.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,97.0,196.0,150.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,121.0,190.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,161.0,96.0,77.0,114.0,49.0,47.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,30.0,134.0,95.0,189.0,148.0,4.0,39.0,198.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,133.0,57.0,170.0,157.0,95.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,187.0,108.0,183.0,23.0,154.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,167.0,8.0,51.0,57.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,25.0,199.0,25.0,64.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,177.0,162.0,104.0,1.0,22.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,113.0,117.0,23.0,197.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,61.0,56.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,141.0,134.0,195.0,24.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,12.0,78.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,89.0,56.0,6.0,107.0,194.0,97.0,198.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,79.0,156.0,22.0,159.0,7.0,32.0,190.0,178.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,124.0,15.0,138.0,19.0,115.0,63.0,138.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,181.0,49.0,173.0,73.0,134.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,76.0,50.0,146.0,100.0,2.0,35.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,179.0,61.0,129.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,33.0,29.0,55.0,39.0,122.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,101.0,149.0,135.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,152.0,150.0,180.0,27.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,166.0,18.0,159.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,146.0,124.0,33.0,78.0,165.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,25.0,137.0,164.0,190.0,52.0,51.0,62.0,166.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,77.0,96.0,71.0,114.0,49.0,19.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,123.0,88.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,37.0,65.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,41.0,131.0,200.0,121.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,98.0,36.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,66.0,85.0,71.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,152.0,26.0,122.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,33.0,177.0,117.0,53.0,52.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,183.0,92.0,172.0,67.0,48.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,183.0,113.0,144.0,87.0,53.0,48.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,97.0,143.0,32.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,140.0,13.0,10.0,122.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,181.0,66.0,107.0,173.0,18.0,34.0,87.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,197.0,130.0,21.0,137.0,90.0,22.0,37.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,192.0,31.0,34.0,190.0,109.0,110.0,45.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,22.0,75.0,121.0,175.0,126.0,188.0,172.0,152.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,113.0,103.0,132.0,53.0,190.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,19.0,5.0,134.0,166.0,161.0,16.0,85.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,125.0,82.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,17.0,35.0,95.0,168.0,1.0,68.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,181.0,184.0,107.0,8.0,7.0,78.0,128.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,63.0,167.0,45.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,129.0,118.0,148.0,41.0,162.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,149.0,154.0,128.0,86.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,67.0,107.0,110.0,50.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,42.0,74.0,166.0,94.0,123.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,99.0,141.0,200.0,169.0,88.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,131.0,7.0,153.0,197.0,185.0,87.0,162.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,161.0,17.0,26.0,194.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,143.0,73.0,127.0,3.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,77.0,20.0,98.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,92.0,13.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,109.0,129.0,19.0,68.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,61.0,170.0,181.0,38.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,44.0,150.0,40.0,16.0,161.0,113.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,102.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,113.0,47.0,175.0,113.0,4.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,36.0,182.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,106.0,50.0,139.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,178.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,126.0,32.0,77.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,112.0,30.0,14.0,6.0,158.0,125.0,76.0,28.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,27.0,77.0,66.0,53.0,152.0,85.0,75.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,113.0,38.0,46.0,69.0,149.0,124.0,88.0,153.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,96.0,115.0,184.0,132.0,60.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,30.0,67.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,57.0,12.0,152.0,173.0,138.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,86.0,121.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,37.0,77.0,61.0,48.0,79.0,87.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,171.0,101.0,199.0,112.0,186.0,140.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,79.0,116.0,55.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,180.0,28.0,15.0,186.0,115.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,55.0,149.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,162.0,98.0,32.0,18.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,40.0,88.0,189.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,28.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,54.0,26.0,79.0,178.0,136.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,22.0,68.0,61.0,24.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,17.0,181.0,125.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,146.0,41.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,100.0,97.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,183.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,7.0,110.0,16.0,73.0,138.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,168.0,81.0,13.0,198.0,159.0,123.0,57.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,62.0,121.0,185.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,62.0,196.0,13.0,2.0,173.0,40.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,128.0,195.0,110.0,73.0,27.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,22.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,159.0,19.0,43.0,134.0,33.0,81.0,20.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,131.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,140.0,3.0,83.0,21.0,146.0,155.0,185.0,187.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,100.0,108.0,67.0,15.0,195.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,107.0,90.0,29.0,114.0,104.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,140.0,21.0,100.0,32.0,199.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,84.0,148.0,156.0,56.0,52.0,137.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,100.0,25.0,63.0,185.0,181.0,147.0,77.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,75.0,144.0,156.0,79.0,183.0,144.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,74.0,93.0,90.0,43.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,36.0,195.0,5.0,182.0,127.0,159.0,70.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,56.0,30.0,135.0,9.0,104.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,95.0,67.0,173.0,67.0,161.0,67.0,73.0,163.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,118.0,51.0,52.0,93.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,141.0,54.0,120.0,111.0,167.0,100.0,115.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,139.0,8.0,80.0,12.0,13.0,40.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,71.0,159.0,174.0,170.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,60.0,182.0,125.0,69.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,154.0,21.0,21.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,136.0,18.0,46.0,45.0,190.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,182.0,180.0,7.0,53.0,192.0,157.0,192.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,62.0,148.0,80.0,34.0,11.0,167.0,39.0,48.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,154.0,170.0,60.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,171.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,174.0,109.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,51.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,71.0,6.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,81.0,159.0,28.0,25.0,13.0,37.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,92.0,167.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,179.0,132.0,42.0,114.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,128.0,157.0,36.0,19.0,197.0,95.0,191.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,49.0,58.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,61.0,145.0,40.0,169.0,58.0,127.0,9.0,115.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,91.0,168.0,187.0,36.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,162.0,57.0,139.0,14.0,6.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,193.0,189.0,107.0,87.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,73.0,43.0,100.0,177.0,148.0,51.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,145.0,105.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,46.0,5.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,164.0,36.0,198.0,128.0,161.0,24.0,178.0,92.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,86.0,132.0,28.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,80.0,140.0,41.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,176.0,55.0,35.0,191.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,195.0,10.0,47.0,43.0,84.0,117.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,190.0,14.0,50.0,76.0,187.0,15.0,128.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,160.0,105.0,60.0,38.0,65.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,174.0,94.0,148.0,59.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,174.0,24.0,12.0,150.0,139.0,15.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,168.0,131.0,134.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,180.0,186.0,70.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,152.0,146.0,197.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,173.0,52.0,114.0,103.0,15.0,87.0,54.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,71.0,120.0,125.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,50.0,128.0,50.0,59.0,10.0,6.0,148.0,151.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,4.0,66.0,67.0,148.0,119.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,198.0,97.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,88.0,64.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,61.0,137.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,84.0,67.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,118.0,190.0,29.0,8.0,117.0,93.0,187.0,195.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,88.0,72.0,61.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,159.0,136.0,121.0,158.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,25.0,23.0,168.0,4.0,67.0,95.0,84.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,98.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,25.0,114.0,187.0,54.0,195.0,55.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,177.0,1.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,79.0,16.0,132.0,169.0,20.0,49.0,116.0,160.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,178.0,164.0,139.0,112.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,87.0,180.0,135.0,26.0,106.0,21.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,88.0,159.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,30.0,185.0,17.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,86.0,106.0,80.0,145.0,14.0,146.0,36.0,83.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,138.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,105.0,26.0,2.0,140.0,192.0,134.0,68.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,115.0,81.0,40.0,64.0,51.0,98.0,53.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,52.0,40.0,102.0,40.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,164.0,43.0,46.0,182.0,190.0,192.0,40.0,11.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,71.0,71.0,40.0,53.0,54.0,98.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,153.0,43.0,8.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,150.0,1.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,141.0,86.0,191.0,190.0,31.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(66.0,88.0,35.0,131.0,176.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,129.0,44.0,134.0,107.0,75.0,82.0,56.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,180.0,31.0,8.0,153.0,191.0,180.0,50.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,54.0,65.0,72.0,65.0,184.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,169.0,132.0,165.0,165.0,124.0,44.0,58.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,54.0,17.0,176.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,136.0,194.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,72.0,185.0,16.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,199.0,119.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,156.0,173.0,123.0,132.0,178.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,68.0,107.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,171.0,92.0,99.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,109.0,180.0,104.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,27.0,3.0,82.0,102.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,113.0,29.0,18.0,101.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,80.0,188.0,132.0,5.0,75.0,139.0,49.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,177.0,2.0,114.0,116.0,170.0,121.0,23.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,154.0,17.0,16.0,79.0,1.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,68.0,93.0,175.0,136.0,118.0,50.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,191.0,9.0,183.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,123.0,58.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,190.0,98.0,198.0,43.0,23.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,117.0,4.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,167.0,132.0,60.0,9.0,120.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,95.0,63.0,28.0,174.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,166.0,88.0,60.0,44.0,67.0,123.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,84.0,49.0,119.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,123.0,64.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,137.0,140.0,113.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,151.0,37.0,49.0,155.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,1.0,60.0,164.0,124.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,80.0,3.0,48.0,175.0,149.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,131.0,188.0,200.0,185.0,31.0,73.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,145.0,197.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,146.0,197.0,82.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,183.0,119.0,93.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,199.0,158.0,127.0,41.0,70.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,171.0,163.0,92.0,175.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,163.0,132.0,191.0,90.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,163.0,109.0,66.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,47.0,186.0,142.0,126.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,74.0,16.0,107.0,200.0,84.0,52.0,113.0,106.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,77.0,161.0,54.0,200.0,194.0,119.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,51.0,112.0,198.0,103.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,21.0,135.0,53.0,76.0,153.0,95.0,167.0,172.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,195.0,149.0,166.0,90.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,51.0,1.0,19.0,86.0,171.0,122.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,147.0,102.0,126.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,120.0,110.0,199.0,18.0,166.0,47.0,164.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,106.0,102.0,160.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,198.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,20.0,98.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,22.0,14.0,64.0,182.0,86.0,65.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,120.0,199.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,16.0,85.0,107.0,164.0,47.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,8.0,134.0,191.0,43.0,70.0,125.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,13.0,28.0,14.0,161.0,92.0,81.0,198.0,76.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,11.0,109.0,189.0,105.0,107.0,39.0,182.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,107.0,61.0,130.0,87.0,62.0,50.0,181.0,25.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,36.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,13.0,34.0,200.0,74.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,61.0,95.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,1.0,163.0,146.0,89.0,131.0,45.0,17.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,195.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,189.0,48.0,35.0,79.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,142.0,22.0,132.0,196.0,146.0,196.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,127.0,87.0,63.0,150.0,79.0,139.0,98.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,129.0,53.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,178.0,10.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,95.0,195.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,47.0,84.0,171.0,50.0,75.0,136.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,6.0,123.0,166.0,70.0,137.0,200.0,198.0,120.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,74.0,158.0,59.0,111.0,137.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,160.0,28.0,71.0,103.0,156.0,114.0,139.0,133.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,50.0,126.0,84.0,150.0,93.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,82.0,132.0,194.0,138.0,151.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,163.0,167.0,200.0,13.0,124.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,35.0,154.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,41.0,42.0,3.0,31.0,140.0,76.0,194.0,100.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,32.0,6.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,108.0,108.0,35.0,79.0,84.0,53.0,159.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,92.0,41.0,71.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,139.0,8.0,72.0,35.0,12.0,101.0,15.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,19.0,169.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,89.0,180.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,183.0,165.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,88.0,119.0,198.0,159.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,199.0,110.0,130.0,45.0,62.0,13.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,185.0,164.0,65.0,179.0,49.0,171.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,77.0,69.0,64.0,58.0,5.0,71.0,147.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,144.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,73.0,155.0,189.0,16.0,18.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,6.0,87.0,167.0,191.0,51.0,1.0,94.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,13.0,126.0,183.0,158.0,34.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,25.0,30.0,190.0,108.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,48.0,105.0,98.0,140.0,191.0,71.0,160.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,102.0,177.0,66.0,72.0,21.0,104.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,195.0,17.0,181.0,145.0,10.0,173.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,126.0,103.0,141.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,6.0,126.0,174.0,50.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,13.0,152.0,75.0,168.0,15.0,191.0,24.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,132.0,125.0,177.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,130.0,70.0,113.0,110.0,7.0,55.0,157.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,140.0,88.0,99.0,123.0,142.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,150.0,119.0,148.0,162.0,140.0,69.0,130.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,188.0,82.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,196.0,44.0,158.0,48.0,71.0,24.0,131.0,153.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,169.0,99.0,109.0,188.0,58.0,185.0,200.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,33.0,135.0,1.0,196.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,64.0,87.0,97.0,12.0,49.0,161.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,59.0,146.0,50.0,127.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,23.0,127.0,171.0,24.0,99.0,35.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,42.0,6.0,133.0,84.0,30.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,106.0,172.0,29.0,110.0,108.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,7.0,169.0,19.0,15.0,47.0,111.0,167.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,79.0,42.0,32.0,21.0,55.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,13.0,9.0,156.0,131.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,121.0,102.0,165.0,36.0,189.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,67.0,24.0,102.0,4.0,43.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,9.0,16.0,190.0,125.0,134.0,150.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,152.0,151.0,53.0,87.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,191.0,150.0,170.0,162.0,4.0,191.0,102.0,114.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,147.0,104.0,60.0,86.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,53.0,115.0,140.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,175.0,179.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,53.0,144.0,177.0,168.0,81.0,31.0,54.0,88.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,71.0,31.0,143.0,9.0,165.0,48.0,103.0,81.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,96.0,114.0,71.0,163.0,10.0,114.0,101.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,118.0,169.0,54.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,193.0,22.0,165.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,78.0,188.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,132.0,17.0,24.0,17.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,185.0,95.0,124.0,158.0,63.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,15.0,77.0,72.0,182.0,141.0,26.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,98.0,30.0,51.0,67.0,129.0,80.0,42.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,70.0,110.0,2.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,28.0,66.0,118.0,156.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,163.0,167.0,106.0,131.0,132.0,107.0,162.0,77.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,92.0,105.0,119.0,72.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,36.0,1.0)));
		collection.removeAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,99.0,129.0,168.0,182.0)));
	}
}
