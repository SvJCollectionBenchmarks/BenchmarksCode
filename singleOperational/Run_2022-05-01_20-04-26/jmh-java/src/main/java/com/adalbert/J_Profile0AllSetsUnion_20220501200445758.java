package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile0AllSetsUnion_20220501200445758 {
	java.util.HashSet<Double> collection = new java.util.HashSet<>();
	@Setup(Level.Invocation)
	public void setupJHashSet() {
		collection = new java.util.HashSet<>();
		collection.add(26.0);
		collection.add(72.0);
		collection.add(149.0);
		collection.add(101.0);
		collection.add(191.0);
		collection.add(54.0);
		collection.add(83.0);
		collection.add(62.0);
		collection.add(138.0);
		collection.add(159.0);
		collection.add(194.0);
		collection.add(126.0);
		collection.add(146.0);
		collection.add(191.0);
		collection.add(20.0);
		collection.add(120.0);
		collection.add(64.0);
		collection.add(114.0);
		collection.add(6.0);
		collection.add(51.0);
		collection.add(160.0);
		collection.add(134.0);
		collection.add(7.0);
		collection.add(147.0);
		collection.add(28.0);
		collection.add(113.0);
		collection.add(135.0);
		collection.add(106.0);
		collection.add(64.0);
		collection.add(64.0);
		collection.add(27.0);
		collection.add(130.0);
		collection.add(170.0);
		collection.add(103.0);
		collection.add(157.0);
		collection.add(93.0);
		collection.add(131.0);
		collection.add(6.0);
		collection.add(54.0);
		collection.add(137.0);
		collection.add(77.0);
		collection.add(96.0);
		collection.add(87.0);
		collection.add(21.0);
		collection.add(27.0);
		collection.add(193.0);
		collection.add(138.0);
		collection.add(22.0);
		collection.add(100.0);
		collection.add(189.0);
		collection.add(161.0);
		collection.add(38.0);
		collection.add(158.0);
		collection.add(55.0);
		collection.add(145.0);
		collection.add(148.0);
		collection.add(154.0);
		collection.add(88.0);
		collection.add(177.0);
		collection.add(124.0);
		collection.add(149.0);
		collection.add(107.0);
		collection.add(183.0);
		collection.add(148.0);
		collection.add(149.0);
		collection.add(119.0);
		collection.add(199.0);
		collection.add(142.0);
		collection.add(13.0);
		collection.add(146.0);
		collection.add(44.0);
		collection.add(32.0);
		collection.add(56.0);
		collection.add(35.0);
		collection.add(100.0);
		collection.add(34.0);
		collection.add(91.0);
		collection.add(93.0);
		collection.add(52.0);
		collection.add(85.0);
		collection.add(92.0);
		collection.add(188.0);
		collection.add(6.0);
		collection.add(111.0);
		collection.add(25.0);
		collection.add(188.0);
		collection.add(29.0);
		collection.add(89.0);
		collection.add(33.0);
		collection.add(154.0);
		collection.add(55.0);
		collection.add(103.0);
		collection.add(38.0);
		collection.add(23.0);
		collection.add(170.0);
		collection.add(57.0);
		collection.add(29.0);
		collection.add(40.0);
		collection.add(131.0);
		collection.add(58.0);
		collection.add(28.0);
		collection.add(47.0);
		collection.add(197.0);
		collection.add(22.0);
		collection.add(19.0);
		collection.add(91.0);
		collection.add(80.0);
		collection.add(126.0);
		collection.add(114.0);
		collection.add(33.0);
		collection.add(153.0);
		collection.add(180.0);
		collection.add(108.0);
		collection.add(135.0);
		collection.add(185.0);
		collection.add(199.0);
		collection.add(2.0);
		collection.add(67.0);
		collection.add(56.0);
		collection.add(177.0);
		collection.add(54.0);
		collection.add(124.0);
		collection.add(192.0);
		collection.add(121.0);
		collection.add(5.0);
		collection.add(123.0);
		collection.add(21.0);
		collection.add(160.0);
		collection.add(138.0);
		collection.add(43.0);
		collection.add(38.0);
		collection.add(8.0);
		collection.add(142.0);
		collection.add(56.0);
		collection.add(24.0);
		collection.add(94.0);
		collection.add(198.0);
		collection.add(56.0);
		collection.add(18.0);
		collection.add(76.0);
		collection.add(115.0);
		collection.add(126.0);
		collection.add(38.0);
		collection.add(194.0);
		collection.add(97.0);
		collection.add(125.0);
		collection.add(22.0);
		collection.add(171.0);
		collection.add(166.0);
		collection.add(114.0);
		collection.add(144.0);
		collection.add(77.0);
		collection.add(41.0);
		collection.add(44.0);
		collection.add(78.0);
		collection.add(173.0);
		collection.add(91.0);
		collection.add(141.0);
		collection.add(33.0);
		collection.add(184.0);
		collection.add(84.0);
		collection.add(131.0);
		collection.add(84.0);
		collection.add(73.0);
		collection.add(126.0);
		collection.add(95.0);
		collection.add(65.0);
		collection.add(190.0);
		collection.add(13.0);
		collection.add(30.0);
		collection.add(118.0);
		collection.add(94.0);
		collection.add(34.0);
		collection.add(56.0);
		collection.add(80.0);
		collection.add(183.0);
		collection.add(111.0);
		collection.add(177.0);
		collection.add(4.0);
		collection.add(18.0);
		collection.add(22.0);
		collection.add(26.0);
		collection.add(93.0);
		collection.add(108.0);
		collection.add(122.0);
		collection.add(195.0);
		collection.add(88.0);
		collection.add(93.0);
		collection.add(120.0);
		collection.add(34.0);
		collection.add(139.0);
		collection.add(159.0);
		collection.add(134.0);
		collection.add(26.0);
		collection.add(91.0);
		collection.add(194.0);
		collection.add(123.0);
		collection.add(164.0);
		collection.add(58.0);
		collection.add(167.0);
		collection.add(197.0);
		collection.add(5.0);
		collection.add(77.0);
		collection.add(36.0);
		collection.add(79.0);
		collection.add(136.0);
		collection.add(111.0);
		collection.add(178.0);
		collection.add(5.0);
		collection.add(127.0);
		collection.add(76.0);
		collection.add(109.0);
		collection.add(129.0);
		collection.add(27.0);
		collection.add(135.0);
		collection.add(17.0);
		collection.add(79.0);
		collection.add(155.0);
		collection.add(28.0);
		collection.add(143.0);
		collection.add(30.0);
		collection.add(88.0);
		collection.add(20.0);
		collection.add(80.0);
		collection.add(1.0);
		collection.add(17.0);
		collection.add(113.0);
		collection.add(105.0);
		collection.add(28.0);
		collection.add(33.0);
		collection.add(198.0);
		collection.add(114.0);
		collection.add(178.0);
		collection.add(32.0);
		collection.add(14.0);
		collection.add(65.0);
		collection.add(35.0);
		collection.add(92.0);
		collection.add(131.0);
		collection.add(99.0);
		collection.add(52.0);
		collection.add(152.0);
		collection.add(18.0);
		collection.add(104.0);
		collection.add(166.0);
		collection.add(145.0);
		collection.add(117.0);
		collection.add(91.0);
		collection.add(175.0);
		collection.add(53.0);
		collection.add(91.0);
		collection.add(113.0);
		collection.add(145.0);
		collection.add(195.0);
		collection.add(71.0);
		collection.add(53.0);
		collection.add(183.0);
		collection.add(143.0);
		collection.add(59.0);
		collection.add(47.0);
		collection.add(109.0);
		collection.add(179.0);
		collection.add(96.0);
		collection.add(150.0);
		collection.add(9.0);
		collection.add(58.0);
		collection.add(75.0);
		collection.add(95.0);
		collection.add(63.0);
		collection.add(64.0);
		collection.add(15.0);
		collection.add(107.0);
		collection.add(81.0);
		collection.add(53.0);
		collection.add(108.0);
		collection.add(58.0);
		collection.add(91.0);
		collection.add(122.0);
		collection.add(7.0);
		collection.add(16.0);
		collection.add(171.0);
		collection.add(161.0);
		collection.add(55.0);
		collection.add(7.0);
		collection.add(100.0);
		collection.add(133.0);
		collection.add(109.0);
		collection.add(143.0);
		collection.add(148.0);
		collection.add(32.0);
		collection.add(69.0);
		collection.add(66.0);
		collection.add(69.0);
		collection.add(114.0);
		collection.add(24.0);
		collection.add(144.0);
		collection.add(78.0);
		collection.add(135.0);
		collection.add(1.0);
		collection.add(135.0);
		collection.add(108.0);
		collection.add(138.0);
		collection.add(179.0);
		collection.add(144.0);
		collection.add(99.0);
		collection.add(192.0);
		collection.add(25.0);
		collection.add(121.0);
		collection.add(180.0);
		collection.add(43.0);
		collection.add(17.0);
		collection.add(44.0);
		collection.add(197.0);
		collection.add(197.0);
		collection.add(66.0);
		collection.add(29.0);
		collection.add(25.0);
		collection.add(72.0);
		collection.add(87.0);
		collection.add(76.0);
		collection.add(167.0);
		collection.add(111.0);
		collection.add(15.0);
		collection.add(95.0);
		collection.add(17.0);
		collection.add(66.0);
		collection.add(59.0);
		collection.add(183.0);
		collection.add(45.0);
		collection.add(175.0);
		collection.add(150.0);
		collection.add(43.0);
		collection.add(2.0);
		collection.add(2.0);
		collection.add(99.0);
		collection.add(8.0);
		collection.add(176.0);
		collection.add(183.0);
		collection.add(67.0);
		collection.add(115.0);
		collection.add(51.0);
		collection.add(188.0);
		collection.add(78.0);
		collection.add(63.0);
		collection.add(188.0);
		collection.add(170.0);
		collection.add(97.0);
		collection.add(135.0);
		collection.add(29.0);
		collection.add(174.0);
		collection.add(109.0);
		collection.add(143.0);
		collection.add(44.0);
		collection.add(188.0);
		collection.add(69.0);
		collection.add(15.0);
		collection.add(96.0);
		collection.add(156.0);
		collection.add(155.0);
		collection.add(81.0);
		collection.add(195.0);
		collection.add(176.0);
		collection.add(159.0);
		collection.add(142.0);
		collection.add(84.0);
		collection.add(58.0);
		collection.add(143.0);
		collection.add(173.0);
		collection.add(161.0);
		collection.add(185.0);
		collection.add(142.0);
		collection.add(42.0);
		collection.add(21.0);
		collection.add(177.0);
		collection.add(109.0);
		collection.add(23.0);
		collection.add(64.0);
		collection.add(54.0);
		collection.add(83.0);
		collection.add(171.0);
		collection.add(186.0);
		collection.add(113.0);
		collection.add(192.0);
		collection.add(182.0);
		collection.add(62.0);
		collection.add(196.0);
		collection.add(85.0);
		collection.add(83.0);
		collection.add(188.0);
		collection.add(193.0);
		collection.add(196.0);
		collection.add(45.0);
		collection.add(54.0);
		collection.add(171.0);
		collection.add(3.0);
		collection.add(153.0);
		collection.add(121.0);
		collection.add(128.0);
		collection.add(104.0);
		collection.add(158.0);
		collection.add(16.0);
		collection.add(163.0);
		collection.add(182.0);
		collection.add(49.0);
		collection.add(191.0);
		collection.add(105.0);
		collection.add(141.0);
		collection.add(97.0);
		collection.add(85.0);
		collection.add(128.0);
		collection.add(17.0);
		collection.add(38.0);
		collection.add(149.0);
		collection.add(11.0);
		collection.add(184.0);
		collection.add(173.0);
		collection.add(33.0);
		collection.add(15.0);
		collection.add(149.0);
		collection.add(17.0);
		collection.add(126.0);
		collection.add(5.0);
		collection.add(133.0);
		collection.add(157.0);
		collection.add(16.0);
		collection.add(121.0);
		collection.add(51.0);
		collection.add(84.0);
		collection.add(81.0);
		collection.add(62.0);
		collection.add(52.0);
		collection.add(100.0);
		collection.add(65.0);
		collection.add(31.0);
		collection.add(71.0);
		collection.add(87.0);
		collection.add(166.0);
		collection.add(85.0);
		collection.add(50.0);
		collection.add(23.0);
		collection.add(48.0);
		collection.add(118.0);
		collection.add(152.0);
		collection.add(137.0);
		collection.add(142.0);
		collection.add(156.0);
		collection.add(79.0);
		collection.add(44.0);
		collection.add(25.0);
		collection.add(45.0);
		collection.add(77.0);
		collection.add(138.0);
		collection.add(128.0);
		collection.add(149.0);
		collection.add(11.0);
		collection.add(74.0);
		collection.add(105.0);
		collection.add(7.0);
		collection.add(165.0);
		collection.add(17.0);
		collection.add(131.0);
		collection.add(36.0);
		collection.add(87.0);
		collection.add(104.0);
		collection.add(143.0);
		collection.add(174.0);
		collection.add(34.0);
		collection.add(50.0);
		collection.add(55.0);
		collection.add(150.0);
		collection.add(88.0);
		collection.add(59.0);
		collection.add(139.0);
		collection.add(130.0);
		collection.add(59.0);
		collection.add(47.0);
		collection.add(29.0);
		collection.add(132.0);
		collection.add(164.0);
		collection.add(146.0);
		collection.add(105.0);
		collection.add(132.0);
		collection.add(11.0);
		collection.add(200.0);
		collection.add(147.0);
		collection.add(193.0);
		collection.add(68.0);
		collection.add(15.0);
		collection.add(2.0);
		collection.add(158.0);
		collection.add(38.0);
		collection.add(28.0);
		collection.add(124.0);
		collection.add(101.0);
		collection.add(159.0);
		collection.add(143.0);
		collection.add(44.0);
		collection.add(72.0);
		collection.add(163.0);
		collection.add(175.0);
		collection.add(79.0);
		collection.add(61.0);
		collection.add(122.0);
		collection.add(60.0);
		collection.add(182.0);
		collection.add(30.0);
		collection.add(173.0);
		collection.add(88.0);
		collection.add(181.0);
		collection.add(197.0);
		collection.add(36.0);
		collection.add(100.0);
		collection.add(142.0);
		collection.add(103.0);
		collection.add(139.0);
		collection.add(55.0);
		collection.add(66.0);
		collection.add(60.0);
		collection.add(137.0);
		collection.add(106.0);
		collection.add(83.0);
		collection.add(111.0);
		collection.add(31.0);
		collection.add(190.0);
		collection.add(10.0);
		collection.add(94.0);
		collection.add(191.0);
		collection.add(56.0);
		collection.add(112.0);
		collection.add(24.0);
		collection.add(119.0);
		collection.add(116.0);
		collection.add(42.0);
		collection.add(15.0);
		collection.add(63.0);
		collection.add(182.0);
		collection.add(41.0);
		collection.add(140.0);
		collection.add(108.0);
		collection.add(59.0);
		collection.add(85.0);
		collection.add(111.0);
		collection.add(127.0);
		collection.add(170.0);
		collection.add(6.0);
		collection.add(146.0);
		collection.add(21.0);
		collection.add(103.0);
		collection.add(131.0);
		collection.add(88.0);
		collection.add(191.0);
		collection.add(48.0);
		collection.add(54.0);
		collection.add(45.0);
		collection.add(34.0);
		collection.add(129.0);
		collection.add(145.0);
		collection.add(122.0);
		collection.add(98.0);
		collection.add(139.0);
		collection.add(132.0);
		collection.add(109.0);
		collection.add(122.0);
		collection.add(43.0);
		collection.add(130.0);
		collection.add(115.0);
		collection.add(195.0);
		collection.add(178.0);
		collection.add(62.0);
		collection.add(48.0);
		collection.add(175.0);
		collection.add(183.0);
		collection.add(175.0);
		collection.add(176.0);
		collection.add(100.0);
		collection.add(25.0);
		collection.add(79.0);
		collection.add(86.0);
		collection.add(77.0);
		collection.add(8.0);
		collection.add(170.0);
		collection.add(148.0);
		collection.add(158.0);
		collection.add(80.0);
		collection.add(188.0);
		collection.add(32.0);
		collection.add(200.0);
		collection.add(146.0);
		collection.add(15.0);
		collection.add(114.0);
		collection.add(91.0);
		collection.add(193.0);
		collection.add(29.0);
		collection.add(156.0);
		collection.add(17.0);
		collection.add(199.0);
		collection.add(198.0);
		collection.add(10.0);
		collection.add(95.0);
		collection.add(198.0);
		collection.add(128.0);
		collection.add(50.0);
		collection.add(27.0);
		collection.add(111.0);
		collection.add(73.0);
		collection.add(8.0);
		collection.add(167.0);
		collection.add(25.0);
		collection.add(133.0);
		collection.add(179.0);
		collection.add(146.0);
		collection.add(132.0);
		collection.add(134.0);
		collection.add(191.0);
		collection.add(145.0);
		collection.add(86.0);
		collection.add(28.0);
		collection.add(144.0);
		collection.add(40.0);
		collection.add(28.0);
		collection.add(38.0);
		collection.add(106.0);
		collection.add(77.0);
		collection.add(54.0);
		collection.add(110.0);
		collection.add(23.0);
		collection.add(61.0);
		collection.add(195.0);
		collection.add(2.0);
		collection.add(80.0);
		collection.add(59.0);
		collection.add(175.0);
		collection.add(44.0);
		collection.add(162.0);
		collection.add(4.0);
		collection.add(40.0);
		collection.add(25.0);
		collection.add(124.0);
		collection.add(19.0);
		collection.add(27.0);
		collection.add(26.0);
		collection.add(182.0);
		collection.add(123.0);
		collection.add(155.0);
		collection.add(133.0);
		collection.add(131.0);
		collection.add(131.0);
		collection.add(101.0);
		collection.add(87.0);
		collection.add(164.0);
		collection.add(179.0);
		collection.add(159.0);
		collection.add(166.0);
		collection.add(93.0);
		collection.add(67.0);
		collection.add(168.0);
		collection.add(134.0);
		collection.add(144.0);
		collection.add(88.0);
		collection.add(84.0);
		collection.add(142.0);
		collection.add(185.0);
		collection.add(19.0);
		collection.add(122.0);
		collection.add(116.0);
		collection.add(125.0);
		collection.add(101.0);
		collection.add(149.0);
		collection.add(54.0);
		collection.add(182.0);
		collection.add(2.0);
		collection.add(166.0);
		collection.add(43.0);
		collection.add(139.0);
		collection.add(182.0);
		collection.add(98.0);
		collection.add(194.0);
		collection.add(139.0);
		collection.add(77.0);
		collection.add(164.0);
		collection.add(49.0);
		collection.add(79.0);
		collection.add(88.0);
		collection.add(112.0);
		collection.add(91.0);
		collection.add(57.0);
		collection.add(141.0);
		collection.add(174.0);
		collection.add(55.0);
		collection.add(21.0);
		collection.add(20.0);
		collection.add(189.0);
		collection.add(46.0);
		collection.add(19.0);
		collection.add(112.0);
		collection.add(107.0);
		collection.add(151.0);
		collection.add(42.0);
		collection.add(8.0);
		collection.add(114.0);
		collection.add(58.0);
		collection.add(9.0);
		collection.add(157.0);
		collection.add(179.0);
		collection.add(5.0);
		collection.add(118.0);
		collection.add(124.0);
		collection.add(82.0);
		collection.add(91.0);
		collection.add(90.0);
		collection.add(125.0);
		collection.add(36.0);
		collection.add(111.0);
		collection.add(128.0);
		collection.add(76.0);
		collection.add(72.0);
		collection.add(58.0);
		collection.add(92.0);
		collection.add(49.0);
		collection.add(24.0);
		collection.add(177.0);
		collection.add(39.0);
		collection.add(55.0);
		collection.add(165.0);
		collection.add(54.0);
		collection.add(186.0);
		collection.add(113.0);
		collection.add(108.0);
		collection.add(79.0);
		collection.add(127.0);
		collection.add(63.0);
		collection.add(53.0);
		collection.add(47.0);
		collection.add(171.0);
		collection.add(18.0);
		collection.add(81.0);
		collection.add(147.0);
		collection.add(8.0);
		collection.add(157.0);
		collection.add(200.0);
		collection.add(190.0);
		collection.add(15.0);
		collection.add(97.0);
		collection.add(84.0);
		collection.add(119.0);
		collection.add(178.0);
		collection.add(176.0);
		collection.add(83.0);
		collection.add(60.0);
		collection.add(80.0);
		collection.add(86.0);
		collection.add(8.0);
		collection.add(122.0);
		collection.add(70.0);
		collection.add(173.0);
		collection.add(126.0);
		collection.add(68.0);
		collection.add(73.0);
		collection.add(91.0);
		collection.add(119.0);
		collection.add(143.0);
		collection.add(188.0);
		collection.add(6.0);
		collection.add(106.0);
		collection.add(118.0);
		collection.add(142.0);
		collection.add(17.0);
		collection.add(116.0);
		collection.add(156.0);
		collection.add(66.0);
		collection.add(175.0);
		collection.add(66.0);
		collection.add(171.0);
		collection.add(75.0);
		collection.add(87.0);
		collection.add(14.0);
		collection.add(138.0);
		collection.add(197.0);
		collection.add(86.0);
		collection.add(142.0);
		collection.add(80.0);
		collection.add(148.0);
		collection.add(21.0);
		collection.add(22.0);
		collection.add(190.0);
		collection.add(78.0);
		collection.add(158.0);
		collection.add(188.0);
		collection.add(28.0);
		collection.add(79.0);
		collection.add(105.0);
		collection.add(47.0);
		collection.add(105.0);
		collection.add(95.0);
		collection.add(117.0);
		collection.add(65.0);
		collection.add(105.0);
		collection.add(3.0);
		collection.add(144.0);
		collection.add(54.0);
		collection.add(173.0);
		collection.add(121.0);
		collection.add(149.0);
		collection.add(58.0);
		collection.add(191.0);
		collection.add(158.0);
		collection.add(38.0);
		collection.add(147.0);
		collection.add(119.0);
		collection.add(174.0);
		collection.add(141.0);
		collection.add(20.0);
		collection.add(176.0);
		collection.add(91.0);
		collection.add(71.0);
		collection.add(147.0);
		collection.add(143.0);
		collection.add(170.0);
		collection.add(114.0);
		collection.add(25.0);
		collection.add(79.0);
		collection.add(37.0);
		collection.add(111.0);
		collection.add(185.0);
		collection.add(195.0);
		collection.add(135.0);
		collection.add(105.0);
		collection.add(49.0);
		collection.add(168.0);
		collection.add(94.0);
		collection.add(138.0);
		collection.add(195.0);
		collection.add(176.0);
		collection.add(89.0);
		collection.add(29.0);
		collection.add(80.0);
		collection.add(104.0);
		collection.add(130.0);
		collection.add(116.0);
		collection.add(164.0);
		collection.add(199.0);
		collection.add(93.0);
		collection.add(1.0);
		collection.add(143.0);
		collection.add(24.0);
		collection.add(136.0);
		collection.add(191.0);
		collection.add(133.0);
		collection.add(186.0);
		collection.add(66.0);
		collection.add(31.0);
		collection.add(4.0);
		collection.add(173.0);
		collection.add(163.0);
		collection.add(119.0);
		collection.add(78.0);
		collection.add(27.0);
		collection.add(162.0);
		collection.add(95.0);
		collection.add(16.0);
		collection.add(178.0);
		collection.add(51.0);
		collection.add(160.0);
		collection.add(109.0);
		collection.add(113.0);
		collection.add(74.0);
		collection.add(169.0);
		collection.add(174.0);
		collection.add(179.0);
		collection.add(53.0);
		collection.add(141.0);
		collection.add(30.0);
		collection.add(8.0);
		collection.add(96.0);
		collection.add(87.0);
		collection.add(191.0);
		collection.add(50.0);
		collection.add(32.0);
		collection.add(44.0);
		collection.add(156.0);
		collection.add(63.0);
		collection.add(41.0);
		collection.add(187.0);
		collection.add(71.0);
		collection.add(187.0);
		collection.add(143.0);
		collection.add(106.0);
		collection.add(11.0);
		collection.add(40.0);
		collection.add(62.0);
		collection.add(192.0);
		collection.add(179.0);
		collection.add(37.0);
		collection.add(126.0);
		collection.add(115.0);
		collection.add(164.0);
		collection.add(125.0);
		collection.add(59.0);
		collection.add(81.0);
		collection.add(128.0);
		collection.add(80.0);
		collection.add(100.0);
		collection.add(56.0);
		collection.add(45.0);
		collection.add(79.0);
		collection.add(188.0);
		collection.add(83.0);
		collection.add(21.0);
		collection.add(170.0);
		collection.add(61.0);
		collection.add(176.0);
		collection.add(123.0);
		collection.add(80.0);
		collection.add(194.0);
		collection.add(108.0);
		collection.add(116.0);
		collection.add(170.0);
		collection.add(101.0);
		collection.add(85.0);
		collection.add(62.0);
		collection.add(146.0);
		collection.add(5.0);
		collection.add(138.0);
		collection.add(37.0);
		collection.add(188.0);
		collection.add(104.0);
		collection.add(178.0);
		collection.add(69.0);
		collection.add(191.0);
		collection.add(37.0);
		collection.add(81.0);
		collection.add(121.0);
		collection.add(199.0);
		collection.add(24.0);
		collection.add(27.0);
		collection.add(76.0);
		collection.add(71.0);
		collection.add(19.0);
		collection.add(108.0);
		collection.add(38.0);
		collection.add(182.0);
		collection.add(23.0);
		collection.add(164.0);
		collection.add(29.0);
		collection.add(42.0);
		collection.add(155.0);
		collection.add(126.0);
		collection.add(13.0);
		collection.add(194.0);
		collection.add(172.0);
		collection.add(34.0);
		collection.add(176.0);
		collection.add(127.0);
		collection.add(60.0);
		collection.add(85.0);
		collection.add(69.0);
		collection.add(53.0);
		collection.add(121.0);
		collection.add(39.0);
		collection.add(200.0);
		collection.add(129.0);
		collection.add(125.0);
		collection.add(102.0);
		collection.add(122.0);
		collection.add(107.0);
		collection.add(92.0);
		collection.add(120.0);
		collection.add(76.0);
		collection.add(190.0);
		collection.add(138.0);
		collection.add(177.0);
		collection.add(161.0);
		collection.add(84.0);
		collection.add(113.0);
		collection.add(168.0);
		collection.add(8.0);
		collection.add(140.0);
		collection.add(171.0);
		collection.add(153.0);
		collection.add(161.0);
		collection.add(53.0);
		collection.add(27.0);
		collection.add(21.0);
		collection.add(151.0);
		collection.add(18.0);
		collection.add(2.0);
		collection.add(74.0);
		collection.add(70.0);
		collection.add(92.0);
		collection.add(68.0);
		collection.add(82.0);
		collection.add(41.0);
		collection.add(32.0);
		collection.add(105.0);
		collection.add(149.0);
		collection.add(192.0);
		collection.add(71.0);
		collection.add(68.0);
		collection.add(61.0);
		collection.add(26.0);
		collection.add(98.0);
		collection.add(109.0);
		collection.add(104.0);
		collection.add(70.0);
		collection.add(24.0);
		collection.add(98.0);
		collection.add(57.0);
		collection.add(158.0);
		collection.add(156.0);
		collection.add(67.0);
		collection.add(83.0);
		collection.add(93.0);
		collection.add(125.0);
		collection.add(94.0);
		collection.add(169.0);
		collection.add(110.0);
		collection.add(197.0);
		collection.add(157.0);
		collection.add(2.0);
		collection.add(43.0);
		collection.add(88.0);
		collection.add(71.0);
		collection.add(48.0);
		collection.add(134.0);
		collection.add(110.0);
		collection.add(88.0);
		collection.add(152.0);
		collection.add(3.0);
		collection.add(189.0);
		collection.add(192.0);
		collection.add(140.0);
		collection.add(96.0);
		collection.add(35.0);
		collection.add(116.0);
		collection.add(99.0);
		collection.add(53.0);
		collection.add(79.0);
		collection.add(188.0);
		collection.add(139.0);
		collection.add(113.0);
		collection.add(100.0);
		collection.add(24.0);
		collection.add(192.0);
		collection.add(108.0);
		collection.add(85.0);
		collection.add(46.0);
		collection.add(64.0);
		collection.add(38.0);
		collection.add(176.0);
		collection.add(190.0);
		collection.add(140.0);
		collection.add(164.0);
		collection.add(185.0);
		collection.add(28.0);
		collection.add(125.0);
		collection.add(165.0);
		collection.add(105.0);
		collection.add(155.0);
		collection.add(136.0);
		collection.add(34.0);
		collection.add(49.0);
		collection.add(122.0);
		collection.add(107.0);
		collection.add(89.0);
		collection.add(56.0);
		collection.add(148.0);
		collection.add(149.0);
		collection.add(127.0);
		collection.add(138.0);
		collection.add(83.0);
		collection.add(84.0);
		collection.add(197.0);
		collection.add(172.0);
		collection.add(163.0);
		collection.add(92.0);
		collection.add(131.0);
		collection.add(66.0);
		collection.add(188.0);
		collection.add(16.0);
		collection.add(158.0);
		collection.add(83.0);
		collection.add(77.0);
		collection.add(55.0);
		collection.add(198.0);
		collection.add(80.0);
		collection.add(184.0);
		collection.add(20.0);
		collection.add(30.0);
		collection.add(39.0);
		collection.add(180.0);
		collection.add(33.0);
		collection.add(191.0);
		collection.add(114.0);
		collection.add(130.0);
		collection.add(19.0);
		collection.add(103.0);
		collection.add(77.0);
		collection.add(150.0);
		collection.add(73.0);
		collection.add(124.0);
		collection.add(35.0);
		collection.add(122.0);
		collection.add(193.0);
		collection.add(181.0);
		collection.add(69.0);
		collection.add(62.0);
		collection.add(198.0);
		collection.add(96.0);
		collection.add(99.0);
		collection.add(98.0);
		collection.add(43.0);
		collection.add(81.0);
		collection.add(184.0);
		collection.add(83.0);
		collection.add(187.0);
		collection.add(96.0);
		collection.add(163.0);
		collection.add(116.0);
		collection.add(66.0);
		collection.add(137.0);
		collection.add(28.0);
		collection.add(103.0);
		collection.add(156.0);
		collection.add(71.0);
		collection.add(28.0);
		collection.add(26.0);
		collection.add(14.0);
		collection.add(125.0);
		collection.add(177.0);
		collection.add(99.0);
		collection.add(47.0);
		collection.add(55.0);
		collection.add(5.0);
		collection.add(41.0);
		collection.add(193.0);
		collection.add(194.0);
		collection.add(7.0);
		collection.add(184.0);
		collection.add(31.0);
		collection.add(35.0);
		collection.add(101.0);
		collection.add(112.0);
		collection.add(147.0);
		collection.add(31.0);
		collection.add(192.0);
		collection.add(178.0);
		collection.add(188.0);
		collection.add(190.0);
		collection.add(36.0);
		collection.add(165.0);
		collection.add(159.0);
		collection.add(95.0);
		collection.add(22.0);
		collection.add(33.0);
		collection.add(88.0);
		collection.add(17.0);
		collection.add(4.0);
		collection.add(127.0);
		collection.add(89.0);
		collection.add(149.0);
		collection.add(148.0);
		collection.add(87.0);
		collection.add(99.0);
		collection.add(124.0);
		collection.add(61.0);
		collection.add(124.0);
		collection.add(57.0);
		collection.add(83.0);
		collection.add(3.0);
		collection.add(171.0);
		collection.add(92.0);
		collection.add(40.0);
		collection.add(32.0);
		collection.add(165.0);
		collection.add(71.0);
		collection.add(8.0);
		collection.add(165.0);
		collection.add(89.0);
		collection.add(121.0);
		collection.add(94.0);
		collection.add(32.0);
		collection.add(31.0);
		collection.add(127.0);
		collection.add(42.0);
		collection.add(35.0);
		collection.add(89.0);
		collection.add(177.0);
		collection.add(108.0);
		collection.add(8.0);
		collection.add(52.0);
		collection.add(50.0);
		collection.add(112.0);
		collection.add(123.0);
		collection.add(129.0);
		collection.add(61.0);
		collection.add(22.0);
		collection.add(108.0);
		collection.add(48.0);
		collection.add(18.0);
		collection.add(1.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=30)
	public void JHashSet(Blackhole bh) {
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,103.0,139.0,12.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,29.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,30.0,170.0,95.0,109.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,146.0,41.0,80.0,115.0,140.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,58.0,22.0,19.0,146.0,34.0,12.0,98.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,198.0,72.0,97.0,163.0,118.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,113.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,25.0,154.0,59.0,100.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,136.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,34.0,25.0,116.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,76.0,151.0,152.0,37.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,84.0,168.0,25.0,14.0,40.0,3.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,142.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,94.0,182.0,77.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,68.0,87.0,192.0,25.0,128.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,101.0,22.0,127.0,10.0,34.0,124.0,163.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,93.0,149.0,109.0,96.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,107.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,196.0,190.0,93.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,187.0,159.0,199.0,187.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,173.0,77.0,8.0,93.0,120.0,105.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,162.0,89.0,64.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,25.0,102.0,163.0,47.0,64.0,48.0,73.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,160.0,51.0,165.0,65.0,179.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,167.0,30.0,22.0,197.0,50.0,106.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,148.0,49.0,76.0,157.0,191.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,146.0,165.0,28.0,75.0,89.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,22.0,55.0,132.0,127.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,12.0,92.0,145.0,8.0,100.0,127.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,98.0,76.0,27.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,86.0,101.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,62.0,179.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,61.0,104.0,106.0,22.0,44.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,162.0,153.0,189.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,148.0,69.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,146.0,199.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,155.0,191.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,171.0,65.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,162.0,126.0,20.0,166.0,124.0,148.0,84.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,146.0,50.0,96.0,195.0,129.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,168.0,3.0,161.0,95.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,9.0,69.0,28.0,87.0,39.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,12.0,75.0,89.0,153.0,71.0,47.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,177.0,99.0,136.0,59.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,89.0,45.0,178.0,181.0,146.0,158.0,74.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,50.0,94.0,170.0,33.0,170.0,163.0,149.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,170.0,138.0,178.0,10.0,128.0,9.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,160.0,67.0,198.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,25.0,26.0,69.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,127.0,197.0,80.0,134.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,56.0,67.0,178.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,189.0,115.0,38.0,14.0,144.0,113.0,142.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,196.0,200.0,178.0,82.0,77.0,187.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,180.0,85.0,164.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,56.0,84.0,172.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,59.0,42.0,66.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,80.0,85.0,112.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,173.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,187.0,158.0,197.0,121.0,44.0,164.0,183.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,34.0,48.0,11.0,75.0,104.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,97.0,165.0,167.0,142.0,80.0,24.0,55.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,101.0,98.0,100.0,29.0,12.0,18.0,40.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,26.0,61.0,156.0,162.0,86.0,36.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,178.0,80.0,35.0,142.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,7.0,181.0,7.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,194.0,124.0,106.0,122.0,46.0,134.0,53.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,38.0,29.0,15.0,183.0,93.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,191.0,197.0,170.0,184.0,102.0,44.0,99.0,11.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,125.0,60.0,196.0,182.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,45.0,11.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,4.0,7.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,159.0,200.0,122.0,18.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,72.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,18.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,12.0,199.0,159.0,184.0,130.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,116.0,25.0,164.0,193.0,37.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,155.0,142.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,118.0,21.0,153.0,78.0,71.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,44.0,55.0,1.0,9.0,166.0,160.0,194.0,178.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,94.0,60.0,87.0,55.0,90.0,166.0,18.0,117.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,7.0,33.0,141.0,144.0,162.0,27.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,105.0,159.0,97.0,21.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,88.0,69.0,56.0,81.0,80.0,62.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,84.0,62.0,145.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,16.0,147.0,125.0,41.0,146.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,69.0,118.0,35.0,159.0,182.0,172.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,17.0,180.0,2.0,94.0,97.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,107.0,95.0,200.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,140.0,7.0,13.0,44.0,2.0,112.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,168.0,55.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,186.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,178.0,172.0,178.0,73.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,67.0,142.0,63.0,126.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,78.0,135.0,134.0,137.0,3.0,149.0,18.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,48.0,31.0,79.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,157.0,2.0,198.0,33.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,101.0,183.0,50.0,130.0,198.0,170.0,150.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,15.0,23.0,13.0,99.0,75.0,46.0,9.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,130.0,98.0,87.0,163.0,59.0,196.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,34.0,67.0,44.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,183.0,19.0,122.0,71.0,41.0,121.0,181.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,80.0,190.0,56.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,76.0,14.0,79.0,29.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,14.0,126.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,54.0,95.0,139.0,33.0,109.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,95.0,115.0,133.0,176.0,126.0,100.0,149.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,166.0,131.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,199.0,157.0,170.0,48.0,44.0,159.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,138.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,63.0,38.0,55.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,189.0,1.0,76.0,11.0,152.0,31.0,127.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,105.0,173.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,52.0,98.0,78.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,14.0,109.0,194.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,35.0,42.0,68.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,43.0,154.0,49.0,56.0,77.0,176.0,89.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,82.0,153.0,117.0,110.0,181.0,143.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,80.0,92.0,37.0,35.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,105.0,30.0,167.0,20.0,36.0,113.0,93.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,68.0,193.0,167.0,42.0,170.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,22.0,115.0,195.0,177.0,177.0,132.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,20.0,102.0,182.0,46.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,59.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,75.0,171.0,183.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,187.0,37.0,178.0,49.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,144.0,144.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,83.0,46.0,103.0,166.0,186.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,152.0,29.0,187.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,67.0,194.0,70.0,107.0,195.0,119.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,62.0,105.0,47.0,51.0,73.0,190.0,179.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,39.0,55.0,1.0,199.0,45.0,195.0,26.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,74.0,159.0,38.0,37.0,52.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,134.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,163.0,175.0,34.0,169.0,121.0,66.0,27.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,18.0,160.0,87.0,199.0,41.0,145.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,145.0,131.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,113.0,193.0,143.0,140.0,52.0,9.0,42.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,18.0,142.0,197.0,57.0,128.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,29.0,113.0,192.0,55.0,174.0,24.0,142.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,59.0,200.0,71.0,76.0,94.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,185.0,186.0,89.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,110.0,173.0,129.0,83.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,22.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,128.0,2.0,60.0,195.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,137.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,97.0,186.0,140.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,12.0,80.0,63.0,125.0,51.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,26.0,77.0,163.0,35.0,13.0,154.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,152.0,186.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,131.0,8.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,93.0,119.0,154.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,108.0,41.0,35.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,42.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,164.0,108.0,67.0,43.0,51.0,191.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,123.0,27.0,182.0,34.0,94.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,108.0,25.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,89.0,82.0,159.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,73.0,23.0,97.0,173.0,22.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,66.0,93.0,184.0,116.0,89.0,28.0,42.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,26.0,129.0,116.0,31.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,30.0,149.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,77.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,194.0,169.0,106.0,188.0,1.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,160.0,175.0,176.0,134.0,193.0,46.0,75.0,187.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,47.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,179.0,21.0,113.0,25.0,95.0,115.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,7.0,135.0,148.0,155.0,171.0,197.0,21.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,161.0,199.0,12.0,198.0,184.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,120.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,57.0,135.0,61.0,143.0,84.0,122.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,172.0,149.0,39.0,199.0,140.0,42.0,131.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,173.0,105.0,7.0,142.0,53.0,124.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,191.0,171.0,174.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,76.0,115.0,46.0,24.0,55.0,167.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,26.0,150.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,68.0,55.0,193.0,182.0,177.0,119.0,46.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,185.0,61.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,22.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,181.0,126.0,32.0,14.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,4.0,117.0,12.0,189.0,59.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,116.0,48.0,2.0,134.0,4.0,125.0,144.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,6.0,133.0,26.0,153.0,102.0,132.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,10.0,96.0,25.0,135.0,89.0,111.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,71.0,74.0,200.0,170.0,12.0,162.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,174.0,114.0,198.0,83.0,190.0,149.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,83.0,178.0,101.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,1.0,186.0,29.0,113.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,106.0,157.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,81.0,79.0,87.0,45.0,6.0,54.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,75.0,171.0,2.0,198.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,4.0,162.0,100.0,20.0,16.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,86.0,162.0,7.0,31.0,188.0,157.0,9.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,107.0,177.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,11.0,101.0,48.0,99.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,39.0,19.0,128.0,59.0,76.0,125.0,12.0,159.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,70.0,59.0,125.0,185.0,133.0,17.0,156.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,143.0,34.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,66.0,139.0,161.0,81.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,179.0,73.0,76.0,94.0,2.0,125.0,190.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,165.0,187.0,101.0,42.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(135.0,36.0,107.0,98.0,149.0,61.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,137.0,114.0,159.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,28.0,67.0,10.0,129.0,79.0,166.0,143.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,186.0,153.0,71.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,48.0,194.0,194.0,51.0,96.0,108.0,97.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,140.0,131.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,180.0,138.0,144.0,160.0,1.0,198.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,200.0,94.0,90.0,42.0,132.0,107.0,180.0,11.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,76.0,110.0,20.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,60.0,53.0,69.0,126.0,148.0,118.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,89.0,108.0,69.0,5.0,39.0,70.0,129.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,133.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,187.0,50.0,191.0,185.0,190.0,139.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,152.0,52.0,196.0,159.0,162.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,185.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,13.0,32.0,48.0,5.0,161.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,184.0,6.0,104.0,152.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,187.0,17.0,11.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,51.0,99.0,112.0,157.0,96.0,88.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,41.0,4.0,89.0,53.0,27.0,117.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,178.0,106.0,171.0,180.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,5.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,171.0,75.0,30.0,56.0,137.0,67.0,36.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,5.0,41.0,38.0,50.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,134.0,181.0,13.0,200.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,152.0,87.0,172.0,193.0,153.0,184.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,159.0,154.0,93.0,74.0,25.0,110.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,53.0,97.0,104.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,119.0,14.0,11.0,64.0,119.0,193.0,66.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,149.0,191.0,64.0,50.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,84.0,99.0,102.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,153.0,13.0,125.0,36.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,50.0,43.0,131.0,46.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,176.0,185.0,53.0,27.0,68.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,166.0,18.0,190.0,44.0,35.0,46.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,102.0,6.0,191.0,74.0,116.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,44.0,138.0,192.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,2.0,88.0,3.0,52.0,184.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,130.0,191.0,81.0,186.0,152.0,185.0,140.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,157.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,122.0,44.0,61.0,157.0,19.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,81.0,3.0,156.0,1.0,140.0,92.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,22.0,126.0,147.0,21.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,103.0,186.0,41.0,158.0,53.0,170.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,37.0,60.0,147.0,187.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,159.0,111.0,61.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,129.0,13.0,179.0,75.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,130.0,90.0,107.0,90.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,125.0,111.0,115.0,5.0,19.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,121.0,174.0,73.0,156.0,28.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,26.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,191.0,178.0,197.0,92.0,90.0,96.0,55.0,200.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,61.0,137.0,125.0,130.0,72.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,114.0,107.0,189.0,169.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,128.0,179.0,136.0,91.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,146.0,73.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,36.0,194.0,70.0,44.0,68.0,62.0,128.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,118.0,113.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,42.0,87.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,11.0,35.0,72.0,45.0,50.0,16.0,64.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,192.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,28.0,178.0,10.0,62.0,150.0,134.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,149.0,194.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,69.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,118.0,151.0,112.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,62.0,57.0,78.0,184.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,183.0,96.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,193.0,134.0,68.0,84.0,44.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,113.0,199.0,17.0,132.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,136.0,8.0,78.0,175.0,55.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,170.0,200.0,41.0,150.0,90.0,24.0,121.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,57.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,119.0,112.0,149.0,191.0,196.0,7.0,168.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,139.0,114.0,135.0,139.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,131.0,18.0,64.0,87.0,97.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,28.0,102.0,176.0,83.0,16.0,3.0,8.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,84.0,130.0,170.0,99.0,174.0,103.0,38.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,85.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,145.0,49.0,114.0,88.0,166.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,136.0,171.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,116.0,131.0,152.0,43.0,158.0,93.0,174.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,18.0,53.0,109.0,89.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,77.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,111.0,180.0,83.0,117.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,149.0,152.0,59.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,10.0,176.0,73.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,139.0,7.0,28.0,91.0,172.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,153.0,119.0,54.0,110.0,121.0,178.0,87.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,151.0,9.0,58.0,52.0,6.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,111.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,33.0,60.0,99.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,104.0,133.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,8.0,66.0,57.0,82.0,196.0,127.0,141.0,20.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,69.0,102.0,162.0,197.0,127.0,136.0,17.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,31.0,111.0,88.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,80.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,67.0,147.0,142.0,192.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,101.0,41.0,44.0,115.0,116.0,181.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,42.0,190.0,195.0,195.0,78.0,46.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,141.0,185.0,168.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,37.0,89.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,12.0,94.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,157.0,42.0,48.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,87.0,163.0,72.0,134.0,182.0,33.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,142.0,122.0,86.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,60.0,13.0,54.0,53.0,144.0,108.0,140.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,194.0,169.0,100.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,21.0,183.0,28.0,57.0,67.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,7.0,44.0,132.0,28.0,35.0,89.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,98.0,182.0,113.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,62.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,7.0,27.0,31.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,138.0,59.0,149.0,22.0,103.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,49.0,51.0,111.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(182.0,135.0,132.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,111.0,106.0,107.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,76.0,127.0,51.0,9.0,3.0,110.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,150.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,101.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,138.0,179.0,50.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,97.0,60.0,9.0,162.0,53.0,50.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,95.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,180.0,146.0,98.0,147.0,145.0,155.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,169.0,109.0,77.0,103.0,130.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,50.0,138.0,171.0,49.0,168.0,59.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,185.0,63.0,149.0,195.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,194.0,152.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,127.0,104.0,130.0,1.0,197.0,92.0,105.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,69.0,84.0,200.0,161.0,68.0,58.0,40.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,144.0,199.0,115.0,176.0,116.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,168.0,145.0,161.0,184.0,44.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,54.0,189.0,117.0,165.0,56.0,88.0,34.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,34.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,95.0,18.0,96.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,129.0,158.0,135.0,86.0,181.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,24.0,128.0,114.0,50.0,28.0,84.0,144.0,200.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,80.0,42.0,124.0,174.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,48.0,184.0,47.0,183.0,59.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,164.0,27.0,144.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,52.0,137.0,10.0,123.0,111.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,151.0,11.0,126.0,2.0,80.0,49.0,79.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,164.0,31.0,127.0,106.0,51.0,81.0,109.0,200.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,200.0,68.0,149.0,82.0,64.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,75.0,155.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,130.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,36.0,154.0,114.0,83.0,1.0,145.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,75.0,29.0,120.0,174.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,85.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,80.0,154.0,173.0,118.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,25.0,43.0,66.0,16.0,159.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,79.0,152.0,148.0,125.0,191.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,157.0,52.0,109.0,130.0,40.0,28.0,39.0,166.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,8.0,118.0,199.0,33.0,125.0,18.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,176.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,123.0,20.0,64.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,185.0,25.0,97.0,150.0,80.0,5.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,145.0,188.0,7.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,54.0,27.0,178.0,160.0,45.0,106.0,75.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,124.0,79.0,52.0,148.0,16.0,52.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,125.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,161.0,63.0,199.0,81.0,152.0,18.0,73.0,149.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,39.0,48.0,26.0,103.0,76.0,180.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,89.0,7.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,51.0,72.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,146.0,56.0,64.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,54.0,138.0,85.0,150.0,145.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,26.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(94.0,74.0,47.0,27.0,188.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,13.0,79.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,140.0,42.0,194.0,123.0,12.0,166.0,125.0,117.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,186.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,54.0,128.0,171.0,83.0,109.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,148.0,38.0,54.0,170.0,39.0,134.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,101.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,116.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,140.0,175.0,179.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,129.0,12.0,15.0,165.0,105.0,41.0,151.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,24.0,79.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,103.0,118.0,185.0,142.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,48.0,172.0,3.0,79.0,158.0,47.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,167.0,53.0,65.0,79.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,60.0,150.0,17.0,140.0,43.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,186.0,184.0,143.0,175.0,33.0,19.0,118.0,194.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,93.0,159.0,152.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,28.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,41.0,111.0,177.0,105.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,36.0,45.0,196.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,129.0,10.0,83.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,98.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,184.0,194.0,139.0,200.0,196.0,10.0,100.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,200.0,145.0,134.0,168.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,95.0,189.0,179.0,147.0,114.0,108.0,82.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,167.0,38.0,165.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,73.0,144.0,62.0,148.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,151.0,170.0,77.0,17.0,174.0,96.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,103.0,160.0,19.0,29.0,39.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,137.0,119.0,198.0,152.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,169.0,27.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,159.0,43.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,58.0,134.0,63.0,44.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,158.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,180.0,151.0,136.0,129.0,123.0,159.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(79.0,37.0,144.0,54.0,149.0,143.0,61.0,57.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,189.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,141.0,170.0,59.0,174.0,140.0,168.0,86.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,72.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,40.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,53.0,105.0,24.0,118.0,92.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,36.0,81.0,153.0,165.0,25.0,1.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,37.0,27.0,73.0,139.0,185.0,162.0,117.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,172.0,30.0,22.0,189.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,147.0,177.0,8.0,141.0,24.0,67.0,30.0,166.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,92.0,83.0,127.0,1.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,182.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,31.0,134.0,156.0,14.0,63.0,195.0,99.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,167.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,88.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,140.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,10.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,112.0,18.0,48.0,134.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(79.0,176.0,10.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,54.0,66.0,160.0,35.0,153.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,29.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,157.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,147.0,91.0,73.0,140.0,60.0,23.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,14.0,163.0,95.0,154.0,53.0,192.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,107.0,109.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,29.0,8.0,54.0,136.0,3.0,175.0,102.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,60.0,180.0,140.0,181.0,87.0,1.0,141.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,200.0,158.0,186.0,80.0,132.0,198.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,66.0,175.0,130.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,2.0,51.0,30.0,19.0,196.0,29.0,24.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,76.0,27.0,140.0,174.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,84.0,90.0,127.0,158.0,121.0,117.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,164.0,180.0,102.0,22.0,189.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,90.0,26.0,28.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,57.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,82.0,37.0,63.0,80.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,2.0,61.0,11.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,175.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,93.0,147.0,179.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,103.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,77.0,189.0,27.0,102.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,79.0,173.0,131.0,190.0,151.0,74.0,103.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,200.0,42.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,13.0,131.0,77.0,161.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,136.0,6.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,160.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,23.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,51.0,45.0,87.0,147.0,153.0,8.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,123.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,155.0,127.0,77.0,69.0,125.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,83.0,115.0,102.0,51.0,121.0,112.0,86.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,100.0,101.0,149.0,3.0,143.0,186.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,95.0,145.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,1.0,19.0,123.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,114.0,59.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,153.0,152.0,17.0,86.0,121.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,166.0,64.0,28.0,167.0,192.0,47.0,67.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,115.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,89.0,179.0,139.0,127.0,146.0,71.0,182.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,40.0,58.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,111.0,167.0,198.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,161.0,188.0,199.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,135.0,63.0,180.0,79.0,176.0,32.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,193.0,79.0,195.0,157.0,72.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,9.0,54.0,174.0,164.0,58.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,143.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,90.0,110.0,194.0,6.0,32.0,45.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,50.0,68.0,181.0,33.0,191.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,27.0,188.0,92.0,98.0,47.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,199.0,84.0,58.0,116.0,126.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,129.0,7.0,73.0,152.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,83.0,175.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,119.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,17.0,100.0,33.0,25.0,185.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(66.0,177.0,94.0,72.0,53.0,32.0,197.0,155.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,140.0,115.0,23.0,60.0,42.0,31.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,87.0,45.0,169.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,126.0,34.0,97.0,76.0,128.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,78.0,77.0,16.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,139.0,41.0,13.0,57.0,123.0,199.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,95.0,37.0,148.0,114.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,171.0,109.0,14.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,76.0,180.0,79.0,52.0,176.0,11.0,185.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,38.0,74.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,142.0,181.0,2.0,15.0,65.0,94.0,163.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,2.0,6.0,198.0,141.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,78.0,7.0,25.0,58.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,150.0,40.0,119.0,65.0,67.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,10.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(135.0,172.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,130.0,170.0,123.0,161.0,188.0,14.0,98.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,37.0,190.0,87.0,100.0,12.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,193.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,107.0,133.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,1.0,66.0,149.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,195.0,158.0,169.0,169.0,105.0,139.0,57.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,181.0,66.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,100.0,51.0)));
	}
}
