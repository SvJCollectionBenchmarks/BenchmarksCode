package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile2AllSetsUnion_20220501200454224 {
	java.util.TreeSet<Double> collection = new java.util.TreeSet<>();
	@Setup(Level.Invocation)
	public void setupJTreeSet() {
		collection = new java.util.TreeSet<>();
		collection.add(7.0);
		collection.add(75.0);
		collection.add(145.0);
		collection.add(91.0);
		collection.add(175.0);
		collection.add(118.0);
		collection.add(140.0);
		collection.add(33.0);
		collection.add(172.0);
		collection.add(193.0);
		collection.add(28.0);
		collection.add(63.0);
		collection.add(176.0);
		collection.add(93.0);
		collection.add(69.0);
		collection.add(103.0);
		collection.add(126.0);
		collection.add(122.0);
		collection.add(138.0);
		collection.add(166.0);
		collection.add(15.0);
		collection.add(165.0);
		collection.add(80.0);
		collection.add(43.0);
		collection.add(98.0);
		collection.add(95.0);
		collection.add(191.0);
		collection.add(192.0);
		collection.add(12.0);
		collection.add(59.0);
		collection.add(48.0);
		collection.add(136.0);
		collection.add(198.0);
		collection.add(3.0);
		collection.add(125.0);
		collection.add(142.0);
		collection.add(158.0);
		collection.add(197.0);
		collection.add(14.0);
		collection.add(94.0);
		collection.add(131.0);
		collection.add(129.0);
		collection.add(110.0);
		collection.add(131.0);
		collection.add(106.0);
		collection.add(13.0);
		collection.add(191.0);
		collection.add(3.0);
		collection.add(39.0);
		collection.add(57.0);
		collection.add(172.0);
		collection.add(13.0);
		collection.add(73.0);
		collection.add(74.0);
		collection.add(192.0);
		collection.add(67.0);
		collection.add(41.0);
		collection.add(200.0);
		collection.add(161.0);
		collection.add(105.0);
		collection.add(143.0);
		collection.add(175.0);
		collection.add(177.0);
		collection.add(48.0);
		collection.add(18.0);
		collection.add(85.0);
		collection.add(33.0);
		collection.add(53.0);
		collection.add(199.0);
		collection.add(130.0);
		collection.add(146.0);
		collection.add(173.0);
		collection.add(31.0);
		collection.add(4.0);
		collection.add(124.0);
		collection.add(34.0);
		collection.add(137.0);
		collection.add(189.0);
		collection.add(131.0);
		collection.add(67.0);
		collection.add(146.0);
		collection.add(1.0);
		collection.add(93.0);
		collection.add(66.0);
		collection.add(176.0);
		collection.add(144.0);
		collection.add(137.0);
		collection.add(93.0);
		collection.add(98.0);
		collection.add(134.0);
		collection.add(66.0);
		collection.add(148.0);
		collection.add(173.0);
		collection.add(72.0);
		collection.add(180.0);
		collection.add(4.0);
		collection.add(40.0);
		collection.add(126.0);
		collection.add(59.0);
		collection.add(73.0);
		collection.add(184.0);
		collection.add(27.0);
		collection.add(129.0);
		collection.add(153.0);
		collection.add(11.0);
		collection.add(141.0);
		collection.add(128.0);
		collection.add(53.0);
		collection.add(65.0);
		collection.add(17.0);
		collection.add(138.0);
		collection.add(107.0);
		collection.add(6.0);
		collection.add(195.0);
		collection.add(150.0);
		collection.add(149.0);
		collection.add(136.0);
		collection.add(109.0);
		collection.add(111.0);
		collection.add(94.0);
		collection.add(26.0);
		collection.add(185.0);
		collection.add(148.0);
		collection.add(162.0);
		collection.add(124.0);
		collection.add(107.0);
		collection.add(28.0);
		collection.add(146.0);
		collection.add(105.0);
		collection.add(33.0);
		collection.add(152.0);
		collection.add(64.0);
		collection.add(148.0);
		collection.add(110.0);
		collection.add(17.0);
		collection.add(14.0);
		collection.add(8.0);
		collection.add(112.0);
		collection.add(129.0);
		collection.add(117.0);
		collection.add(68.0);
		collection.add(163.0);
		collection.add(111.0);
		collection.add(166.0);
		collection.add(150.0);
		collection.add(7.0);
		collection.add(132.0);
		collection.add(46.0);
		collection.add(97.0);
		collection.add(93.0);
		collection.add(124.0);
		collection.add(83.0);
		collection.add(75.0);
		collection.add(2.0);
		collection.add(156.0);
		collection.add(189.0);
		collection.add(50.0);
		collection.add(50.0);
		collection.add(183.0);
		collection.add(116.0);
		collection.add(173.0);
		collection.add(143.0);
		collection.add(126.0);
		collection.add(73.0);
		collection.add(4.0);
		collection.add(197.0);
		collection.add(185.0);
		collection.add(85.0);
		collection.add(181.0);
		collection.add(34.0);
		collection.add(191.0);
		collection.add(62.0);
		collection.add(28.0);
		collection.add(25.0);
		collection.add(51.0);
		collection.add(98.0);
		collection.add(200.0);
		collection.add(181.0);
		collection.add(194.0);
		collection.add(110.0);
		collection.add(143.0);
		collection.add(50.0);
		collection.add(191.0);
		collection.add(174.0);
		collection.add(19.0);
		collection.add(76.0);
		collection.add(168.0);
		collection.add(96.0);
		collection.add(95.0);
		collection.add(24.0);
		collection.add(160.0);
		collection.add(122.0);
		collection.add(14.0);
		collection.add(169.0);
		collection.add(45.0);
		collection.add(156.0);
		collection.add(91.0);
		collection.add(167.0);
		collection.add(129.0);
		collection.add(137.0);
		collection.add(119.0);
		collection.add(83.0);
		collection.add(60.0);
		collection.add(98.0);
		collection.add(93.0);
		collection.add(49.0);
		collection.add(171.0);
		collection.add(5.0);
		collection.add(41.0);
		collection.add(63.0);
		collection.add(106.0);
		collection.add(117.0);
		collection.add(96.0);
		collection.add(168.0);
		collection.add(85.0);
		collection.add(58.0);
		collection.add(159.0);
		collection.add(70.0);
		collection.add(33.0);
		collection.add(70.0);
		collection.add(104.0);
		collection.add(173.0);
		collection.add(183.0);
		collection.add(157.0);
		collection.add(157.0);
		collection.add(27.0);
		collection.add(188.0);
		collection.add(24.0);
		collection.add(50.0);
		collection.add(62.0);
		collection.add(109.0);
		collection.add(37.0);
		collection.add(95.0);
		collection.add(4.0);
		collection.add(28.0);
		collection.add(156.0);
		collection.add(16.0);
		collection.add(190.0);
		collection.add(198.0);
		collection.add(14.0);
		collection.add(27.0);
		collection.add(48.0);
		collection.add(137.0);
		collection.add(139.0);
		collection.add(7.0);
		collection.add(66.0);
		collection.add(144.0);
		collection.add(76.0);
		collection.add(146.0);
		collection.add(140.0);
		collection.add(94.0);
		collection.add(18.0);
		collection.add(167.0);
		collection.add(149.0);
		collection.add(11.0);
		collection.add(111.0);
		collection.add(59.0);
		collection.add(137.0);
		collection.add(24.0);
		collection.add(183.0);
		collection.add(28.0);
		collection.add(184.0);
		collection.add(74.0);
		collection.add(130.0);
		collection.add(123.0);
		collection.add(35.0);
		collection.add(91.0);
		collection.add(49.0);
		collection.add(197.0);
		collection.add(64.0);
		collection.add(191.0);
		collection.add(135.0);
		collection.add(35.0);
		collection.add(119.0);
		collection.add(121.0);
		collection.add(189.0);
		collection.add(25.0);
		collection.add(58.0);
		collection.add(140.0);
		collection.add(166.0);
		collection.add(121.0);
		collection.add(125.0);
		collection.add(43.0);
		collection.add(123.0);
		collection.add(180.0);
		collection.add(160.0);
		collection.add(109.0);
		collection.add(199.0);
		collection.add(190.0);
		collection.add(141.0);
		collection.add(177.0);
		collection.add(102.0);
		collection.add(162.0);
		collection.add(149.0);
		collection.add(80.0);
		collection.add(43.0);
		collection.add(146.0);
		collection.add(23.0);
		collection.add(119.0);
		collection.add(54.0);
		collection.add(75.0);
		collection.add(87.0);
		collection.add(66.0);
		collection.add(193.0);
		collection.add(25.0);
		collection.add(96.0);
		collection.add(141.0);
		collection.add(73.0);
		collection.add(113.0);
		collection.add(133.0);
		collection.add(175.0);
		collection.add(94.0);
		collection.add(104.0);
		collection.add(133.0);
		collection.add(116.0);
		collection.add(192.0);
		collection.add(92.0);
		collection.add(122.0);
		collection.add(53.0);
		collection.add(135.0);
		collection.add(36.0);
		collection.add(37.0);
		collection.add(18.0);
		collection.add(145.0);
		collection.add(55.0);
		collection.add(86.0);
		collection.add(71.0);
		collection.add(200.0);
		collection.add(67.0);
		collection.add(158.0);
		collection.add(86.0);
		collection.add(110.0);
		collection.add(135.0);
		collection.add(13.0);
		collection.add(129.0);
		collection.add(57.0);
		collection.add(5.0);
		collection.add(179.0);
		collection.add(110.0);
		collection.add(61.0);
		collection.add(170.0);
		collection.add(141.0);
		collection.add(92.0);
		collection.add(140.0);
		collection.add(13.0);
		collection.add(112.0);
		collection.add(127.0);
		collection.add(113.0);
		collection.add(122.0);
		collection.add(181.0);
		collection.add(127.0);
		collection.add(107.0);
		collection.add(49.0);
		collection.add(157.0);
		collection.add(190.0);
		collection.add(151.0);
		collection.add(19.0);
		collection.add(8.0);
		collection.add(88.0);
		collection.add(137.0);
		collection.add(110.0);
		collection.add(137.0);
		collection.add(67.0);
		collection.add(187.0);
		collection.add(159.0);
		collection.add(171.0);
		collection.add(65.0);
		collection.add(67.0);
		collection.add(24.0);
		collection.add(93.0);
		collection.add(167.0);
		collection.add(156.0);
		collection.add(91.0);
		collection.add(171.0);
		collection.add(37.0);
		collection.add(68.0);
		collection.add(115.0);
		collection.add(113.0);
		collection.add(35.0);
		collection.add(52.0);
		collection.add(139.0);
		collection.add(50.0);
		collection.add(92.0);
		collection.add(91.0);
		collection.add(59.0);
		collection.add(93.0);
		collection.add(15.0);
		collection.add(102.0);
		collection.add(81.0);
		collection.add(172.0);
		collection.add(94.0);
		collection.add(109.0);
		collection.add(5.0);
		collection.add(183.0);
		collection.add(195.0);
		collection.add(104.0);
		collection.add(56.0);
		collection.add(74.0);
		collection.add(127.0);
		collection.add(75.0);
		collection.add(51.0);
		collection.add(134.0);
		collection.add(91.0);
		collection.add(85.0);
		collection.add(79.0);
		collection.add(91.0);
		collection.add(151.0);
		collection.add(158.0);
		collection.add(197.0);
		collection.add(41.0);
		collection.add(83.0);
		collection.add(189.0);
		collection.add(76.0);
		collection.add(58.0);
		collection.add(16.0);
		collection.add(39.0);
		collection.add(85.0);
		collection.add(97.0);
		collection.add(80.0);
		collection.add(12.0);
		collection.add(180.0);
		collection.add(157.0);
		collection.add(173.0);
		collection.add(158.0);
		collection.add(72.0);
		collection.add(180.0);
		collection.add(19.0);
		collection.add(176.0);
		collection.add(158.0);
		collection.add(40.0);
		collection.add(80.0);
		collection.add(66.0);
		collection.add(55.0);
		collection.add(56.0);
		collection.add(151.0);
		collection.add(174.0);
		collection.add(19.0);
		collection.add(199.0);
		collection.add(67.0);
		collection.add(20.0);
		collection.add(115.0);
		collection.add(131.0);
		collection.add(193.0);
		collection.add(127.0);
		collection.add(23.0);
		collection.add(27.0);
		collection.add(140.0);
		collection.add(101.0);
		collection.add(108.0);
		collection.add(176.0);
		collection.add(48.0);
		collection.add(115.0);
		collection.add(36.0);
		collection.add(42.0);
		collection.add(106.0);
		collection.add(192.0);
		collection.add(93.0);
		collection.add(32.0);
		collection.add(199.0);
		collection.add(113.0);
		collection.add(30.0);
		collection.add(99.0);
		collection.add(11.0);
		collection.add(151.0);
		collection.add(78.0);
		collection.add(80.0);
		collection.add(94.0);
		collection.add(161.0);
		collection.add(25.0);
		collection.add(129.0);
		collection.add(59.0);
		collection.add(106.0);
		collection.add(20.0);
		collection.add(53.0);
		collection.add(61.0);
		collection.add(192.0);
		collection.add(17.0);
		collection.add(181.0);
		collection.add(70.0);
		collection.add(28.0);
		collection.add(73.0);
		collection.add(117.0);
		collection.add(38.0);
		collection.add(104.0);
		collection.add(166.0);
		collection.add(26.0);
		collection.add(74.0);
		collection.add(31.0);
		collection.add(156.0);
		collection.add(100.0);
		collection.add(47.0);
		collection.add(91.0);
		collection.add(8.0);
		collection.add(113.0);
		collection.add(143.0);
		collection.add(6.0);
		collection.add(43.0);
		collection.add(150.0);
		collection.add(45.0);
		collection.add(162.0);
		collection.add(173.0);
		collection.add(197.0);
		collection.add(70.0);
		collection.add(49.0);
		collection.add(99.0);
		collection.add(2.0);
		collection.add(195.0);
		collection.add(148.0);
		collection.add(61.0);
		collection.add(63.0);
		collection.add(74.0);
		collection.add(34.0);
		collection.add(189.0);
		collection.add(70.0);
		collection.add(161.0);
		collection.add(10.0);
		collection.add(80.0);
		collection.add(160.0);
		collection.add(102.0);
		collection.add(30.0);
		collection.add(41.0);
		collection.add(152.0);
		collection.add(69.0);
		collection.add(171.0);
		collection.add(184.0);
		collection.add(88.0);
		collection.add(180.0);
		collection.add(10.0);
		collection.add(106.0);
		collection.add(139.0);
		collection.add(173.0);
		collection.add(114.0);
		collection.add(122.0);
		collection.add(170.0);
		collection.add(137.0);
		collection.add(91.0);
		collection.add(61.0);
		collection.add(172.0);
		collection.add(92.0);
		collection.add(3.0);
		collection.add(52.0);
		collection.add(69.0);
		collection.add(135.0);
		collection.add(110.0);
		collection.add(2.0);
		collection.add(39.0);
		collection.add(149.0);
		collection.add(19.0);
		collection.add(120.0);
		collection.add(170.0);
		collection.add(199.0);
		collection.add(103.0);
		collection.add(41.0);
		collection.add(121.0);
		collection.add(59.0);
		collection.add(155.0);
		collection.add(28.0);
		collection.add(32.0);
		collection.add(196.0);
		collection.add(119.0);
		collection.add(167.0);
		collection.add(184.0);
		collection.add(117.0);
		collection.add(50.0);
		collection.add(100.0);
		collection.add(81.0);
		collection.add(115.0);
		collection.add(197.0);
		collection.add(166.0);
		collection.add(119.0);
		collection.add(180.0);
		collection.add(164.0);
		collection.add(79.0);
		collection.add(173.0);
		collection.add(101.0);
		collection.add(95.0);
		collection.add(144.0);
		collection.add(112.0);
		collection.add(154.0);
		collection.add(36.0);
		collection.add(71.0);
		collection.add(112.0);
		collection.add(94.0);
		collection.add(94.0);
		collection.add(139.0);
		collection.add(74.0);
		collection.add(58.0);
		collection.add(80.0);
		collection.add(110.0);
		collection.add(58.0);
		collection.add(169.0);
		collection.add(140.0);
		collection.add(170.0);
		collection.add(133.0);
		collection.add(85.0);
		collection.add(135.0);
		collection.add(17.0);
		collection.add(105.0);
		collection.add(68.0);
		collection.add(164.0);
		collection.add(160.0);
		collection.add(180.0);
		collection.add(134.0);
		collection.add(173.0);
		collection.add(175.0);
		collection.add(122.0);
		collection.add(21.0);
		collection.add(33.0);
		collection.add(199.0);
		collection.add(100.0);
		collection.add(151.0);
		collection.add(191.0);
		collection.add(22.0);
		collection.add(116.0);
		collection.add(53.0);
		collection.add(155.0);
		collection.add(16.0);
		collection.add(70.0);
		collection.add(1.0);
		collection.add(104.0);
		collection.add(48.0);
		collection.add(189.0);
		collection.add(167.0);
		collection.add(61.0);
		collection.add(148.0);
		collection.add(82.0);
		collection.add(145.0);
		collection.add(117.0);
		collection.add(93.0);
		collection.add(178.0);
		collection.add(44.0);
		collection.add(51.0);
		collection.add(199.0);
		collection.add(52.0);
		collection.add(14.0);
		collection.add(195.0);
		collection.add(43.0);
		collection.add(49.0);
		collection.add(163.0);
		collection.add(44.0);
		collection.add(62.0);
		collection.add(164.0);
		collection.add(145.0);
		collection.add(164.0);
		collection.add(60.0);
		collection.add(21.0);
		collection.add(140.0);
		collection.add(180.0);
		collection.add(137.0);
		collection.add(20.0);
		collection.add(171.0);
		collection.add(42.0);
		collection.add(93.0);
		collection.add(153.0);
		collection.add(137.0);
		collection.add(62.0);
		collection.add(31.0);
		collection.add(99.0);
		collection.add(136.0);
		collection.add(80.0);
		collection.add(165.0);
		collection.add(75.0);
		collection.add(77.0);
		collection.add(101.0);
		collection.add(114.0);
		collection.add(58.0);
		collection.add(1.0);
		collection.add(143.0);
		collection.add(33.0);
		collection.add(166.0);
		collection.add(134.0);
		collection.add(145.0);
		collection.add(156.0);
		collection.add(182.0);
		collection.add(107.0);
		collection.add(94.0);
		collection.add(38.0);
		collection.add(86.0);
		collection.add(114.0);
		collection.add(103.0);
		collection.add(94.0);
		collection.add(186.0);
		collection.add(177.0);
		collection.add(167.0);
		collection.add(66.0);
		collection.add(179.0);
		collection.add(119.0);
		collection.add(106.0);
		collection.add(73.0);
		collection.add(184.0);
		collection.add(158.0);
		collection.add(75.0);
		collection.add(111.0);
		collection.add(41.0);
		collection.add(198.0);
		collection.add(36.0);
		collection.add(2.0);
		collection.add(87.0);
		collection.add(109.0);
		collection.add(180.0);
		collection.add(8.0);
		collection.add(153.0);
		collection.add(54.0);
		collection.add(173.0);
		collection.add(32.0);
		collection.add(44.0);
		collection.add(4.0);
		collection.add(43.0);
		collection.add(145.0);
		collection.add(25.0);
		collection.add(71.0);
		collection.add(175.0);
		collection.add(126.0);
		collection.add(99.0);
		collection.add(3.0);
		collection.add(86.0);
		collection.add(12.0);
		collection.add(33.0);
		collection.add(2.0);
		collection.add(186.0);
		collection.add(144.0);
		collection.add(138.0);
		collection.add(138.0);
		collection.add(35.0);
		collection.add(157.0);
		collection.add(194.0);
		collection.add(40.0);
		collection.add(52.0);
		collection.add(33.0);
		collection.add(119.0);
		collection.add(22.0);
		collection.add(51.0);
		collection.add(126.0);
		collection.add(133.0);
		collection.add(32.0);
		collection.add(87.0);
		collection.add(38.0);
		collection.add(179.0);
		collection.add(90.0);
		collection.add(170.0);
		collection.add(95.0);
		collection.add(113.0);
		collection.add(133.0);
		collection.add(185.0);
		collection.add(149.0);
		collection.add(78.0);
		collection.add(92.0);
		collection.add(30.0);
		collection.add(35.0);
		collection.add(93.0);
		collection.add(146.0);
		collection.add(14.0);
		collection.add(40.0);
		collection.add(92.0);
		collection.add(74.0);
		collection.add(26.0);
		collection.add(172.0);
		collection.add(169.0);
		collection.add(192.0);
		collection.add(177.0);
		collection.add(184.0);
		collection.add(106.0);
		collection.add(123.0);
		collection.add(104.0);
		collection.add(111.0);
		collection.add(115.0);
		collection.add(85.0);
		collection.add(140.0);
		collection.add(110.0);
		collection.add(48.0);
		collection.add(197.0);
		collection.add(136.0);
		collection.add(196.0);
		collection.add(40.0);
		collection.add(4.0);
		collection.add(61.0);
		collection.add(62.0);
		collection.add(190.0);
		collection.add(128.0);
		collection.add(119.0);
		collection.add(85.0);
		collection.add(138.0);
		collection.add(33.0);
		collection.add(119.0);
		collection.add(116.0);
		collection.add(27.0);
		collection.add(71.0);
		collection.add(118.0);
		collection.add(123.0);
		collection.add(166.0);
		collection.add(176.0);
		collection.add(82.0);
		collection.add(169.0);
		collection.add(190.0);
		collection.add(85.0);
		collection.add(13.0);
		collection.add(16.0);
		collection.add(7.0);
		collection.add(151.0);
		collection.add(45.0);
		collection.add(10.0);
		collection.add(15.0);
		collection.add(21.0);
		collection.add(32.0);
		collection.add(157.0);
		collection.add(12.0);
		collection.add(71.0);
		collection.add(128.0);
		collection.add(164.0);
		collection.add(99.0);
		collection.add(97.0);
		collection.add(168.0);
		collection.add(194.0);
		collection.add(14.0);
		collection.add(42.0);
		collection.add(76.0);
		collection.add(42.0);
		collection.add(98.0);
		collection.add(199.0);
		collection.add(16.0);
		collection.add(126.0);
		collection.add(172.0);
		collection.add(35.0);
		collection.add(20.0);
		collection.add(52.0);
		collection.add(106.0);
		collection.add(32.0);
		collection.add(55.0);
		collection.add(195.0);
		collection.add(126.0);
		collection.add(53.0);
		collection.add(88.0);
		collection.add(99.0);
		collection.add(178.0);
		collection.add(183.0);
		collection.add(153.0);
		collection.add(151.0);
		collection.add(27.0);
		collection.add(58.0);
		collection.add(153.0);
		collection.add(134.0);
		collection.add(149.0);
		collection.add(74.0);
		collection.add(160.0);
		collection.add(192.0);
		collection.add(154.0);
		collection.add(72.0);
		collection.add(195.0);
		collection.add(126.0);
		collection.add(158.0);
		collection.add(135.0);
		collection.add(126.0);
		collection.add(104.0);
		collection.add(15.0);
		collection.add(164.0);
		collection.add(197.0);
		collection.add(8.0);
		collection.add(43.0);
		collection.add(145.0);
		collection.add(30.0);
		collection.add(25.0);
		collection.add(126.0);
		collection.add(95.0);
		collection.add(76.0);
		collection.add(89.0);
		collection.add(104.0);
		collection.add(6.0);
		collection.add(128.0);
		collection.add(179.0);
		collection.add(100.0);
		collection.add(60.0);
		collection.add(101.0);
		collection.add(143.0);
		collection.add(183.0);
		collection.add(179.0);
		collection.add(46.0);
		collection.add(148.0);
		collection.add(163.0);
		collection.add(53.0);
		collection.add(56.0);
		collection.add(21.0);
		collection.add(198.0);
		collection.add(192.0);
		collection.add(85.0);
		collection.add(153.0);
		collection.add(78.0);
		collection.add(132.0);
		collection.add(10.0);
		collection.add(36.0);
		collection.add(56.0);
		collection.add(25.0);
		collection.add(31.0);
		collection.add(3.0);
		collection.add(161.0);
		collection.add(56.0);
		collection.add(160.0);
		collection.add(44.0);
		collection.add(108.0);
		collection.add(23.0);
		collection.add(64.0);
		collection.add(96.0);
		collection.add(65.0);
		collection.add(105.0);
		collection.add(95.0);
		collection.add(6.0);
		collection.add(185.0);
		collection.add(15.0);
		collection.add(175.0);
		collection.add(195.0);
		collection.add(189.0);
		collection.add(175.0);
		collection.add(54.0);
		collection.add(61.0);
		collection.add(186.0);
		collection.add(58.0);
		collection.add(81.0);
		collection.add(10.0);
		collection.add(190.0);
		collection.add(175.0);
		collection.add(31.0);
		collection.add(43.0);
		collection.add(95.0);
		collection.add(123.0);
		collection.add(184.0);
		collection.add(187.0);
		collection.add(41.0);
		collection.add(53.0);
		collection.add(127.0);
		collection.add(39.0);
		collection.add(156.0);
		collection.add(101.0);
		collection.add(107.0);
		collection.add(22.0);
		collection.add(5.0);
		collection.add(106.0);
		collection.add(178.0);
		collection.add(11.0);
		collection.add(14.0);
		collection.add(171.0);
		collection.add(200.0);
		collection.add(134.0);
		collection.add(96.0);
		collection.add(15.0);
		collection.add(140.0);
		collection.add(178.0);
		collection.add(105.0);
		collection.add(60.0);
		collection.add(57.0);
		collection.add(69.0);
		collection.add(158.0);
		collection.add(105.0);
		collection.add(163.0);
		collection.add(139.0);
		collection.add(85.0);
		collection.add(1.0);
		collection.add(93.0);
		collection.add(4.0);
		collection.add(71.0);
		collection.add(10.0);
		collection.add(81.0);
		collection.add(171.0);
		collection.add(140.0);
		collection.add(27.0);
		collection.add(109.0);
		collection.add(75.0);
		collection.add(5.0);
		collection.add(61.0);
		collection.add(1.0);
		collection.add(140.0);
		collection.add(198.0);
		collection.add(180.0);
		collection.add(118.0);
		collection.add(8.0);
		collection.add(33.0);
		collection.add(180.0);
		collection.add(52.0);
		collection.add(165.0);
		collection.add(83.0);
		collection.add(6.0);
		collection.add(169.0);
		collection.add(116.0);
		collection.add(89.0);
		collection.add(91.0);
		collection.add(72.0);
		collection.add(199.0);
		collection.add(37.0);
		collection.add(32.0);
		collection.add(99.0);
		collection.add(129.0);
		collection.add(113.0);
		collection.add(28.0);
		collection.add(189.0);
		collection.add(35.0);
		collection.add(97.0);
		collection.add(176.0);
		collection.add(16.0);
		collection.add(113.0);
		collection.add(61.0);
		collection.add(144.0);
		collection.add(13.0);
		collection.add(106.0);
		collection.add(92.0);
		collection.add(21.0);
		collection.add(181.0);
		collection.add(117.0);
		collection.add(37.0);
		collection.add(194.0);
		collection.add(139.0);
		collection.add(69.0);
		collection.add(9.0);
		collection.add(44.0);
		collection.add(136.0);
		collection.add(45.0);
		collection.add(30.0);
		collection.add(25.0);
		collection.add(178.0);
		collection.add(116.0);
		collection.add(39.0);
		collection.add(6.0);
		collection.add(39.0);
		collection.add(133.0);
		collection.add(139.0);
		collection.add(104.0);
		collection.add(107.0);
		collection.add(153.0);
		collection.add(125.0);
		collection.add(17.0);
		collection.add(169.0);
		collection.add(16.0);
		collection.add(148.0);
		collection.add(9.0);
		collection.add(137.0);
		collection.add(85.0);
		collection.add(47.0);
		collection.add(44.0);
		collection.add(135.0);
		collection.add(73.0);
		collection.add(55.0);
		collection.add(27.0);
		collection.add(195.0);
		collection.add(65.0);
		collection.add(15.0);
		collection.add(33.0);
		collection.add(74.0);
		collection.add(20.0);
		collection.add(34.0);
		collection.add(69.0);
		collection.add(2.0);
		collection.add(85.0);
		collection.add(189.0);
		collection.add(74.0);
		collection.add(71.0);
		collection.add(107.0);
		collection.add(36.0);
		collection.add(126.0);
		collection.add(84.0);
		collection.add(151.0);
		collection.add(159.0);
		collection.add(24.0);
		collection.add(179.0);
		collection.add(131.0);
		collection.add(141.0);
		collection.add(199.0);
		collection.add(87.0);
		collection.add(145.0);
		collection.add(82.0);
		collection.add(123.0);
		collection.add(158.0);
		collection.add(112.0);
		collection.add(23.0);
		collection.add(10.0);
		collection.add(200.0);
		collection.add(190.0);
		collection.add(126.0);
		collection.add(24.0);
		collection.add(79.0);
		collection.add(172.0);
		collection.add(180.0);
		collection.add(167.0);
		collection.add(62.0);
		collection.add(43.0);
		collection.add(14.0);
		collection.add(93.0);
		collection.add(90.0);
		collection.add(2.0);
		collection.add(53.0);
		collection.add(151.0);
		collection.add(64.0);
		collection.add(61.0);
		collection.add(12.0);
		collection.add(123.0);
		collection.add(33.0);
		collection.add(11.0);
		collection.add(146.0);
		collection.add(132.0);
		collection.add(181.0);
		collection.add(158.0);
		collection.add(101.0);
		collection.add(72.0);
		collection.add(123.0);
		collection.add(80.0);
		collection.add(49.0);
		collection.add(144.0);
		collection.add(142.0);
		collection.add(200.0);
		collection.add(112.0);
		collection.add(145.0);
		collection.add(118.0);
		collection.add(197.0);
		collection.add(96.0);
		collection.add(121.0);
		collection.add(15.0);
		collection.add(16.0);
		collection.add(130.0);
		collection.add(80.0);
		collection.add(135.0);
		collection.add(140.0);
		collection.add(64.0);
		collection.add(137.0);
		collection.add(200.0);
		collection.add(134.0);
		collection.add(29.0);
		collection.add(120.0);
		collection.add(19.0);
		collection.add(57.0);
		collection.add(122.0);
		collection.add(32.0);
		collection.add(165.0);
		collection.add(108.0);
		collection.add(63.0);
		collection.add(8.0);
		collection.add(3.0);
		collection.add(177.0);
		collection.add(65.0);
		collection.add(15.0);
		collection.add(7.0);
		collection.add(192.0);
		collection.add(160.0);
		collection.add(36.0);
		collection.add(142.0);
		collection.add(57.0);
		collection.add(111.0);
		collection.add(1.0);
		collection.add(165.0);
		collection.add(197.0);
		collection.add(160.0);
		collection.add(112.0);
		collection.add(3.0);
		collection.add(172.0);
		collection.add(16.0);
		collection.add(126.0);
		collection.add(15.0);
		collection.add(5.0);
		collection.add(102.0);
		collection.add(144.0);
		collection.add(18.0);
		collection.add(120.0);
		collection.add(141.0);
		collection.add(124.0);
		collection.add(159.0);
		collection.add(45.0);
		collection.add(165.0);
		collection.add(182.0);
		collection.add(95.0);
		collection.add(168.0);
		collection.add(187.0);
		collection.add(150.0);
		collection.add(122.0);
		collection.add(116.0);
		collection.add(104.0);
		collection.add(139.0);
		collection.add(76.0);
		collection.add(67.0);
		collection.add(79.0);
		collection.add(121.0);
		collection.add(133.0);
		collection.add(118.0);
		collection.add(15.0);
		collection.add(198.0);
		collection.add(161.0);
		collection.add(151.0);
		collection.add(151.0);
		collection.add(161.0);
		collection.add(65.0);
		collection.add(65.0);
		collection.add(200.0);
		collection.add(179.0);
		collection.add(111.0);
		collection.add(138.0);
		collection.add(81.0);
		collection.add(78.0);
		collection.add(42.0);
		collection.add(127.0);
		collection.add(179.0);
		collection.add(144.0);
		collection.add(9.0);
		collection.add(32.0);
		collection.add(176.0);
		collection.add(61.0);
		collection.add(100.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=30)
	public void JTreeSet(Blackhole bh) {
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,103.0,148.0,145.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,146.0,146.0,177.0,122.0,44.0,23.0,97.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,56.0,79.0,79.0,182.0,121.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,131.0,23.0,156.0,16.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,64.0,106.0,14.0,123.0,156.0,56.0,162.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,41.0,151.0,200.0,97.0,173.0,80.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,172.0,82.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,109.0,80.0,45.0,189.0,72.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,134.0,33.0,85.0,153.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,23.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,137.0,132.0,22.0,35.0,91.0,65.0,37.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,90.0,101.0,84.0,64.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,83.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,32.0,77.0,24.0,90.0,6.0,126.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,118.0,91.0,193.0,105.0,1.0,69.0,99.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,117.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,142.0,102.0,104.0,78.0,115.0,54.0,40.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,105.0,149.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,106.0,97.0,92.0,98.0,142.0,74.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,162.0,168.0,50.0,141.0,56.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,135.0,113.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,127.0,198.0,174.0,32.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,141.0,54.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,54.0,77.0,28.0,158.0,120.0,120.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,166.0,180.0,108.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,153.0,170.0,120.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,118.0,86.0,91.0,66.0,72.0,116.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,25.0,91.0,171.0,112.0,68.0,104.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,129.0,174.0,89.0,200.0,115.0,181.0,113.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,110.0,107.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,100.0,66.0,107.0,13.0,147.0,165.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,63.0,61.0,55.0,35.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,20.0,48.0,53.0,98.0,195.0,133.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,110.0,67.0,92.0,106.0,185.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,134.0,142.0,189.0,141.0,117.0,187.0,21.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,109.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(66.0,142.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,178.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,164.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,128.0,43.0,195.0,62.0,161.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,111.0,190.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,126.0,137.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,101.0,106.0,110.0,113.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,116.0,144.0,35.0,176.0,179.0,96.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,82.0,7.0,127.0,18.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,43.0,179.0,30.0,120.0,63.0,52.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,13.0,100.0,121.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,156.0,3.0,80.0,154.0,194.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,161.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,111.0,49.0,168.0,164.0,47.0,76.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,76.0,16.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,185.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,17.0,16.0,48.0,84.0,16.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,106.0,189.0,57.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,164.0,50.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,84.0,67.0,172.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,46.0,164.0,6.0,76.0,197.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,81.0,19.0,2.0,169.0,3.0,74.0,29.0,19.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,195.0,115.0,64.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,161.0,167.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,158.0,163.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,152.0,11.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,128.0,67.0,36.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,138.0,8.0,92.0,54.0,116.0,35.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,147.0,10.0,167.0,55.0,195.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,53.0,131.0,76.0,79.0,33.0,88.0,23.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,51.0,101.0,49.0,153.0,179.0,113.0,40.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,143.0,38.0,32.0,117.0,173.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,12.0,113.0,155.0,94.0,64.0,192.0,195.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,187.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,194.0,100.0,17.0,190.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,20.0,35.0,32.0,94.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,194.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,173.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,51.0,156.0,99.0,79.0,164.0,28.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,11.0,101.0,27.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,5.0,184.0,125.0,159.0,99.0,56.0,114.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,67.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,132.0,68.0,153.0,105.0,116.0,62.0,78.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,51.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,28.0,42.0,44.0,93.0,164.0,147.0,129.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,109.0,162.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,165.0,179.0,4.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,16.0,118.0,35.0,98.0,39.0,195.0,109.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,139.0,113.0,198.0,77.0,81.0,143.0,119.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,116.0,196.0,92.0,147.0,200.0,59.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,10.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,146.0,155.0,110.0,194.0,146.0,14.0,92.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,38.0,157.0,30.0,144.0,188.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,165.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,154.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,198.0,150.0,20.0,151.0,193.0,126.0,83.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,63.0,110.0,99.0,145.0,54.0,40.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,113.0,53.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,51.0,2.0,45.0,27.0,198.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,135.0,27.0,60.0,146.0,78.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,84.0,104.0,199.0,191.0,160.0,121.0,165.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,137.0,140.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,144.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,50.0,122.0,97.0,30.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,10.0,58.0,111.0,156.0,91.0,127.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,129.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,179.0,136.0,57.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,69.0,86.0,179.0,125.0,167.0,52.0,28.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,4.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,177.0,167.0,55.0,154.0,174.0,32.0,172.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,7.0,119.0,106.0,104.0,71.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,121.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,157.0,44.0,55.0,73.0,128.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,90.0,181.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,84.0,74.0,165.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,115.0,34.0,131.0,6.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,86.0,57.0,180.0,34.0,138.0,133.0,126.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,119.0,156.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,199.0,169.0,100.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,56.0,103.0,111.0,192.0,8.0,178.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(79.0,110.0,17.0,55.0,118.0,58.0,114.0,11.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,31.0,72.0,194.0,158.0,96.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,8.0,118.0,5.0,68.0,39.0,43.0,145.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,176.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,102.0,118.0,87.0,149.0,57.0,143.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,29.0,5.0,40.0,180.0,164.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,11.0,142.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,4.0,162.0,53.0,22.0,145.0,132.0,127.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,54.0,107.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,102.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,64.0,162.0,37.0,33.0,25.0,65.0,107.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,37.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,88.0,62.0,134.0,7.0,84.0,145.0,108.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,58.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,16.0,86.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,90.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,152.0,141.0,7.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,33.0,95.0,66.0,176.0,90.0,41.0,64.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,85.0,95.0,112.0,108.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(79.0,108.0,28.0,80.0,119.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,45.0,157.0,106.0,59.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,74.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,97.0,103.0,50.0,39.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,114.0,54.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,69.0,155.0,155.0,35.0,145.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,88.0,107.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,118.0,135.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,30.0,14.0,177.0,54.0,25.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,113.0,30.0,16.0,58.0,58.0,33.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,134.0,57.0,67.0,11.0,163.0,127.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(183.0,198.0,62.0,57.0,41.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,94.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,173.0,58.0,43.0,139.0,106.0,100.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,134.0,136.0,108.0,62.0,157.0,163.0,1.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,147.0,198.0,111.0,162.0,99.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,93.0,153.0,58.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,174.0,200.0,14.0,53.0,89.0,112.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,111.0,117.0,157.0,121.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,144.0,181.0,22.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,117.0,3.0,42.0,150.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,101.0,32.0,157.0,184.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,181.0,164.0,53.0,44.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,81.0,58.0,56.0,121.0,174.0,154.0,18.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,80.0,8.0,56.0,132.0,196.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,58.0,141.0,44.0,118.0,142.0,49.0,92.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,149.0,97.0,129.0,180.0,4.0,150.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,54.0,131.0,178.0,150.0,63.0,93.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,30.0,125.0,24.0,135.0,195.0,35.0,167.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,104.0,50.0,72.0,97.0,171.0,181.0,73.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,60.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,20.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,30.0,60.0,74.0,135.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,150.0,2.0,118.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,71.0,81.0,12.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,171.0,81.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,58.0,81.0,133.0,86.0,7.0,143.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,98.0,136.0,49.0,66.0,186.0,199.0,130.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,194.0,4.0,42.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,189.0,115.0,71.0,21.0,76.0,180.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,71.0,127.0,162.0,113.0,68.0,19.0,20.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,106.0,39.0,179.0,139.0,160.0,38.0,43.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,145.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(138.0,128.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,57.0,58.0,46.0,64.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,111.0,6.0,137.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,135.0,150.0,114.0,56.0,42.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,51.0,194.0,197.0,77.0,133.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,26.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,57.0,44.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,176.0,110.0,23.0,168.0,56.0,200.0,171.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,200.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(94.0,63.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,43.0,166.0,167.0,124.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,32.0,27.0,61.0,148.0,41.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,97.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,163.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,124.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,68.0,6.0,138.0,140.0,44.0,22.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,143.0,8.0,72.0,90.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,98.0,27.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,86.0,41.0,163.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,53.0,79.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,135.0,27.0,194.0,144.0,100.0,75.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,75.0,30.0,189.0,142.0,152.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,100.0,110.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,110.0,31.0,114.0,28.0,184.0,69.0,41.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,41.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,115.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,170.0,131.0,102.0,79.0,179.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,199.0,32.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,57.0,187.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,61.0,104.0,162.0,30.0,187.0,72.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,73.0,59.0,180.0,177.0,31.0,189.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,72.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,121.0,154.0,52.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,72.0,48.0,35.0,2.0,94.0,9.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,32.0,80.0,33.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,108.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,34.0,120.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,131.0,148.0,152.0,13.0,195.0,151.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,37.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,34.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,98.0,160.0,46.0,77.0,128.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,185.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,168.0,9.0,74.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,53.0,142.0,194.0,37.0,127.0,27.0,178.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,17.0,39.0,81.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,139.0,178.0,113.0,117.0,20.0,158.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,146.0,199.0,90.0,127.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,74.0,141.0,11.0,69.0,10.0,196.0,94.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,131.0,121.0,79.0,19.0,1.0,26.0,119.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,87.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,124.0,103.0,139.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,13.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,136.0,82.0,197.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,168.0,156.0,191.0,2.0,131.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,51.0,180.0,26.0,180.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,35.0,193.0,133.0,70.0,96.0,147.0,179.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,125.0,163.0,26.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,184.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,152.0,123.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,65.0,197.0,174.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,130.0,24.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,91.0,158.0,47.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,39.0,75.0,75.0,54.0,145.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,150.0,197.0,135.0,137.0,32.0,180.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,29.0,83.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,105.0,109.0,81.0,196.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,182.0,4.0,158.0,123.0,189.0,78.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,94.0,115.0,98.0,122.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,85.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,143.0,129.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,133.0,100.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,102.0,179.0,145.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,189.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,186.0,66.0,82.0,101.0,110.0,151.0,175.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,109.0,132.0,75.0,162.0,7.0,136.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,16.0,52.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,3.0,176.0,82.0,79.0,75.0,33.0,122.0,166.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,87.0,141.0,33.0,82.0,40.0,101.0,42.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,71.0,71.0,161.0,177.0,97.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,81.0,28.0,6.0,50.0,75.0,144.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,176.0,189.0,62.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,113.0,126.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,85.0,29.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,184.0,170.0,99.0,4.0,189.0,168.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,146.0,189.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,96.0,54.0,42.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,25.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,132.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,131.0,129.0,45.0,5.0,189.0,100.0,67.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,91.0,23.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,150.0,6.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,154.0,122.0,119.0,179.0,64.0,68.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,200.0,117.0,44.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,130.0,29.0,117.0,177.0,189.0,168.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,13.0,24.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,152.0,155.0,19.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,119.0,102.0,112.0,2.0,114.0,81.0,81.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,59.0,133.0,148.0,145.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,103.0,58.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(30.0,195.0,167.0,65.0,43.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,39.0,70.0,35.0,55.0,188.0,78.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,121.0,65.0,84.0,172.0,89.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,43.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,28.0,115.0,25.0,180.0,26.0,194.0,170.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,138.0,90.0,184.0,64.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,72.0,24.0,110.0,37.0,163.0,144.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,178.0,186.0,126.0,43.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,194.0,51.0,14.0,194.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,187.0,161.0,9.0,46.0,58.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,81.0,187.0,153.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,2.0,92.0,10.0,161.0,118.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,77.0,50.0,181.0,53.0,72.0,107.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,76.0,102.0,101.0,2.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,11.0,23.0,161.0,155.0,18.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,11.0,72.0,159.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(66.0,118.0,71.0,141.0,147.0,153.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,196.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,111.0,97.0,133.0,18.0,23.0,182.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,96.0,40.0,195.0,196.0,81.0,105.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,159.0,145.0,77.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,142.0,193.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,71.0,123.0,200.0,20.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,191.0,67.0,191.0,137.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,191.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,105.0,7.0,163.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,115.0,44.0,74.0,113.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,144.0,5.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,129.0,123.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,128.0,43.0,128.0,56.0,197.0,83.0,193.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,7.0,121.0,5.0,6.0,86.0,103.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,26.0,182.0,121.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,142.0,144.0,114.0,140.0,30.0,133.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,135.0,60.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,104.0,145.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,145.0,89.0,45.0,47.0,44.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,20.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,25.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,171.0,51.0,183.0,179.0,164.0,30.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,58.0,184.0,39.0,27.0,182.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,37.0,103.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,63.0,129.0,66.0,78.0,58.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,187.0,100.0,72.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,33.0,10.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,105.0,24.0,37.0,87.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,39.0,171.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,158.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,69.0,111.0,189.0,25.0,17.0,129.0,127.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,141.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(171.0,83.0,120.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,159.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,168.0,23.0,194.0,172.0,4.0,2.0,118.0,178.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,8.0,122.0,164.0,76.0,108.0,199.0,70.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,107.0,97.0,14.0,191.0,193.0,58.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,93.0,145.0,71.0,81.0,18.0,41.0,146.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,163.0,74.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,75.0,35.0,73.0,93.0,72.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,4.0,115.0,193.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,162.0,94.0,116.0,42.0,60.0,32.0,16.0,83.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,152.0,77.0,129.0,184.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(94.0,39.0,87.0,96.0,44.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,155.0,133.0,78.0,154.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,151.0,191.0,185.0,48.0,48.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,67.0,14.0,29.0,127.0,47.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,77.0,147.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,26.0,197.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,38.0,3.0,184.0,143.0,58.0,52.0,200.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,44.0,103.0,67.0,90.0,152.0,164.0,73.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,66.0,150.0,198.0,134.0,138.0,38.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,39.0,166.0,7.0,162.0,123.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,16.0,111.0,37.0,2.0,80.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,39.0,183.0,61.0,9.0,165.0,157.0,7.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,36.0,57.0,160.0,38.0,86.0,90.0,134.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,107.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,158.0,71.0,6.0,8.0,9.0,177.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,98.0,156.0,107.0,159.0,17.0,42.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,17.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,47.0,121.0,54.0,49.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,11.0,186.0,185.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,91.0,47.0,178.0,139.0,200.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,56.0,109.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,174.0,31.0,200.0,65.0,35.0,78.0,123.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,199.0,88.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,50.0,166.0,18.0,82.0,88.0,170.0,13.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,3.0,64.0,139.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,97.0,152.0,151.0,85.0,149.0,187.0,96.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,147.0,92.0,142.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,67.0,29.0,77.0,86.0,94.0,160.0,165.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,14.0,11.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,99.0,151.0,2.0,90.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,149.0,4.0,164.0,53.0,92.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,25.0,92.0,15.0,115.0,171.0,174.0,36.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(124.0,102.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,70.0,114.0,109.0,86.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,61.0,179.0,31.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,178.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,111.0,179.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,101.0,9.0,200.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,148.0,61.0,167.0,184.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,51.0,134.0,60.0,179.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,154.0,9.0,60.0,67.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,149.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,35.0,112.0,141.0,167.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,148.0,186.0,183.0,38.0,127.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,111.0,7.0,88.0,151.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,167.0,150.0,28.0,20.0,39.0,19.0,81.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,20.0,141.0,165.0,116.0,98.0,152.0,90.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,51.0,86.0,100.0,14.0,120.0,199.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,25.0,123.0,24.0,15.0,155.0,160.0,187.0,156.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,26.0,198.0,198.0,55.0,18.0,153.0,34.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,131.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,114.0,144.0,161.0,115.0,84.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,62.0,132.0,142.0,189.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,1.0,168.0,130.0,181.0,66.0,128.0,45.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,83.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,84.0,80.0,66.0,81.0,4.0,66.0,2.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,179.0,37.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,84.0,113.0,7.0,50.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,145.0,40.0,53.0,110.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,85.0,132.0,98.0,1.0,23.0,65.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,172.0,31.0,185.0,164.0,22.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,71.0,32.0,132.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,20.0,138.0,40.0,19.0,180.0,191.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,151.0,21.0,23.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,91.0,157.0,157.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,70.0,125.0,199.0,105.0,52.0,43.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,60.0,77.0,145.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,80.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,185.0,21.0,168.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,53.0,9.0,15.0,183.0,136.0,14.0,116.0,134.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,166.0,131.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,131.0,154.0,123.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,49.0,42.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,19.0,126.0,96.0,182.0,67.0,6.0,139.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,6.0,48.0,57.0,145.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,78.0,197.0,56.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,4.0,159.0,159.0,123.0,65.0,154.0,24.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(125.0,27.0,3.0,20.0,94.0,59.0,180.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,196.0,138.0,158.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,9.0,125.0,65.0,130.0,179.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,158.0,139.0,121.0,196.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,104.0,185.0,49.0,19.0,175.0,63.0,56.0,163.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,23.0,126.0,25.0,149.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,112.0,106.0,81.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,180.0,108.0,17.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,144.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,40.0,15.0,121.0,37.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,118.0,142.0,88.0,187.0,91.0,6.0,176.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(195.0,158.0,55.0,109.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,152.0,100.0,129.0,101.0,108.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,14.0,21.0,43.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,164.0,11.0,45.0,153.0,65.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,76.0,173.0,175.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,69.0,17.0,183.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,183.0,155.0,5.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,18.0,174.0,136.0,42.0,159.0,51.0,56.0,159.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,16.0,21.0,178.0,181.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,195.0,155.0,33.0,131.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,190.0,127.0,48.0,69.0,53.0,105.0,127.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,117.0,169.0,100.0,25.0,179.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,20.0,5.0,19.0,23.0,170.0,151.0,133.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,21.0,70.0,189.0,108.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,194.0,157.0,125.0,85.0,191.0,12.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(120.0,157.0,127.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,13.0,5.0,84.0,200.0,82.0,44.0,140.0,81.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,113.0,130.0,76.0,126.0,10.0,129.0,88.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,194.0,146.0,124.0,84.0,23.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,33.0,125.0,168.0,171.0,35.0,118.0,194.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,105.0,145.0,116.0,170.0,199.0,4.0,172.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,23.0,79.0,81.0,38.0,43.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,35.0,42.0,197.0,170.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,132.0,19.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,142.0,158.0,42.0,31.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,123.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,66.0,57.0,192.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,167.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,187.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,129.0,115.0,61.0,175.0,166.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,116.0,168.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,49.0,110.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,83.0,158.0,180.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,116.0,51.0,39.0,177.0,187.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,175.0,153.0,135.0,177.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,111.0,68.0,141.0,195.0,61.0,80.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,113.0,153.0,71.0,84.0,21.0,101.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,100.0,200.0,27.0,157.0,40.0,180.0,159.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,26.0,194.0,48.0,52.0,86.0,137.0,34.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,26.0,112.0,108.0,131.0,74.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,85.0,56.0,33.0,67.0,78.0,32.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,163.0,109.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,131.0,72.0,131.0,42.0,43.0,53.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,113.0,172.0,128.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,82.0,42.0,188.0,18.0,35.0,39.0,60.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,159.0,44.0,163.0,81.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,36.0,143.0,188.0,102.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,57.0,93.0,169.0,139.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,89.0,188.0,102.0,140.0,151.0,17.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,40.0,95.0,193.0,28.0,174.0,166.0,39.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,140.0,146.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,80.0,69.0,157.0,67.0,20.0,49.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,58.0,149.0,45.0,163.0,79.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,165.0,108.0,94.0,156.0,101.0,86.0,20.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,63.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,125.0,19.0,169.0,133.0,117.0,85.0,49.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,18.0,174.0,19.0,30.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,94.0,67.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,181.0,116.0,18.0,73.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,16.0,17.0,2.0,65.0,189.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,114.0,36.0,191.0,48.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,94.0,124.0,90.0,155.0,72.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,107.0,67.0,90.0,37.0,123.0,184.0,114.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,12.0,200.0,99.0,107.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,136.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,109.0,182.0,142.0,41.0,98.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,53.0,21.0,76.0,152.0,31.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,111.0,137.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,52.0,196.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,174.0,67.0,98.0,127.0,110.0,32.0,88.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(51.0,153.0,86.0,103.0,48.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,53.0,59.0,74.0,183.0,68.0,191.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,170.0,52.0,174.0,73.0,162.0,107.0,132.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,50.0,31.0,97.0,175.0,195.0,29.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(50.0,122.0,30.0,11.0,185.0)));
	}
}
