package com.adalbert;
import java.util
import scala.collection.immutable
import scala.collection.mutable
import scala.reflect.classTag
import org.openjdk.jmh.annotations._
import org.openjdk.jmh.infra._

@State(Scope.Benchmark)
class S_Profile0AllSets_STreeSet_20220422201408135 {
	var collection = mutable.TreeSet[Integer]()
	@Setup(Level.Invocation)
	def setupSTreeSet(): Unit = {
		collection = mutable.TreeSet[Integer]()
		collection.add(21)
		collection.add(171)
		collection.add(198)
		collection.add(85)
		collection.add(84)
		collection.add(114)
		collection.add(36)
		collection.add(86)
		collection.add(28)
		collection.add(82)
		collection.add(68)
		collection.add(143)
		collection.add(194)
		collection.add(77)
		collection.add(182)
		collection.add(14)
		collection.add(97)
		collection.add(145)
		collection.add(16)
		collection.add(126)
		collection.add(177)
		collection.add(49)
		collection.add(17)
		collection.add(110)
		collection.add(144)
		collection.add(25)
		collection.add(14)
		collection.add(59)
		collection.add(198)
		collection.add(62)
		collection.add(66)
		collection.add(128)
		collection.add(138)
		collection.add(188)
		collection.add(81)
		collection.add(105)
		collection.add(61)
		collection.add(15)
		collection.add(11)
		collection.add(128)
		collection.add(179)
		collection.add(15)
		collection.add(110)
		collection.add(92)
		collection.add(3)
		collection.add(85)
		collection.add(34)
		collection.add(139)
		collection.add(35)
		collection.add(37)
		collection.add(46)
		collection.add(39)
		collection.add(103)
		collection.add(86)
		collection.add(68)
		collection.add(183)
		collection.add(71)
		collection.add(97)
		collection.add(100)
		collection.add(27)
		collection.add(82)
		collection.add(21)
		collection.add(93)
		collection.add(140)
		collection.add(45)
		collection.add(142)
		collection.add(50)
		collection.add(157)
		collection.add(141)
		collection.add(87)
		collection.add(135)
		collection.add(80)
		collection.add(35)
		collection.add(31)
		collection.add(97)
		collection.add(73)
		collection.add(127)
		collection.add(85)
		collection.add(7)
		collection.add(182)
		collection.add(71)
		collection.add(31)
		collection.add(36)
		collection.add(59)
		collection.add(130)
		collection.add(9)
		collection.add(66)
		collection.add(27)
		collection.add(15)
		collection.add(78)
		collection.add(24)
		collection.add(51)
		collection.add(137)
		collection.add(72)
		collection.add(85)
		collection.add(100)
		collection.add(76)
		collection.add(106)
		collection.add(8)
		collection.add(58)
		collection.add(143)
		collection.add(3)
		collection.add(22)
		collection.add(5)
		collection.add(16)
		collection.add(130)
		collection.add(175)
		collection.add(70)
		collection.add(166)
		collection.add(116)
		collection.add(134)
		collection.add(171)
		collection.add(101)
		collection.add(44)
		collection.add(60)
		collection.add(138)
		collection.add(22)
		collection.add(158)
		collection.add(108)
		collection.add(166)
		collection.add(42)
		collection.add(41)
		collection.add(52)
		collection.add(172)
		collection.add(147)
		collection.add(9)
		collection.add(68)
		collection.add(18)
		collection.add(12)
		collection.add(190)
		collection.add(71)
		collection.add(45)
		collection.add(169)
		collection.add(124)
		collection.add(58)
		collection.add(16)
		collection.add(62)
		collection.add(23)
		collection.add(50)
		collection.add(127)
		collection.add(70)
		collection.add(136)
		collection.add(115)
		collection.add(34)
		collection.add(45)
		collection.add(53)
		collection.add(136)
		collection.add(71)
		collection.add(146)
		collection.add(145)
		collection.add(155)
		collection.add(138)
		collection.add(38)
		collection.add(199)
		collection.add(110)
		collection.add(190)
		collection.add(106)
		collection.add(175)
		collection.add(32)
		collection.add(77)
		collection.add(109)
		collection.add(20)
		collection.add(51)
		collection.add(7)
		collection.add(193)
		collection.add(108)
		collection.add(41)
		collection.add(156)
		collection.add(34)
		collection.add(53)
		collection.add(27)
		collection.add(107)
		collection.add(71)
		collection.add(178)
		collection.add(78)
		collection.add(5)
		collection.add(99)
		collection.add(162)
		collection.add(83)
		collection.add(158)
		collection.add(40)
		collection.add(62)
		collection.add(18)
		collection.add(65)
		collection.add(165)
		collection.add(51)
		collection.add(121)
		collection.add(119)
		collection.add(122)
		collection.add(148)
		collection.add(172)
		collection.add(76)
		collection.add(146)
		collection.add(9)
		collection.add(93)
		collection.add(115)
		collection.add(119)
		collection.add(123)
		collection.add(85)
		collection.add(19)
		collection.add(88)
		collection.add(101)
		collection.add(23)
		collection.add(4)
		collection.add(141)
		collection.add(16)
		collection.add(196)
		collection.add(8)
		collection.add(52)
		collection.add(67)
		collection.add(2)
		collection.add(15)
		collection.add(6)
		collection.add(112)
		collection.add(147)
		collection.add(59)
		collection.add(83)
		collection.add(129)
		collection.add(84)
		collection.add(16)
		collection.add(92)
		collection.add(57)
		collection.add(182)
		collection.add(95)
		collection.add(29)
		collection.add(83)
		collection.add(88)
		collection.add(34)
		collection.add(9)
		collection.add(79)
		collection.add(49)
		collection.add(128)
		collection.add(67)
		collection.add(126)
		collection.add(168)
		collection.add(34)
		collection.add(88)
		collection.add(26)
		collection.add(108)
		collection.add(124)
		collection.add(121)
		collection.add(68)
		collection.add(150)
		collection.add(45)
		collection.add(92)
		collection.add(99)
		collection.add(40)
		collection.add(14)
		collection.add(96)
		collection.add(131)
		collection.add(191)
		collection.add(179)
		collection.add(163)
		collection.add(158)
		collection.add(94)
		collection.add(61)
		collection.add(69)
		collection.add(115)
		collection.add(194)
		collection.add(82)
		collection.add(146)
		collection.add(75)
		collection.add(97)
		collection.add(39)
		collection.add(37)
		collection.add(147)
		collection.add(80)
		collection.add(155)
		collection.add(78)
		collection.add(21)
		collection.add(100)
		collection.add(141)
		collection.add(42)
		collection.add(73)
		collection.add(61)
		collection.add(29)
		collection.add(117)
		collection.add(89)
		collection.add(57)
		collection.add(52)
		collection.add(140)
		collection.add(4)
		collection.add(64)
		collection.add(96)
		collection.add(20)
		collection.add(16)
		collection.add(27)
		collection.add(28)
		collection.add(68)
		collection.add(151)
		collection.add(20)
		collection.add(175)
		collection.add(177)
		collection.add(44)
		collection.add(145)
		collection.add(146)
		collection.add(37)
		collection.add(55)
		collection.add(79)
		collection.add(47)
		collection.add(4)
		collection.add(57)
		collection.add(184)
		collection.add(45)
		collection.add(75)
		collection.add(193)
		collection.add(152)
		collection.add(58)
		collection.add(65)
		collection.add(121)
		collection.add(113)
		collection.add(175)
		collection.add(151)
		collection.add(102)
		collection.add(116)
		collection.add(132)
		collection.add(31)
		collection.add(46)
		collection.add(83)
		collection.add(127)
		collection.add(53)
		collection.add(193)
		collection.add(158)
		collection.add(165)
		collection.add(185)
		collection.add(143)
		collection.add(68)
		collection.add(53)
		collection.add(93)
		collection.add(136)
		collection.add(31)
		collection.add(40)
		collection.add(35)
		collection.add(136)
		collection.add(67)
		collection.add(112)
		collection.add(198)
		collection.add(51)
		collection.add(151)
		collection.add(145)
		collection.add(160)
		collection.add(122)
		collection.add(2)
		collection.add(102)
		collection.add(12)
		collection.add(23)
		collection.add(38)
		collection.add(8)
		collection.add(50)
		collection.add(105)
		collection.add(113)
		collection.add(25)
		collection.add(17)
		collection.add(24)
		collection.add(15)
		collection.add(20)
		collection.add(150)
		collection.add(146)
		collection.add(15)
		collection.add(123)
		collection.add(199)
		collection.add(114)
		collection.add(7)
		collection.add(187)
		collection.add(166)
		collection.add(122)
		collection.add(29)
		collection.add(70)
		collection.add(56)
		collection.add(157)
		collection.add(157)
		collection.add(71)
		collection.add(143)
		collection.add(113)
		collection.add(168)
		collection.add(52)
		collection.add(173)
		collection.add(89)
		collection.add(110)
		collection.add(128)
		collection.add(122)
		collection.add(137)
		collection.add(143)
		collection.add(137)
		collection.add(79)
		collection.add(78)
		collection.add(7)
		collection.add(136)
		collection.add(55)
		collection.add(143)
		collection.add(163)
		collection.add(96)
		collection.add(145)
		collection.add(145)
		collection.add(99)
		collection.add(106)
		collection.add(170)
		collection.add(177)
		collection.add(90)
		collection.add(199)
		collection.add(29)
		collection.add(71)
		collection.add(187)
		collection.add(169)
		collection.add(38)
		collection.add(87)
		collection.add(5)
		collection.add(41)
		collection.add(113)
		collection.add(109)
		collection.add(176)
		collection.add(97)
		collection.add(85)
		collection.add(46)
		collection.add(167)
		collection.add(4)
		collection.add(109)
		collection.add(175)
		collection.add(5)
		collection.add(46)
		collection.add(22)
		collection.add(38)
		collection.add(179)
		collection.add(137)
		collection.add(3)
		collection.add(52)
		collection.add(39)
		collection.add(159)
		collection.add(147)
		collection.add(75)
		collection.add(36)
		collection.add(18)
		collection.add(27)
		collection.add(171)
		collection.add(119)
		collection.add(106)
		collection.add(195)
		collection.add(134)
		collection.add(82)
		collection.add(65)
		collection.add(199)
		collection.add(186)
		collection.add(19)
		collection.add(102)
		collection.add(70)
		collection.add(79)
		collection.add(102)
		collection.add(120)
		collection.add(98)
		collection.add(9)
		collection.add(93)
		collection.add(67)
		collection.add(14)
		collection.add(15)
		collection.add(6)
		collection.add(67)
		collection.add(30)
		collection.add(65)
		collection.add(62)
		collection.add(105)
		collection.add(130)
		collection.add(136)
		collection.add(199)
		collection.add(44)
		collection.add(110)
		collection.add(106)
		collection.add(101)
		collection.add(189)
		collection.add(151)
		collection.add(102)
		collection.add(72)
		collection.add(119)
		collection.add(61)
		collection.add(24)
		collection.add(27)
		collection.add(165)
		collection.add(156)
		collection.add(104)
		collection.add(44)
		collection.add(134)
		collection.add(150)
		collection.add(3)
		collection.add(135)
		collection.add(163)
		collection.add(194)
		collection.add(120)
		collection.add(68)
		collection.add(96)
		collection.add(156)
		collection.add(129)
		collection.add(128)
		collection.add(140)
		collection.add(109)
		collection.add(69)
		collection.add(87)
		collection.add(115)
		collection.add(158)
		collection.add(74)
		collection.add(46)
		collection.add(139)
		collection.add(174)
		collection.add(115)
		collection.add(134)
		collection.add(30)
		collection.add(69)
		collection.add(192)
		collection.add(1)
		collection.add(45)
		collection.add(40)
		collection.add(84)
		collection.add(105)
		collection.add(59)
		collection.add(159)
		collection.add(20)
		collection.add(151)
		collection.add(29)
		collection.add(198)
		collection.add(101)
		collection.add(165)
		collection.add(102)
		collection.add(71)
		collection.add(56)
		collection.add(65)
		collection.add(119)
		collection.add(109)
		collection.add(138)
		collection.add(41)
		collection.add(5)
		collection.add(101)
		collection.add(128)
		collection.add(11)
		collection.add(116)
		collection.add(76)
		collection.add(31)
		collection.add(19)
		collection.add(89)
		collection.add(10)
		collection.add(91)
		collection.add(40)
		collection.add(182)
		collection.add(71)
		collection.add(103)
		collection.add(43)
		collection.add(118)
		collection.add(173)
		collection.add(26)
		collection.add(138)
		collection.add(108)
		collection.add(19)
		collection.add(87)
		collection.add(152)
		collection.add(199)
		collection.add(63)
		collection.add(120)
		collection.add(155)
		collection.add(53)
		collection.add(179)
		collection.add(106)
		collection.add(26)
		collection.add(3)
		collection.add(160)
		collection.add(80)
		collection.add(124)
		collection.add(172)
		collection.add(188)
		collection.add(2)
		collection.add(116)
		collection.add(190)
		collection.add(128)
		collection.add(187)
		collection.add(129)
		collection.add(134)
		collection.add(27)
		collection.add(168)
		collection.add(101)
		collection.add(60)
		collection.add(118)
		collection.add(102)
		collection.add(67)
		collection.add(161)
		collection.add(194)
		collection.add(22)
		collection.add(189)
		collection.add(103)
		collection.add(107)
		collection.add(34)
		collection.add(108)
		collection.add(63)
		collection.add(35)
		collection.add(126)
		collection.add(60)
		collection.add(191)
		collection.add(13)
		collection.add(186)
		collection.add(1)
		collection.add(60)
		collection.add(24)
		collection.add(100)
		collection.add(75)
		collection.add(150)
		collection.add(153)
		collection.add(130)
		collection.add(8)
		collection.add(95)
		collection.add(30)
		collection.add(162)
		collection.add(167)
		collection.add(144)
		collection.add(6)
		collection.add(2)
		collection.add(7)
		collection.add(131)
		collection.add(149)
		collection.add(93)
		collection.add(195)
		collection.add(156)
		collection.add(114)
		collection.add(148)
		collection.add(102)
		collection.add(40)
		collection.add(132)
		collection.add(147)
		collection.add(48)
		collection.add(190)
		collection.add(142)
		collection.add(171)
		collection.add(199)
		collection.add(57)
		collection.add(92)
		collection.add(44)
		collection.add(71)
		collection.add(91)
		collection.add(134)
		collection.add(124)
		collection.add(12)
		collection.add(181)
		collection.add(169)
		collection.add(34)
		collection.add(123)
		collection.add(35)
		collection.add(117)
		collection.add(182)
		collection.add(157)
		collection.add(137)
		collection.add(61)
		collection.add(177)
		collection.add(65)
		collection.add(37)
		collection.add(188)
		collection.add(2)
		collection.add(85)
		collection.add(28)
		collection.add(136)
		collection.add(69)
		collection.add(139)
		collection.add(180)
		collection.add(182)
		collection.add(115)
		collection.add(146)
		collection.add(15)
		collection.add(70)
		collection.add(166)
		collection.add(149)
		collection.add(92)
		collection.add(83)
		collection.add(87)
		collection.add(46)
		collection.add(106)
		collection.add(3)
		collection.add(76)
		collection.add(71)
		collection.add(61)
		collection.add(130)
		collection.add(100)
		collection.add(108)
		collection.add(4)
		collection.add(43)
		collection.add(140)
		collection.add(172)
		collection.add(44)
		collection.add(129)
		collection.add(125)
		collection.add(96)
		collection.add(158)
		collection.add(184)
		collection.add(47)
		collection.add(37)
		collection.add(185)
		collection.add(38)
		collection.add(49)
		collection.add(151)
		collection.add(23)
		collection.add(112)
		collection.add(98)
		collection.add(16)
		collection.add(135)
		collection.add(83)
		collection.add(159)
		collection.add(99)
		collection.add(42)
		collection.add(103)
		collection.add(10)
		collection.add(168)
		collection.add(34)
		collection.add(70)
		collection.add(169)
		collection.add(190)
		collection.add(185)
		collection.add(76)
		collection.add(163)
		collection.add(65)
		collection.add(27)
		collection.add(7)
		collection.add(55)
		collection.add(32)
		collection.add(146)
		collection.add(75)
		collection.add(169)
		collection.add(102)
		collection.add(93)
		collection.add(54)
		collection.add(134)
		collection.add(162)
		collection.add(17)
		collection.add(103)
		collection.add(39)
		collection.add(191)
		collection.add(114)
		collection.add(50)
		collection.add(181)
		collection.add(194)
		collection.add(183)
		collection.add(194)
		collection.add(55)
		collection.add(106)
		collection.add(189)
		collection.add(180)
		collection.add(164)
		collection.add(139)
		collection.add(72)
		collection.add(146)
		collection.add(17)
		collection.add(183)
		collection.add(70)
		collection.add(55)
		collection.add(57)
		collection.add(117)
		collection.add(179)
		collection.add(97)
		collection.add(135)
		collection.add(46)
		collection.add(162)
		collection.add(148)
		collection.add(29)
		collection.add(54)
		collection.add(155)
		collection.add(32)
		collection.add(45)
		collection.add(107)
		collection.add(145)
		collection.add(33)
		collection.add(69)
		collection.add(29)
		collection.add(115)
		collection.add(28)
		collection.add(158)
		collection.add(195)
		collection.add(8)
		collection.add(2)
		collection.add(149)
		collection.add(2)
		collection.add(73)
		collection.add(143)
		collection.add(48)
		collection.add(103)
		collection.add(98)
		collection.add(99)
		collection.add(118)
		collection.add(42)
		collection.add(51)
		collection.add(111)
		collection.add(186)
		collection.add(42)
		collection.add(28)
		collection.add(33)
		collection.add(120)
		collection.add(36)
		collection.add(121)
		collection.add(29)
		collection.add(112)
		collection.add(184)
		collection.add(65)
		collection.add(58)
		collection.add(88)
		collection.add(108)
		collection.add(187)
		collection.add(16)
		collection.add(66)
		collection.add(71)
		collection.add(192)
		collection.add(180)
		collection.add(21)
		collection.add(15)
		collection.add(30)
		collection.add(21)
		collection.add(98)
		collection.add(107)
		collection.add(145)
		collection.add(132)
		collection.add(62)
		collection.add(172)
		collection.add(86)
		collection.add(49)
		collection.add(115)
		collection.add(139)
		collection.add(179)
		collection.add(117)
		collection.add(172)
		collection.add(196)
		collection.add(60)
		collection.add(91)
		collection.add(99)
		collection.add(61)
		collection.add(3)
		collection.add(131)
		collection.add(2)
		collection.add(187)
		collection.add(171)
		collection.add(124)
		collection.add(120)
		collection.add(66)
		collection.add(83)
		collection.add(77)
		collection.add(27)
		collection.add(75)
		collection.add(165)
		collection.add(82)
		collection.add(94)
		collection.add(21)
		collection.add(24)
		collection.add(84)
		collection.add(19)
		collection.add(18)
		collection.add(161)
		collection.add(19)
		collection.add(150)
		collection.add(131)
		collection.add(63)
		collection.add(34)
		collection.add(161)
		collection.add(44)
		collection.add(197)
		collection.add(7)
		collection.add(76)
		collection.add(115)
		collection.add(139)
		collection.add(151)
		collection.add(53)
		collection.add(6)
		collection.add(140)
		collection.add(141)
		collection.add(104)
		collection.add(24)
		collection.add(166)
		collection.add(133)
		collection.add(119)
		collection.add(185)
		collection.add(78)
		collection.add(177)
		collection.add(141)
		collection.add(158)
		collection.add(43)
		collection.add(152)
		collection.add(7)
		collection.add(46)
		collection.add(29)
		collection.add(90)
		collection.add(182)
		collection.add(65)
		collection.add(71)
		collection.add(160)
		collection.add(70)
		collection.add(198)
		collection.add(153)
		collection.add(52)
		collection.add(176)
		collection.add(102)
		collection.add(143)
		collection.add(81)
		collection.add(177)
		collection.add(43)
		collection.add(160)
		collection.add(155)
		collection.add(129)
		collection.add(33)
		collection.add(68)
		collection.add(172)
		collection.add(128)
		collection.add(141)
		collection.add(5)
		collection.add(62)
		collection.add(67)
		collection.add(158)
		collection.add(161)
		collection.add(174)
		collection.add(186)
		collection.add(65)
		collection.add(28)
		collection.add(46)
		collection.add(129)
		collection.add(153)
		collection.add(105)
		collection.add(96)
		collection.add(159)
		collection.add(42)
		collection.add(181)
		collection.add(179)
		collection.add(90)
		collection.add(187)
		collection.add(183)
		collection.add(61)
		collection.add(104)
		collection.add(188)
		collection.add(155)
		collection.add(54)
		collection.add(49)
		collection.add(35)
		collection.add(174)
		collection.add(118)
		collection.add(174)
		collection.add(188)
		collection.add(122)
		collection.add(121)
		collection.add(9)
		collection.add(82)
		collection.add(183)
		collection.add(91)
		collection.add(153)
		collection.add(64)
		collection.add(133)
		collection.add(116)
		collection.add(161)
		collection.add(106)
		collection.add(50)
		collection.add(71)
		collection.add(14)
		collection.add(89)
		collection.add(85)
		collection.add(197)
		collection.add(121)
		collection.add(58)
		collection.add(75)
		collection.add(192)
		collection.add(112)
		collection.add(105)
		collection.add(166)
		collection.add(69)
		collection.add(198)
		collection.add(173)
		collection.add(118)
		collection.add(99)
		collection.add(85)
		collection.add(65)
		collection.add(62)
		collection.add(86)
		collection.add(167)
		collection.add(140)
		collection.add(143)
		collection.add(33)
		collection.add(122)
		collection.add(156)
		collection.add(139)
		collection.add(160)
		collection.add(24)
		collection.add(122)
		collection.add(37)
		collection.add(8)
		collection.add(62)
		collection.add(54)
		collection.add(152)
		collection.add(122)
		collection.add(110)
		collection.add(195)
		collection.add(109)
		collection.add(55)
		collection.add(20)
		collection.add(98)
		collection.add(140)
		collection.add(159)
		collection.add(22)
		collection.add(27)
		collection.add(124)
		collection.add(47)
		collection.add(113)
		collection.add(182)
		collection.add(134)
		collection.add(168)
		collection.add(173)
		collection.add(23)
		collection.add(30)
		collection.add(122)
		collection.add(35)
		collection.add(16)
		collection.add(119)
		collection.add(15)
		collection.add(76)
		collection.add(142)
		collection.add(5)
		collection.add(24)
		collection.add(63)
		collection.add(158)
		collection.add(103)
		collection.add(123)
		collection.add(44)
		collection.add(56)
		collection.add(165)
		collection.add(86)
		collection.add(1)
		collection.add(165)
		collection.add(164)
		collection.add(17)
		collection.add(99)
		collection.add(57)
		collection.add(53)
		collection.add(4)
		collection.add(143)
		collection.add(119)
		collection.add(140)
		collection.add(131)
		collection.add(33)
		collection.add(167)
		collection.add(129)
		collection.add(117)
		collection.add(116)
		collection.add(15)
		collection.add(114)
		collection.add(35)
		collection.add(90)
		collection.add(4)
		collection.add(112)
		collection.add(51)
		collection.add(11)
		collection.add(192)
		collection.add(17)
		collection.add(52)
		collection.add(188)
		collection.add(117)
		collection.add(167)
		collection.add(9)
		collection.add(84)
		collection.add(185)
		collection.add(99)
		collection.add(51)
		collection.add(96)
		collection.add(169)
		collection.add(53)
		collection.add(87)
		collection.add(176)
		collection.add(180)
		collection.add(167)
		collection.add(39)
		collection.add(118)
		collection.add(188)
		collection.add(31)
		collection.add(154)
		collection.add(61)
		collection.add(97)
		collection.add(46)
		collection.add(106)
		collection.add(68)
		collection.add(102)
		collection.add(107)
		collection.add(13)
		collection.add(158)
		collection.add(143)
		collection.add(144)
		collection.add(165)
		collection.add(194)
		collection.add(125)
		collection.add(169)
		collection.add(59)
		collection.add(156)
		collection.add(138)
		collection.add(186)
		collection.add(110)
		collection.add(61)
		collection.add(62)
		collection.add(1)
		collection.add(43)
		collection.add(33)
		collection.add(6)
		collection.add(162)
		collection.add(10)
		collection.add(35)
		collection.add(111)
		collection.add(33)
		collection.add(149)
		collection.add(10)
		collection.add(160)
		collection.add(139)
		collection.add(97)
		collection.add(144)
		collection.add(143)
		collection.add(64)
		collection.add(8)
		collection.add(161)
		collection.add(7)
		collection.add(186)
		collection.add(192)
		collection.add(64)
		collection.add(22)
		collection.add(199)
		collection.add(192)
		collection.add(48)
		collection.add(1)
		collection.add(183)
		collection.add(44)
		collection.add(94)
		collection.add(116)
		collection.add(97)
		collection.add(106)
		collection.add(86)
		collection.add(8)
		collection.add(160)
		collection.add(101)
		collection.add(58)
		collection.add(124)
		collection.add(182)
		collection.add(168)
		collection.add(61)
		collection.add(62)
		collection.add(24)
		collection.add(84)
		collection.add(58)
		collection.add(10)
		collection.add(29)
		collection.add(12)
		collection.add(55)
		collection.add(120)
		collection.add(56)
		collection.add(48)
		collection.add(125)
		collection.add(86)
		collection.add(157)
		collection.add(30)
		collection.add(133)
		collection.add(24)
		collection.add(82)
		collection.add(108)
		collection.add(121)
		collection.add(94)
		collection.add(45)
		collection.add(184)
		collection.add(192)
		collection.add(114)
		collection.add(117)
		collection.add(149)
		collection.add(155)
		collection.add(62)
		collection.add(192)
		collection.add(23)
		collection.add(83)
		collection.add(54)
		collection.add(2)
		collection.add(90)
		collection.add(41)
		collection.add(72)
		collection.add(115)
		collection.add(36)
		collection.add(133)
		collection.add(81)
		collection.add(189)
		collection.add(172)
		collection.add(78)
		collection.add(105)
		collection.add(47)
		collection.add(13)
		collection.add(133)
		collection.add(139)
		collection.add(23)
		collection.add(46)
		collection.add(192)
		collection.add(144)
		collection.add(186)
		collection.add(128)
		collection.add(113)
		collection.add(151)
		collection.add(68)
		collection.add(161)
		collection.add(140)
		collection.add(19)
		collection.add(85)
		collection.add(79)
		collection.add(182)
		collection.add(64)
		collection.add(81)
		collection.add(145)
		collection.add(61)
		collection.add(59)
		collection.add(77)
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=5)
	@Measurement(time=5, iterations=30)
	def STreeSet(bh: Blackhole): Unit = {
		bh.consume(collection.contains(82))
		bh.consume(collection.add(36))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](55,197,76,127,187,165)))
		collection = collection.union(mutable.HashSet[Integer](160,111,80,75,155,14,140,124))
		bh.consume(collection.remove(85))
		bh.consume(collection.remove(140))
		bh.consume(collection.add(50))
		collection = collection.union(mutable.HashSet[Integer](45,154,128,42,47,164,164,175,4))
		bh.consume(collection.remove(110))
		collection = collection.diff(mutable.HashSet[Integer](132,146,63,80))
		collection = collection.union(mutable.HashSet[Integer](179,192,144,117,172,192,37,79))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](116,146,26,133,60,77,165,166,76)))
		collection = collection.union(mutable.HashSet[Integer](199,8,145,147))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](139,15,145,29,190,25,123,114,86)))
		collection = collection.union(mutable.HashSet[Integer](182,30,194,199,168,107,123,143))
		bh.consume(collection.add(41))
		bh.consume(collection.contains(104))
		bh.consume(collection.remove(191))
		collection = collection.union(mutable.HashSet[Integer](143,180,42,53,89,85,196,194))
		collection = collection.diff(mutable.HashSet[Integer](123,154,36,104,154,10))
		bh.consume(collection.contains(194))
		bh.consume(collection.contains(84))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](32,168,61)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](197,43,61,186,86)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](59,155,27,88,169,89)))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](73,110,103,72)))
		collection = collection.diff(mutable.HashSet[Integer](78,45,30))
		bh.consume(collection.remove(160))
		collection = collection.union(mutable.HashSet[Integer](53,45,4,11,108,149,151))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](57,31,127,185)))
		bh.consume(collection.contains(27))
		bh.consume(collection.add(162))
		collection.toArray(classTag[Integer])
		collection = collection.union(mutable.HashSet[Integer](21,37,140,192,142,37))
		bh.consume(collection.remove(34))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](11,46,40,101,76,91,186,17)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](168,130,86,129,21,180,180)))
		bh.consume(collection.remove(177))
		bh.consume(collection.contains(174))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](129,176,100,65,122,175,192,30)))
		bh.consume(collection.contains(12))
		bh.consume(collection.add(120))
		collection = collection.union(mutable.HashSet[Integer](179,115,92))
		bh.consume(collection.add(61))
		bh.consume(collection.add(149))
		bh.consume(collection.remove(91))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](140,146,48,166,108,118,98,129,74)))
		bh.consume(collection.add(63))
		bh.consume(collection.contains(72))
		bh.consume(collection.add(111))
		collection = collection.union(mutable.HashSet[Integer](113,21,172,121,56,42,5,114,18))
		bh.consume(collection.remove(116))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](187,141,157,81,22,63,101,170)))
		bh.consume(collection.add(91))
		bh.consume(collection.contains(82))
		bh.consume(collection.add(129))
		bh.consume(collection.contains(165))
		collection.toArray(classTag[Integer])
		collection = collection.union(mutable.HashSet[Integer](135,181,57,85))
		bh.consume(collection.remove(165))
		bh.consume(collection.add(147))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](41,194,136,164,45,68)))
		bh.consume(collection.contains(164))
		collection.toArray(classTag[Integer])
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](138,86,59,16,32,152,144,32,33)))
		bh.consume(collection.remove(169))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](172,122,35,141,18,2,29,154)))
		collection = collection.union(mutable.HashSet[Integer](63,130,159,95,63,120,181))
		bh.consume(collection.remove(175))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](24,10,46,28)))
		bh.consume(collection.remove(130))
		collection = collection.diff(mutable.HashSet[Integer](165,86,6,194,101,168,128))
		collection = collection.union(mutable.HashSet[Integer](110,9,61,50,118,39,86,140))
		bh.consume(collection.remove(183))
		collection = collection.diff(mutable.HashSet[Integer](193,105,91,199,89))
		bh.consume(collection.add(9))
		bh.consume(collection.add(60))
		collection = collection.union(mutable.HashSet[Integer](132,171,150,132,65,123,120,126))
		bh.consume(collection.remove(167))
		collection = collection.union(mutable.HashSet[Integer](43,165,166,126,67,173,161,40,88))
		bh.consume(collection.remove(163))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](37,185,38,121)))
		bh.consume(collection.contains(138))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](27,133,53,166,79,144,123,103)))
		bh.consume(collection.remove(11))
		bh.consume(collection.remove(152))
		bh.consume(collection.remove(135))
		bh.consume(collection.add(42))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](13,75,103,105,37,26,127)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](199,109,166,108,107,139,96,162,188)))
		bh.consume(collection.contains(110))
		collection = collection.union(mutable.HashSet[Integer](197,139,33,83))
		bh.consume(collection.remove(100))
		collection = collection.diff(mutable.HashSet[Integer](53,131,134,61,63,189,152,64,29))
		bh.consume(collection.add(33))
		bh.consume(collection.add(34))
		bh.consume(collection.add(100))
		bh.consume(collection.add(168))
		bh.consume(collection.remove(17))
		bh.consume(collection.remove(190))
		bh.consume(collection.contains(116))
		bh.consume(collection.add(24))
		collection = collection.union(mutable.HashSet[Integer](85,71,143,57,13,104,138,168,36))
		bh.consume(collection.add(91))
		bh.consume(collection.remove(135))
		collection = collection.union(mutable.HashSet[Integer](110,118,96,148,10,74,148,99))
		bh.consume(collection.remove(28))
		bh.consume(collection.contains(49))
		collection = collection.union(mutable.HashSet[Integer](160,173,177,177,31,100,68))
		collection = collection.union(mutable.HashSet[Integer](54,61,181,117))
		bh.consume(collection.add(164))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](170,19,115)))
		bh.consume(collection.add(150))
		bh.consume(collection.add(187))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](73,132,24,77,56,55)))
		collection = collection.union(mutable.HashSet[Integer](133,109,171,171,75,82,160))
		collection = collection.union(mutable.HashSet[Integer](166,120,26,96,191))
		bh.consume(collection.add(169))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](131,139,194,117,9)))
		collection = collection.diff(mutable.HashSet[Integer](113,46,85,145,100,19,68,6,92))
		bh.consume(collection.remove(64))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](179,139,152,20,57,14,163)))
		collection = collection.union(mutable.HashSet[Integer](27,188,85))
		bh.consume(collection.remove(151))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](33,197,52)))
		collection = collection.union(mutable.HashSet[Integer](73,171,136,161,170,106,155))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](85,174,152,138,28,169,6,55)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](136,87,47,173)))
		collection = collection.diff(mutable.HashSet[Integer](187,29,114,180))
		collection = collection.union(mutable.HashSet[Integer](43,8,81,21))
		bh.consume(collection.remove(29))
		collection = collection.union(mutable.HashSet[Integer](23,168,34,13,67,68))
		collection = collection.diff(mutable.HashSet[Integer](169,9,32,44,87,128))
		bh.consume(collection.remove(166))
		collection = collection.diff(mutable.HashSet[Integer](125,59,101,107,161,125))
		bh.consume(collection.remove(85))
		collection = collection.union(mutable.HashSet[Integer](56,94,88,39,123))
		bh.consume(collection.add(20))
		bh.consume(collection.add(44))
		bh.consume(collection.remove(129))
		bh.consume(collection.add(38))
		bh.consume(collection.add(166))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](87,149,151)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](80,68,3,168)))
		collection = collection.union(mutable.HashSet[Integer](55,46,71,118))
		collection = collection.union(mutable.HashSet[Integer](24,199,149,70,150,145))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](198,153,61,86,36,134)))
		bh.consume(collection.remove(96))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](81,104,13,171,13,156,36)))
		bh.consume(collection.remove(117))
		collection = collection.union(mutable.HashSet[Integer](72,69,62,143,95,3,12,166,6))
		bh.consume(collection.contains(85))
		bh.consume(collection.contains(135))
		bh.consume(collection.add(68))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](22,123,122)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](181,136,57,61)))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](104,176,45,118,182,192,19,98)))
		bh.consume(collection.remove(109))
		bh.consume(collection.contains(12))
		bh.consume(collection.remove(40))
		bh.consume(collection.contains(155))
		collection = collection.diff(mutable.HashSet[Integer](178,90,12,111))
		bh.consume(collection.contains(42))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](186,81,150,144,143,173,93)))
		bh.consume(collection.remove(85))
		bh.consume(collection.add(180))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](66,55,185,144,88)))
		bh.consume(collection.remove(113))
		bh.consume(collection.remove(185))
		bh.consume(collection.contains(37))
		bh.consume(collection.remove(12))
		bh.consume(collection.contains(13))
		bh.consume(collection.contains(81))
		collection = collection.diff(mutable.HashSet[Integer](113,149,93,48,113,180,75,79))
		collection = collection.union(mutable.HashSet[Integer](160,168,176,157))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](85,107,80,187,152,54,94,164)))
		bh.consume(collection.add(178))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](186,47,158,100,195,48,20)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](111,97,148,34,6,4,6)))
		bh.consume(collection.add(125))
		collection = collection.union(mutable.HashSet[Integer](51,66,29,151,170))
		bh.consume(collection.remove(10))
		bh.consume(collection.add(156))
		bh.consume(collection.remove(179))
		collection = collection.diff(mutable.HashSet[Integer](159,195,64,15))
		bh.consume(collection.remove(28))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](152,173,93)))
		collection = collection.union(mutable.HashSet[Integer](113,12,131,79,110,38,78))
		collection = collection.union(mutable.HashSet[Integer](187,126,97,34,166,63,156,84))
		bh.consume(collection.remove(1))
		collection.toArray(classTag[Integer])
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](148,89,37,74,123,110,38,109)))
		bh.consume(collection.add(50))
		bh.consume(collection.contains(49))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](178,39,68,79,199,95,147)))
		bh.consume(collection.remove(130))
		bh.consume(collection.add(137))
		bh.consume(collection.remove(101))
		collection = collection.union(mutable.HashSet[Integer](117,20,63,146))
		bh.consume(collection.add(184))
		bh.consume(collection.remove(37))
		bh.consume(collection.contains(14))
		bh.consume(collection.remove(4))
		bh.consume(collection.remove(111))
		bh.consume(collection.contains(49))
		bh.consume(collection.remove(199))
		bh.consume(collection.remove(161))
		bh.consume(collection.add(149))
		collection = collection.union(mutable.HashSet[Integer](48,186,74,107,146,183,172,64))
		collection = collection.union(mutable.HashSet[Integer](195,95,31,69,135,128))
		bh.consume(collection.remove(17))
		collection = collection.diff(mutable.HashSet[Integer](16,152,144,72,73,130))
		collection = collection.union(mutable.HashSet[Integer](156,161,6,96,13,193,80,28))
		bh.consume(collection.add(24))
		bh.consume(collection.contains(113))
		bh.consume(collection.remove(30))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](165,70,190,159,56,167,68,134)))
		collection = collection.union(mutable.HashSet[Integer](104,42,168))
		collection = collection.union(mutable.HashSet[Integer](177,99,117,120,67,29,194,106,92))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](76,162,54,83)))
		bh.consume(collection.remove(178))
		collection = collection.union(mutable.HashSet[Integer](14,90,74,168,72,82,33,35,187))
		bh.consume(collection.remove(43))
		collection = collection.diff(mutable.HashSet[Integer](46,8,9,41,26,152,159,122,157))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](157,80,72,135,191,136,153,86)))
		bh.consume(collection.remove(35))
		collection = collection.union(mutable.HashSet[Integer](180,147,86,132,100,177,116,88,180))
		collection = collection.union(mutable.HashSet[Integer](161,188,192,6,14,125,7,151,160))
		collection = collection.union(mutable.HashSet[Integer](98,141,109,67,28,57,3,59))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](92,31,163,127,87)))
		collection = collection.union(mutable.HashSet[Integer](196,195,147,138))
		bh.consume(collection.add(87))
		bh.consume(collection.remove(191))
		collection = collection.union(mutable.HashSet[Integer](41,56,74))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](44,84,172,65,150,55)))
		bh.consume(collection.add(74))
		bh.consume(collection.remove(30))
		bh.consume(collection.add(66))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](187,166,112,55,103,33,57)))
		bh.consume(collection.remove(159))
		bh.consume(collection.remove(25))
		collection = collection.union(mutable.HashSet[Integer](134,117,32,1,188,93,152,143))
		bh.consume(collection.contains(169))
		bh.consume(collection.remove(56))
		bh.consume(collection.remove(109))
		bh.consume(collection.contains(111))
		bh.consume(collection.contains(168))
		bh.consume(collection.remove(69))
		bh.consume(collection.remove(29))
		bh.consume(collection.contains(127))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](58,133,37,151,115,156,118,180)))
		bh.consume(collection.contains(79))
		collection = collection.union(mutable.HashSet[Integer](114,161,79,2,162))
		bh.consume(collection.remove(190))
		bh.consume(collection.contains(155))
		collection = collection.union(mutable.HashSet[Integer](49,56,48))
		bh.consume(collection.contains(57))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](80,81,14,142)))
		collection = collection.union(mutable.HashSet[Integer](124,147,169,178,103,110))
		bh.consume(collection.add(185))
		collection = collection.diff(mutable.HashSet[Integer](98,62,145,168,101,10))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](166,103,38,12,162,62,7)))
		bh.consume(collection.contains(30))
		bh.consume(collection.add(128))
		bh.consume(collection.contains(58))
		bh.consume(collection.add(3))
		bh.consume(collection.remove(95))
		collection = collection.union(mutable.HashSet[Integer](124,81,135,29,33))
		bh.consume(collection.add(135))
		collection = collection.union(mutable.HashSet[Integer](191,93,56,176))
		bh.consume(collection.add(107))
		bh.consume(collection.contains(181))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](123,123,168)))
		collection = collection.diff(mutable.HashSet[Integer](16,8,58,194))
		collection = collection.union(mutable.HashSet[Integer](80,103,106,9))
		bh.consume(collection.add(123))
		bh.consume(collection.contains(37))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](129,141,43,60,134,74)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](61,49,195,72)))
		bh.consume(collection.add(139))
		bh.consume(collection.contains(8))
		collection = collection.diff(mutable.HashSet[Integer](94,57,186,58,18,41,22,36,80))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](55,128,84,123,30,75,2,147,119)))
		collection = collection.union(mutable.HashSet[Integer](159,2,31,42,39,82,41))
		collection = collection.union(mutable.HashSet[Integer](46,92,8))
		bh.consume(collection.remove(165))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](125,20,52,164)))
		bh.consume(collection.contains(68))
		bh.consume(collection.contains(19))
		bh.consume(collection.remove(187))
		bh.consume(collection.add(124))
		bh.consume(collection.remove(134))
		bh.consume(collection.contains(4))
		bh.consume(collection.contains(189))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](181,168,97,101,172,37,91,28)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](55,165,76,78,138,178,12,102)))
		bh.consume(collection.add(178))
		bh.consume(collection.add(61))
		collection = collection.union(mutable.HashSet[Integer](166,98,32,85,42,149,157,30,112))
		bh.consume(collection.remove(75))
		collection = collection.union(mutable.HashSet[Integer](181,39,54,76))
		bh.consume(collection.remove(55))
		bh.consume(collection.contains(147))
		collection = collection.diff(mutable.HashSet[Integer](22,144,75,92,179,68,56,162,175))
		bh.consume(collection.add(60))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](184,145,75,77,152,197,140,73,5)))
		bh.consume(collection.remove(193))
		bh.consume(collection.remove(162))
		bh.consume(collection.contains(82))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](85,73,133,82,171)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](188,162,153,36,16,163,199,191,180)))
		bh.consume(collection.add(134))
		bh.consume(collection.contains(44))
		bh.consume(collection.contains(9))
		bh.consume(collection.remove(161))
		collection = collection.union(mutable.HashSet[Integer](191,35,58,76,74,43,85,103,134))
		bh.consume(collection.add(36))
		bh.consume(collection.remove(116))
		bh.consume(collection.remove(198))
		bh.consume(collection.add(142))
		collection = collection.union(mutable.HashSet[Integer](121,101,125,126))
		bh.consume(collection.contains(118))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](96,56,77,173,112,11,4,101,134)))
		bh.consume(collection.contains(53))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](149,51,161,132,85)))
		bh.consume(collection.contains(11))
		collection = collection.union(mutable.HashSet[Integer](138,124,144,97,21,147,132))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](45,20,164,20,18,146,33,62)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](81,121,176,125,24)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](9,169,78,139,157,95,176)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](75,173,197,36,97,43,84,160,75)))
		bh.consume(collection.remove(24))
		collection = collection.diff(mutable.HashSet[Integer](135,142,114,32))
		bh.consume(collection.remove(154))
		bh.consume(collection.contains(83))
		bh.consume(collection.add(28))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](81,142,101,121,139,131,118,41)))
		collection = collection.diff(mutable.HashSet[Integer](18,16,130,82,17,141,157,104))
		collection = collection.union(mutable.HashSet[Integer](107,158,139,188,20,36,153,100))
		bh.consume(collection.contains(18))
		bh.consume(collection.contains(103))
		bh.consume(collection.remove(101))
		collection = collection.union(mutable.HashSet[Integer](86,193,30,33,138))
		collection = collection.union(mutable.HashSet[Integer](62,94,7,142,35,110,110))
		bh.consume(collection.add(171))
		bh.consume(collection.contains(5))
		bh.consume(collection.remove(79))
		bh.consume(collection.add(61))
		bh.consume(collection.contains(71))
		bh.consume(collection.contains(171))
		bh.consume(collection.add(172))
		bh.consume(collection.remove(129))
		bh.consume(collection.add(166))
		collection = collection.union(mutable.HashSet[Integer](37,3,48))
		bh.consume(collection.remove(173))
		collection = collection.union(mutable.HashSet[Integer](82,22,140,43,127,171,47))
		bh.consume(collection.contains(98))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](81,36,98,80,192,183,82,57)))
		bh.consume(collection.add(25))
		bh.consume(collection.add(134))
		bh.consume(collection.add(193))
		bh.consume(collection.remove(165))
		bh.consume(collection.add(141))
		bh.consume(collection.remove(47))
		collection = collection.diff(mutable.HashSet[Integer](173,159,78))
		collection = collection.union(mutable.HashSet[Integer](167,97,22,70,140,119))
		bh.consume(collection.remove(81))
		bh.consume(collection.contains(107))
		bh.consume(collection.contains(167))
		bh.consume(collection.contains(188))
		collection = collection.union(mutable.HashSet[Integer](103,36,105,135))
		bh.consume(collection.contains(98))
		bh.consume(collection.contains(191))
		collection = collection.union(mutable.HashSet[Integer](23,138,98,134,3,26,90))
		bh.consume(collection.remove(134))
		collection = collection.diff(mutable.HashSet[Integer](24,115,74))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](175,95,136,166,172,192,171,41)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](114,153,35,86,72,181,117)))
		collection = collection.union(mutable.HashSet[Integer](75,51,197,171,160,99))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](72,138,108,119,99)))
		bh.consume(collection.add(25))
		collection = collection.union(mutable.HashSet[Integer](182,96,60,168,147))
		bh.consume(collection.remove(30))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](135,190,99,7,140,15,57)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](157,142,25,177,30,50,165,95,150)))
		bh.consume(collection.add(7))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](64,141,76,103)))
		collection = collection.union(mutable.HashSet[Integer](70,43,187,142,68))
		collection = collection.union(mutable.HashSet[Integer](23,63,140,75,5,149,5,26,3))
		collection = collection.union(mutable.HashSet[Integer](178,185,119))
		collection = collection.diff(mutable.HashSet[Integer](50,105,84))
		bh.consume(collection.remove(101))
		collection = collection.union(mutable.HashSet[Integer](102,114,28,116))
		collection = collection.union(mutable.HashSet[Integer](137,116,54,157,44,146,75))
		bh.consume(collection.add(158))
		bh.consume(collection.add(94))
		collection = collection.union(mutable.HashSet[Integer](21,144,87,107,122,185))
		bh.consume(collection.contains(111))
		bh.consume(collection.add(129))
		bh.consume(collection.add(13))
		bh.consume(collection.contains(182))
		bh.consume(collection.add(137))
		collection = collection.union(mutable.HashSet[Integer](170,53,181,1,145,50,146,168,175))
		bh.consume(collection.add(153))
		bh.consume(collection.remove(184))
		collection = collection.union(mutable.HashSet[Integer](10,147,111,40))
		bh.consume(collection.remove(119))
		bh.consume(collection.contains(119))
		bh.consume(collection.add(114))
		bh.consume(collection.add(48))
		bh.consume(collection.add(81))
		bh.consume(collection.add(82))
		collection = collection.union(mutable.HashSet[Integer](135,41,57,9,82,34,64,117,146))
		bh.consume(collection.remove(165))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](60,160,49,165,39,147,10,28)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](108,95,191,175,113,85,77)))
		bh.consume(collection.add(21))
		bh.consume(collection.contains(63))
		collection = collection.union(mutable.HashSet[Integer](23,71,78))
		bh.consume(collection.contains(41))
		collection = collection.union(mutable.HashSet[Integer](57,89,152,98,151))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](166,113,188)))
		collection = collection.diff(mutable.HashSet[Integer](191,188,196,32))
		bh.consume(collection.contains(57))
		bh.consume(collection.remove(81))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](183,180,126,123)))
		bh.consume(collection.contains(109))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](178,15,7,5,90,30,76,131)))
		bh.consume(collection.remove(123))
		bh.consume(collection.add(110))
		bh.consume(collection.remove(25))
		collection = collection.union(mutable.HashSet[Integer](23,84,47,122))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](109,188,84,119,23,1,155)))
		bh.consume(collection.remove(79))
		bh.consume(collection.remove(67))
		bh.consume(collection.add(19))
		bh.consume(collection.remove(155))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](90,74,26)))
		bh.consume(collection.contains(31))
		bh.consume(collection.remove(75))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](21,45,143,108,146,174,41)))
		bh.consume(collection.add(3))
		bh.consume(collection.contains(35))
		collection = collection.diff(mutable.HashSet[Integer](120,125,192,91,134,104))
		bh.consume(collection.contains(37))
		bh.consume(collection.contains(113))
		collection = collection.union(mutable.HashSet[Integer](119,140,111,54,97,150,26,9))
		collection = collection.union(mutable.HashSet[Integer](5,11,88))
		collection = collection.union(mutable.HashSet[Integer](16,135,57,197,164,138,199,84,67))
		bh.consume(collection.add(173))
		bh.consume(collection.add(194))
		bh.consume(collection.contains(86))
		collection = collection.union(mutable.HashSet[Integer](8,44,124))
		bh.consume(collection.remove(61))
		bh.consume(collection.contains(119))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](183,199,197,52,154,112,83,185)))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](70,190,120,147,81,64)))
		collection = collection.union(mutable.HashSet[Integer](149,99,130,186))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](24,146,175,118,76,21,151)))
		bh.consume(collection.remove(19))
		collection = collection.union(mutable.HashSet[Integer](171,7,164,180,103,197,156))
		bh.consume(collection.add(122))
		collection = collection.union(mutable.HashSet[Integer](29,199,146,127,114,124,5))
		bh.consume(collection.remove(99))
		collection = collection.union(mutable.HashSet[Integer](137,64,15,114,11,150,170,178,160))
		bh.consume(collection.add(132))
		bh.consume(collection.remove(175))
		bh.consume(collection.remove(84))
		collection = collection.union(mutable.HashSet[Integer](27,44,156,89,121,51,179,179))
		bh.consume(collection.add(71))
		bh.consume(collection.remove(28))
		collection = collection.union(mutable.HashSet[Integer](97,39,84,158,18,174,175))
		collection = collection.union(mutable.HashSet[Integer](92,50,82,184,140,72,10,124))
		bh.consume(collection.add(70))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](17,98,90,164,135,191)))
		bh.consume(collection.add(131))
		collection = collection.union(mutable.HashSet[Integer](154,72,120,79))
		bh.consume(collection.remove(159))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](158,93,137,197,124,60,104)))
		bh.consume(collection.add(198))
		bh.consume(collection.addAll(mutable.ArrayBuffer[Integer](98,39,183,135)))
		collection = collection.union(mutable.HashSet[Integer](181,57,162,105,99,36))
		bh.consume(collection.contains(114))
		bh.consume(collection.contains(160))
		bh.consume(collection.remove(93))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](72,105,160,83,170,13,135,145,196)))
		bh.consume(collection.contains(104))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](53,135,186,131,108,89,2,127)))
		bh.consume(collection.remove(176))
		bh.consume(collection.subtractAll(mutable.ArrayBuffer[Integer](164,58,139,183,93,32,87,133)))
		collection = collection.diff(mutable.HashSet[Integer](137,11,73,57,105,54,137,10,140))
		bh.consume(collection.remove(21))
		bh.consume(collection.add(121))
		bh.consume(collection.add(2))
		bh.consume(collection.remove(9))
		bh.consume(collection.remove(184))
		collection = collection.union(mutable.HashSet[Integer](95,164,91,179,125,49,86,177))
		collection = collection.diff(mutable.HashSet[Integer](172,127,67,80,21,41,89))
		bh.consume(collection.contains(8))
		bh.consume(collection.remove(19))
	}
}
