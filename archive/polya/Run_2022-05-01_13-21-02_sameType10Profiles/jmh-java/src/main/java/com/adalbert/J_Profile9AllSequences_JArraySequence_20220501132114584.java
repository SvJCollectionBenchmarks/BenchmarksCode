package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile9AllSequences_JArraySequence_20220501132114584 {
	java.util.ArrayList<Double> collection = new java.util.ArrayList<>();
	@Setup(Level.Invocation)
	public void setupJArraySequence() {
		collection = new java.util.ArrayList<>();
		collection.add(4.0);
		collection.add(143.0);
		collection.add(59.0);
		collection.add(143.0);
		collection.add(9.0);
		collection.add(16.0);
		collection.add(85.0);
		collection.add(92.0);
		collection.add(175.0);
		collection.add(159.0);
		collection.add(40.0);
		collection.add(120.0);
		collection.add(110.0);
		collection.add(130.0);
		collection.add(14.0);
		collection.add(87.0);
		collection.add(52.0);
		collection.add(120.0);
		collection.add(99.0);
		collection.add(109.0);
		collection.add(65.0);
		collection.add(151.0);
		collection.add(83.0);
		collection.add(197.0);
		collection.add(167.0);
		collection.add(19.0);
		collection.add(192.0);
		collection.add(111.0);
		collection.add(81.0);
		collection.add(111.0);
		collection.add(72.0);
		collection.add(170.0);
		collection.add(36.0);
		collection.add(150.0);
		collection.add(171.0);
		collection.add(195.0);
		collection.add(88.0);
		collection.add(166.0);
		collection.add(44.0);
		collection.add(29.0);
		collection.add(166.0);
		collection.add(8.0);
		collection.add(20.0);
		collection.add(37.0);
		collection.add(127.0);
		collection.add(88.0);
		collection.add(42.0);
		collection.add(38.0);
		collection.add(115.0);
		collection.add(64.0);
		collection.add(68.0);
		collection.add(55.0);
		collection.add(100.0);
		collection.add(194.0);
		collection.add(190.0);
		collection.add(111.0);
		collection.add(79.0);
		collection.add(134.0);
		collection.add(15.0);
		collection.add(27.0);
		collection.add(109.0);
		collection.add(23.0);
		collection.add(154.0);
		collection.add(49.0);
		collection.add(127.0);
		collection.add(198.0);
		collection.add(167.0);
		collection.add(191.0);
		collection.add(30.0);
		collection.add(95.0);
		collection.add(120.0);
		collection.add(174.0);
		collection.add(60.0);
		collection.add(47.0);
		collection.add(189.0);
		collection.add(105.0);
		collection.add(21.0);
		collection.add(112.0);
		collection.add(88.0);
		collection.add(155.0);
		collection.add(137.0);
		collection.add(59.0);
		collection.add(105.0);
		collection.add(33.0);
		collection.add(98.0);
		collection.add(147.0);
		collection.add(44.0);
		collection.add(78.0);
		collection.add(195.0);
		collection.add(112.0);
		collection.add(96.0);
		collection.add(135.0);
		collection.add(2.0);
		collection.add(112.0);
		collection.add(139.0);
		collection.add(174.0);
		collection.add(148.0);
		collection.add(114.0);
		collection.add(192.0);
		collection.add(179.0);
		collection.add(177.0);
		collection.add(44.0);
		collection.add(178.0);
		collection.add(180.0);
		collection.add(103.0);
		collection.add(163.0);
		collection.add(131.0);
		collection.add(115.0);
		collection.add(120.0);
		collection.add(114.0);
		collection.add(175.0);
		collection.add(192.0);
		collection.add(50.0);
		collection.add(138.0);
		collection.add(85.0);
		collection.add(81.0);
		collection.add(55.0);
		collection.add(81.0);
		collection.add(120.0);
		collection.add(92.0);
		collection.add(193.0);
		collection.add(190.0);
		collection.add(26.0);
		collection.add(149.0);
		collection.add(154.0);
		collection.add(41.0);
		collection.add(108.0);
		collection.add(166.0);
		collection.add(117.0);
		collection.add(35.0);
		collection.add(177.0);
		collection.add(128.0);
		collection.add(82.0);
		collection.add(179.0);
		collection.add(66.0);
		collection.add(131.0);
		collection.add(161.0);
		collection.add(121.0);
		collection.add(188.0);
		collection.add(182.0);
		collection.add(99.0);
		collection.add(195.0);
		collection.add(61.0);
		collection.add(25.0);
		collection.add(28.0);
		collection.add(131.0);
		collection.add(40.0);
		collection.add(126.0);
		collection.add(59.0);
		collection.add(65.0);
		collection.add(18.0);
		collection.add(30.0);
		collection.add(50.0);
		collection.add(25.0);
		collection.add(63.0);
		collection.add(47.0);
		collection.add(71.0);
		collection.add(159.0);
		collection.add(66.0);
		collection.add(93.0);
		collection.add(122.0);
		collection.add(56.0);
		collection.add(178.0);
		collection.add(102.0);
		collection.add(188.0);
		collection.add(39.0);
		collection.add(184.0);
		collection.add(129.0);
		collection.add(158.0);
		collection.add(92.0);
		collection.add(130.0);
		collection.add(35.0);
		collection.add(26.0);
		collection.add(52.0);
		collection.add(55.0);
		collection.add(107.0);
		collection.add(84.0);
		collection.add(63.0);
		collection.add(183.0);
		collection.add(108.0);
		collection.add(68.0);
		collection.add(130.0);
		collection.add(174.0);
		collection.add(23.0);
		collection.add(89.0);
		collection.add(67.0);
		collection.add(140.0);
		collection.add(169.0);
		collection.add(151.0);
		collection.add(166.0);
		collection.add(127.0);
		collection.add(29.0);
		collection.add(68.0);
		collection.add(108.0);
		collection.add(80.0);
		collection.add(104.0);
		collection.add(159.0);
		collection.add(17.0);
		collection.add(172.0);
		collection.add(176.0);
		collection.add(181.0);
		collection.add(64.0);
		collection.add(95.0);
		collection.add(69.0);
		collection.add(157.0);
		collection.add(169.0);
		collection.add(112.0);
		collection.add(97.0);
		collection.add(67.0);
		collection.add(19.0);
		collection.add(16.0);
		collection.add(167.0);
		collection.add(154.0);
		collection.add(81.0);
		collection.add(12.0);
		collection.add(170.0);
		collection.add(32.0);
		collection.add(58.0);
		collection.add(161.0);
		collection.add(124.0);
		collection.add(146.0);
		collection.add(123.0);
		collection.add(76.0);
		collection.add(162.0);
		collection.add(183.0);
		collection.add(156.0);
		collection.add(158.0);
		collection.add(8.0);
		collection.add(177.0);
		collection.add(85.0);
		collection.add(24.0);
		collection.add(60.0);
		collection.add(19.0);
		collection.add(146.0);
		collection.add(112.0);
		collection.add(113.0);
		collection.add(119.0);
		collection.add(30.0);
		collection.add(21.0);
		collection.add(138.0);
		collection.add(55.0);
		collection.add(54.0);
		collection.add(176.0);
		collection.add(155.0);
		collection.add(138.0);
		collection.add(164.0);
		collection.add(108.0);
		collection.add(17.0);
		collection.add(39.0);
		collection.add(54.0);
		collection.add(39.0);
		collection.add(29.0);
		collection.add(62.0);
		collection.add(194.0);
		collection.add(55.0);
		collection.add(121.0);
		collection.add(82.0);
		collection.add(134.0);
		collection.add(165.0);
		collection.add(40.0);
		collection.add(127.0);
		collection.add(75.0);
		collection.add(119.0);
		collection.add(4.0);
		collection.add(83.0);
		collection.add(22.0);
		collection.add(35.0);
		collection.add(160.0);
		collection.add(41.0);
		collection.add(170.0);
		collection.add(153.0);
		collection.add(167.0);
		collection.add(166.0);
		collection.add(186.0);
		collection.add(198.0);
		collection.add(92.0);
		collection.add(58.0);
		collection.add(112.0);
		collection.add(153.0);
		collection.add(63.0);
		collection.add(185.0);
		collection.add(34.0);
		collection.add(144.0);
		collection.add(40.0);
		collection.add(135.0);
		collection.add(74.0);
		collection.add(109.0);
		collection.add(26.0);
		collection.add(35.0);
		collection.add(154.0);
		collection.add(91.0);
		collection.add(5.0);
		collection.add(79.0);
		collection.add(164.0);
		collection.add(68.0);
		collection.add(49.0);
		collection.add(189.0);
		collection.add(119.0);
		collection.add(54.0);
		collection.add(80.0);
		collection.add(7.0);
		collection.add(148.0);
		collection.add(144.0);
		collection.add(43.0);
		collection.add(191.0);
		collection.add(130.0);
		collection.add(20.0);
		collection.add(96.0);
		collection.add(87.0);
		collection.add(144.0);
		collection.add(12.0);
		collection.add(141.0);
		collection.add(156.0);
		collection.add(12.0);
		collection.add(170.0);
		collection.add(43.0);
		collection.add(194.0);
		collection.add(77.0);
		collection.add(194.0);
		collection.add(197.0);
		collection.add(20.0);
		collection.add(121.0);
		collection.add(71.0);
		collection.add(22.0);
		collection.add(80.0);
		collection.add(62.0);
		collection.add(38.0);
		collection.add(94.0);
		collection.add(41.0);
		collection.add(51.0);
		collection.add(148.0);
		collection.add(106.0);
		collection.add(91.0);
		collection.add(141.0);
		collection.add(61.0);
		collection.add(51.0);
		collection.add(111.0);
		collection.add(158.0);
		collection.add(37.0);
		collection.add(77.0);
		collection.add(162.0);
		collection.add(152.0);
		collection.add(183.0);
		collection.add(169.0);
		collection.add(121.0);
		collection.add(51.0);
		collection.add(168.0);
		collection.add(164.0);
		collection.add(66.0);
		collection.add(186.0);
		collection.add(133.0);
		collection.add(167.0);
		collection.add(163.0);
		collection.add(27.0);
		collection.add(37.0);
		collection.add(161.0);
		collection.add(11.0);
		collection.add(109.0);
		collection.add(75.0);
		collection.add(113.0);
		collection.add(138.0);
		collection.add(60.0);
		collection.add(126.0);
		collection.add(42.0);
		collection.add(134.0);
		collection.add(122.0);
		collection.add(165.0);
		collection.add(150.0);
		collection.add(195.0);
		collection.add(92.0);
		collection.add(60.0);
		collection.add(64.0);
		collection.add(167.0);
		collection.add(53.0);
		collection.add(76.0);
		collection.add(93.0);
		collection.add(89.0);
		collection.add(144.0);
		collection.add(163.0);
		collection.add(175.0);
		collection.add(171.0);
		collection.add(198.0);
		collection.add(107.0);
		collection.add(96.0);
		collection.add(33.0);
		collection.add(76.0);
		collection.add(32.0);
		collection.add(1.0);
		collection.add(150.0);
		collection.add(91.0);
		collection.add(82.0);
		collection.add(148.0);
		collection.add(58.0);
		collection.add(16.0);
		collection.add(149.0);
		collection.add(154.0);
		collection.add(192.0);
		collection.add(74.0);
		collection.add(130.0);
		collection.add(165.0);
		collection.add(143.0);
		collection.add(4.0);
		collection.add(5.0);
		collection.add(62.0);
		collection.add(62.0);
		collection.add(172.0);
		collection.add(8.0);
		collection.add(37.0);
		collection.add(74.0);
		collection.add(72.0);
		collection.add(52.0);
		collection.add(95.0);
		collection.add(147.0);
		collection.add(46.0);
		collection.add(186.0);
		collection.add(56.0);
		collection.add(72.0);
		collection.add(104.0);
		collection.add(68.0);
		collection.add(137.0);
		collection.add(108.0);
		collection.add(53.0);
		collection.add(19.0);
		collection.add(177.0);
		collection.add(64.0);
		collection.add(141.0);
		collection.add(51.0);
		collection.add(153.0);
		collection.add(191.0);
		collection.add(80.0);
		collection.add(6.0);
		collection.add(78.0);
		collection.add(42.0);
		collection.add(164.0);
		collection.add(43.0);
		collection.add(108.0);
		collection.add(130.0);
		collection.add(110.0);
		collection.add(114.0);
		collection.add(174.0);
		collection.add(160.0);
		collection.add(186.0);
		collection.add(112.0);
		collection.add(154.0);
		collection.add(77.0);
		collection.add(38.0);
		collection.add(36.0);
		collection.add(134.0);
		collection.add(191.0);
		collection.add(181.0);
		collection.add(171.0);
		collection.add(23.0);
		collection.add(78.0);
		collection.add(110.0);
		collection.add(108.0);
		collection.add(185.0);
		collection.add(190.0);
		collection.add(168.0);
		collection.add(178.0);
		collection.add(181.0);
		collection.add(167.0);
		collection.add(72.0);
		collection.add(96.0);
		collection.add(174.0);
		collection.add(177.0);
		collection.add(155.0);
		collection.add(45.0);
		collection.add(10.0);
		collection.add(166.0);
		collection.add(96.0);
		collection.add(99.0);
		collection.add(151.0);
		collection.add(29.0);
		collection.add(42.0);
		collection.add(140.0);
		collection.add(138.0);
		collection.add(25.0);
		collection.add(103.0);
		collection.add(6.0);
		collection.add(70.0);
		collection.add(195.0);
		collection.add(61.0);
		collection.add(70.0);
		collection.add(154.0);
		collection.add(86.0);
		collection.add(11.0);
		collection.add(148.0);
		collection.add(41.0);
		collection.add(143.0);
		collection.add(198.0);
		collection.add(188.0);
		collection.add(121.0);
		collection.add(152.0);
		collection.add(150.0);
		collection.add(200.0);
		collection.add(41.0);
		collection.add(107.0);
		collection.add(15.0);
		collection.add(60.0);
		collection.add(171.0);
		collection.add(45.0);
		collection.add(11.0);
		collection.add(161.0);
		collection.add(143.0);
		collection.add(164.0);
		collection.add(103.0);
		collection.add(75.0);
		collection.add(150.0);
		collection.add(85.0);
		collection.add(22.0);
		collection.add(105.0);
		collection.add(141.0);
		collection.add(28.0);
		collection.add(163.0);
		collection.add(193.0);
		collection.add(143.0);
		collection.add(188.0);
		collection.add(17.0);
		collection.add(14.0);
		collection.add(122.0);
		collection.add(121.0);
		collection.add(138.0);
		collection.add(3.0);
		collection.add(101.0);
		collection.add(72.0);
		collection.add(156.0);
		collection.add(39.0);
		collection.add(51.0);
		collection.add(32.0);
		collection.add(47.0);
		collection.add(38.0);
		collection.add(165.0);
		collection.add(117.0);
		collection.add(186.0);
		collection.add(131.0);
		collection.add(140.0);
		collection.add(21.0);
		collection.add(182.0);
		collection.add(64.0);
		collection.add(200.0);
		collection.add(37.0);
		collection.add(117.0);
		collection.add(100.0);
		collection.add(7.0);
		collection.add(62.0);
		collection.add(30.0);
		collection.add(105.0);
		collection.add(178.0);
		collection.add(168.0);
		collection.add(152.0);
		collection.add(179.0);
		collection.add(5.0);
		collection.add(43.0);
		collection.add(189.0);
		collection.add(73.0);
		collection.add(117.0);
		collection.add(119.0);
		collection.add(2.0);
		collection.add(35.0);
		collection.add(198.0);
		collection.add(156.0);
		collection.add(114.0);
		collection.add(132.0);
		collection.add(171.0);
		collection.add(149.0);
		collection.add(145.0);
		collection.add(178.0);
		collection.add(198.0);
		collection.add(42.0);
		collection.add(10.0);
		collection.add(163.0);
		collection.add(166.0);
		collection.add(25.0);
		collection.add(32.0);
		collection.add(23.0);
		collection.add(173.0);
		collection.add(26.0);
		collection.add(107.0);
		collection.add(147.0);
		collection.add(159.0);
		collection.add(27.0);
		collection.add(164.0);
		collection.add(95.0);
		collection.add(180.0);
		collection.add(67.0);
		collection.add(14.0);
		collection.add(166.0);
		collection.add(157.0);
		collection.add(10.0);
		collection.add(154.0);
		collection.add(90.0);
		collection.add(8.0);
		collection.add(4.0);
		collection.add(126.0);
		collection.add(182.0);
		collection.add(52.0);
		collection.add(111.0);
		collection.add(181.0);
		collection.add(73.0);
		collection.add(134.0);
		collection.add(125.0);
		collection.add(195.0);
		collection.add(31.0);
		collection.add(129.0);
		collection.add(85.0);
		collection.add(144.0);
		collection.add(90.0);
		collection.add(65.0);
		collection.add(26.0);
		collection.add(146.0);
		collection.add(113.0);
		collection.add(122.0);
		collection.add(189.0);
		collection.add(42.0);
		collection.add(143.0);
		collection.add(42.0);
		collection.add(10.0);
		collection.add(166.0);
		collection.add(126.0);
		collection.add(56.0);
		collection.add(5.0);
		collection.add(146.0);
		collection.add(147.0);
		collection.add(98.0);
		collection.add(193.0);
		collection.add(189.0);
		collection.add(133.0);
		collection.add(40.0);
		collection.add(103.0);
		collection.add(51.0);
		collection.add(161.0);
		collection.add(36.0);
		collection.add(8.0);
		collection.add(178.0);
		collection.add(65.0);
		collection.add(197.0);
		collection.add(105.0);
		collection.add(60.0);
		collection.add(154.0);
		collection.add(71.0);
		collection.add(112.0);
		collection.add(121.0);
		collection.add(143.0);
		collection.add(75.0);
		collection.add(166.0);
		collection.add(153.0);
		collection.add(149.0);
		collection.add(70.0);
		collection.add(132.0);
		collection.add(52.0);
		collection.add(163.0);
		collection.add(114.0);
		collection.add(93.0);
		collection.add(175.0);
		collection.add(61.0);
		collection.add(165.0);
		collection.add(40.0);
		collection.add(27.0);
		collection.add(22.0);
		collection.add(14.0);
		collection.add(119.0);
		collection.add(167.0);
		collection.add(67.0);
		collection.add(72.0);
		collection.add(101.0);
		collection.add(155.0);
		collection.add(180.0);
		collection.add(166.0);
		collection.add(68.0);
		collection.add(190.0);
		collection.add(134.0);
		collection.add(170.0);
		collection.add(61.0);
		collection.add(190.0);
		collection.add(59.0);
		collection.add(5.0);
		collection.add(170.0);
		collection.add(36.0);
		collection.add(156.0);
		collection.add(125.0);
		collection.add(84.0);
		collection.add(94.0);
		collection.add(191.0);
		collection.add(48.0);
		collection.add(66.0);
		collection.add(49.0);
		collection.add(117.0);
		collection.add(39.0);
		collection.add(19.0);
		collection.add(147.0);
		collection.add(148.0);
		collection.add(177.0);
		collection.add(25.0);
		collection.add(16.0);
		collection.add(177.0);
		collection.add(68.0);
		collection.add(107.0);
		collection.add(76.0);
		collection.add(21.0);
		collection.add(70.0);
		collection.add(189.0);
		collection.add(193.0);
		collection.add(20.0);
		collection.add(146.0);
		collection.add(65.0);
		collection.add(68.0);
		collection.add(189.0);
		collection.add(13.0);
		collection.add(181.0);
		collection.add(92.0);
		collection.add(148.0);
		collection.add(38.0);
		collection.add(42.0);
		collection.add(78.0);
		collection.add(89.0);
		collection.add(3.0);
		collection.add(26.0);
		collection.add(77.0);
		collection.add(115.0);
		collection.add(161.0);
		collection.add(103.0);
		collection.add(148.0);
		collection.add(34.0);
		collection.add(76.0);
		collection.add(56.0);
		collection.add(130.0);
		collection.add(118.0);
		collection.add(200.0);
		collection.add(193.0);
		collection.add(60.0);
		collection.add(156.0);
		collection.add(55.0);
		collection.add(199.0);
		collection.add(96.0);
		collection.add(176.0);
		collection.add(141.0);
		collection.add(58.0);
		collection.add(111.0);
		collection.add(193.0);
		collection.add(170.0);
		collection.add(55.0);
		collection.add(20.0);
		collection.add(197.0);
		collection.add(34.0);
		collection.add(168.0);
		collection.add(146.0);
		collection.add(111.0);
		collection.add(184.0);
		collection.add(40.0);
		collection.add(103.0);
		collection.add(113.0);
		collection.add(62.0);
		collection.add(50.0);
		collection.add(93.0);
		collection.add(42.0);
		collection.add(109.0);
		collection.add(60.0);
		collection.add(119.0);
		collection.add(81.0);
		collection.add(1.0);
		collection.add(39.0);
		collection.add(108.0);
		collection.add(112.0);
		collection.add(112.0);
		collection.add(149.0);
		collection.add(42.0);
		collection.add(135.0);
		collection.add(165.0);
		collection.add(137.0);
		collection.add(141.0);
		collection.add(99.0);
		collection.add(158.0);
		collection.add(99.0);
		collection.add(166.0);
		collection.add(126.0);
		collection.add(82.0);
		collection.add(189.0);
		collection.add(127.0);
		collection.add(155.0);
		collection.add(124.0);
		collection.add(30.0);
		collection.add(167.0);
		collection.add(79.0);
		collection.add(133.0);
		collection.add(132.0);
		collection.add(21.0);
		collection.add(5.0);
		collection.add(90.0);
		collection.add(182.0);
		collection.add(107.0);
		collection.add(184.0);
		collection.add(124.0);
		collection.add(179.0);
		collection.add(53.0);
		collection.add(165.0);
		collection.add(50.0);
		collection.add(116.0);
		collection.add(141.0);
		collection.add(122.0);
		collection.add(200.0);
		collection.add(3.0);
		collection.add(62.0);
		collection.add(52.0);
		collection.add(14.0);
		collection.add(99.0);
		collection.add(163.0);
		collection.add(58.0);
		collection.add(84.0);
		collection.add(73.0);
		collection.add(168.0);
		collection.add(163.0);
		collection.add(102.0);
		collection.add(36.0);
		collection.add(76.0);
		collection.add(82.0);
		collection.add(184.0);
		collection.add(10.0);
		collection.add(42.0);
		collection.add(11.0);
		collection.add(94.0);
		collection.add(102.0);
		collection.add(24.0);
		collection.add(71.0);
		collection.add(144.0);
		collection.add(19.0);
		collection.add(168.0);
		collection.add(69.0);
		collection.add(147.0);
		collection.add(64.0);
		collection.add(116.0);
		collection.add(81.0);
		collection.add(142.0);
		collection.add(103.0);
		collection.add(4.0);
		collection.add(117.0);
		collection.add(12.0);
		collection.add(77.0);
		collection.add(182.0);
		collection.add(68.0);
		collection.add(104.0);
		collection.add(31.0);
		collection.add(32.0);
		collection.add(122.0);
		collection.add(167.0);
		collection.add(179.0);
		collection.add(157.0);
		collection.add(107.0);
		collection.add(32.0);
		collection.add(130.0);
		collection.add(14.0);
		collection.add(173.0);
		collection.add(146.0);
		collection.add(172.0);
		collection.add(86.0);
		collection.add(72.0);
		collection.add(48.0);
		collection.add(13.0);
		collection.add(190.0);
		collection.add(112.0);
		collection.add(114.0);
		collection.add(83.0);
		collection.add(186.0);
		collection.add(173.0);
		collection.add(16.0);
		collection.add(180.0);
		collection.add(164.0);
		collection.add(80.0);
		collection.add(182.0);
		collection.add(49.0);
		collection.add(13.0);
		collection.add(54.0);
		collection.add(118.0);
		collection.add(133.0);
		collection.add(79.0);
		collection.add(156.0);
		collection.add(75.0);
		collection.add(135.0);
		collection.add(143.0);
		collection.add(181.0);
		collection.add(3.0);
		collection.add(51.0);
		collection.add(87.0);
		collection.add(145.0);
		collection.add(99.0);
		collection.add(90.0);
		collection.add(60.0);
		collection.add(130.0);
		collection.add(37.0);
		collection.add(173.0);
		collection.add(59.0);
		collection.add(31.0);
		collection.add(171.0);
		collection.add(114.0);
		collection.add(175.0);
		collection.add(196.0);
		collection.add(144.0);
		collection.add(23.0);
		collection.add(178.0);
		collection.add(30.0);
		collection.add(175.0);
		collection.add(56.0);
		collection.add(172.0);
		collection.add(146.0);
		collection.add(60.0);
		collection.add(185.0);
		collection.add(162.0);
		collection.add(75.0);
		collection.add(57.0);
		collection.add(45.0);
		collection.add(107.0);
		collection.add(79.0);
		collection.add(97.0);
		collection.add(155.0);
		collection.add(113.0);
		collection.add(21.0);
		collection.add(34.0);
		collection.add(34.0);
		collection.add(156.0);
		collection.add(173.0);
		collection.add(19.0);
		collection.add(61.0);
		collection.add(80.0);
		collection.add(190.0);
		collection.add(150.0);
		collection.add(7.0);
		collection.add(135.0);
		collection.add(169.0);
		collection.add(53.0);
		collection.add(77.0);
		collection.add(61.0);
		collection.add(109.0);
		collection.add(142.0);
		collection.add(172.0);
		collection.add(154.0);
		collection.add(100.0);
		collection.add(84.0);
		collection.add(22.0);
		collection.add(167.0);
		collection.add(87.0);
		collection.add(72.0);
		collection.add(46.0);
		collection.add(151.0);
		collection.add(28.0);
		collection.add(87.0);
		collection.add(63.0);
		collection.add(199.0);
		collection.add(115.0);
		collection.add(5.0);
		collection.add(39.0);
		collection.add(64.0);
		collection.add(80.0);
		collection.add(107.0);
		collection.add(111.0);
		collection.add(119.0);
		collection.add(75.0);
		collection.add(109.0);
		collection.add(200.0);
		collection.add(2.0);
		collection.add(151.0);
		collection.add(190.0);
		collection.add(58.0);
		collection.add(94.0);
		collection.add(59.0);
		collection.add(151.0);
		collection.add(123.0);
		collection.add(35.0);
		collection.add(186.0);
		collection.add(133.0);
		collection.add(172.0);
		collection.add(103.0);
		collection.add(21.0);
		collection.add(110.0);
		collection.add(185.0);
		collection.add(43.0);
		collection.add(82.0);
		collection.add(27.0);
		collection.add(171.0);
		collection.add(98.0);
		collection.add(129.0);
		collection.add(69.0);
		collection.add(48.0);
		collection.add(125.0);
		collection.add(56.0);
		collection.add(51.0);
		collection.add(136.0);
		collection.add(129.0);
		collection.add(155.0);
		collection.add(29.0);
		collection.add(26.0);
		collection.add(78.0);
		collection.add(95.0);
		collection.add(64.0);
		collection.add(122.0);
		collection.add(169.0);
		collection.add(81.0);
		collection.add(134.0);
		collection.add(122.0);
		collection.add(87.0);
		collection.add(193.0);
		collection.add(17.0);
		collection.add(31.0);
		collection.add(21.0);
		collection.add(116.0);
		collection.add(87.0);
		collection.add(140.0);
		collection.add(64.0);
		collection.add(18.0);
		collection.add(18.0);
		collection.add(65.0);
		collection.add(26.0);
		collection.add(54.0);
		collection.add(103.0);
		collection.add(143.0);
		collection.add(26.0);
		collection.add(189.0);
		collection.add(169.0);
		collection.add(61.0);
		collection.add(157.0);
		collection.add(179.0);
		collection.add(155.0);
		collection.add(192.0);
		collection.add(69.0);
		collection.add(157.0);
		collection.add(160.0);
		collection.add(185.0);
		collection.add(63.0);
		collection.add(52.0);
		collection.add(197.0);
		collection.add(181.0);
		collection.add(105.0);
		collection.add(167.0);
		collection.add(113.0);
		collection.add(82.0);
		collection.add(109.0);
		collection.add(43.0);
		collection.add(50.0);
		collection.add(113.0);
		collection.add(33.0);
		collection.add(153.0);
		collection.add(7.0);
		collection.add(136.0);
		collection.add(95.0);
		collection.add(102.0);
		collection.add(36.0);
		collection.add(43.0);
		collection.add(98.0);
		collection.add(154.0);
		collection.add(102.0);
		collection.add(140.0);
		collection.add(141.0);
		collection.add(149.0);
		collection.add(81.0);
		collection.add(169.0);
		collection.add(162.0);
		collection.add(135.0);
		collection.add(152.0);
		collection.add(49.0);
		collection.add(67.0);
		collection.add(44.0);
		collection.add(112.0);
		collection.add(83.0);
		collection.add(82.0);
		collection.add(24.0);
		collection.add(65.0);
		collection.add(149.0);
		collection.add(16.0);
		collection.add(195.0);
		collection.add(163.0);
		collection.add(84.0);
		collection.add(78.0);
		collection.add(79.0);
		collection.add(70.0);
		collection.add(118.0);
		collection.add(9.0);
		collection.add(128.0);
		collection.add(55.0);
		collection.add(113.0);
		collection.add(135.0);
		collection.add(95.0);
		collection.add(156.0);
		collection.add(102.0);
		collection.add(156.0);
		collection.add(179.0);
		collection.add(22.0);
		collection.add(189.0);
		collection.add(50.0);
		collection.add(147.0);
		collection.add(124.0);
		collection.add(123.0);
		collection.add(2.0);
		collection.add(123.0);
		collection.add(134.0);
		collection.add(52.0);
		collection.add(186.0);
		collection.add(145.0);
		collection.add(166.0);
		collection.add(29.0);
		collection.add(93.0);
		collection.add(92.0);
		collection.add(180.0);
		collection.add(90.0);
		collection.add(165.0);
		collection.add(30.0);
		collection.add(50.0);
		collection.add(93.0);
		collection.add(110.0);
		collection.add(120.0);
		collection.add(124.0);
		collection.add(40.0);
		collection.add(77.0);
		collection.add(149.0);
		collection.add(82.0);
		collection.add(153.0);
		collection.add(5.0);
		collection.add(141.0);
		collection.add(186.0);
		collection.add(104.0);
		collection.add(26.0);
		collection.add(194.0);
		collection.add(162.0);
		collection.add(17.0);
		collection.add(140.0);
		collection.add(43.0);
		collection.add(182.0);
		collection.add(191.0);
		collection.add(124.0);
		collection.add(81.0);
		collection.add(23.0);
		collection.add(65.0);
		collection.add(9.0);
		collection.add(40.0);
		collection.add(193.0);
		collection.add(54.0);
		collection.add(49.0);
		collection.add(148.0);
		collection.add(70.0);
		collection.add(199.0);
		collection.add(151.0);
		collection.add(58.0);
		collection.add(166.0);
		collection.add(17.0);
		collection.add(144.0);
		collection.add(184.0);
		collection.add(186.0);
		collection.add(118.0);
		collection.add(192.0);
		collection.add(130.0);
		collection.add(46.0);
		collection.add(65.0);
		collection.add(187.0);
		collection.add(76.0);
		collection.add(105.0);
		collection.add(13.0);
		collection.add(129.0);
		collection.add(52.0);
		collection.add(22.0);
		collection.add(146.0);
		collection.add(176.0);
		collection.add(85.0);
		collection.add(10.0);
		collection.add(45.0);
		collection.add(37.0);
		collection.add(177.0);
		collection.add(34.0);
		collection.add(45.0);
		collection.add(33.0);
		collection.add(172.0);
		collection.add(6.0);
		collection.add(45.0);
		collection.add(157.0);
		collection.add(111.0);
		collection.add(165.0);
		collection.add(29.0);
		collection.add(24.0);
		collection.add(112.0);
		collection.add(136.0);
		collection.add(66.0);
		collection.add(109.0);
		collection.add(68.0);
		collection.add(71.0);
		collection.add(127.0);
		collection.add(166.0);
		collection.add(31.0);
		collection.add(81.0);
		collection.add(127.0);
		collection.add(166.0);
		collection.add(123.0);
		collection.add(113.0);
		collection.add(33.0);
		collection.add(191.0);
		collection.add(181.0);
		collection.add(31.0);
		collection.add(43.0);
		collection.add(38.0);
		collection.add(56.0);
		collection.add(192.0);
		collection.add(37.0);
		collection.add(49.0);
		collection.add(191.0);
		collection.add(110.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JArraySequence(Blackhole bh) {
		collection.add(89, 58.0);
		bh.consume(collection.set(76, 76.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(65.0,115.0,47.0,125.0,61.0,191.0,112.0,194.0,62.0)));
		bh.consume(collection.set(176, 189.0));
		bh.consume(collection.set(195, 151.0));
		bh.consume(collection.lastIndexOf(90.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(23.0,74.0,34.0,8.0,114.0,56.0,53.0,103.0,78.0)));
		bh.consume(collection.contains(20.0));
		collection.add(46, 188.0);
		bh.consume(collection.set(6, 148.0));
		collection.add(45.0);
		bh.consume(collection.set(95, 139.0));
		bh.consume(collection.addAll(10, java.util.Arrays.asList(198.0,183.0,124.0,149.0)));
		collection.add(0, 135.0);
		bh.consume(collection.set(63, 176.0));
		bh.consume(collection.lastIndexOf(105.0));
		collection.add(43.0);
		bh.consume(collection.contains(168.0));
		bh.consume(collection.addAll(1, java.util.Arrays.asList(129.0,112.0,172.0,71.0,169.0,11.0,125.0,191.0)));
		collection.add(179, 21.0);
		bh.consume(collection.lastIndexOf(147.0));
		collection.add(2.0);
		bh.consume(collection.set(177, 113.0));
		collection.remove(128.0);
		bh.consume(collection.contains(169.0));
		bh.consume(collection.set(3, 189.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(197.0,24.0,16.0,145.0,54.0,61.0)));
		bh.consume(collection.set(137, 21.0));
		bh.consume(collection.set(38, 40.0));
		bh.consume(collection.set(32, 184.0));
		collection.add(49.0);
		collection.add(173, 142.0);
		bh.consume(collection.contains(133.0));
		collection.remove(184.0);
		bh.consume(collection.lastIndexOf(191.0));
		collection.add(42.0);
		bh.consume(collection.lastIndexOf(121.0));
		bh.consume(collection.set(175, 95.0));
		bh.consume(collection.remove(93));
		bh.consume(collection.indexOf(172.0));
		bh.consume(collection.set(60, 73.0));
		bh.consume(collection.contains(100.0));
		bh.consume(collection.set(19, 183.0));
		bh.consume(collection.indexOf(9.0));
		bh.consume(collection.get(104));
		bh.consume(collection.addAll(51, java.util.Arrays.asList(54.0,98.0,118.0,117.0,51.0,155.0,143.0,140.0)));
		collection.add(4, 157.0);
		collection.remove(92.0);
		collection.add(96, 25.0);
		bh.consume(collection.lastIndexOf(87.0));
		collection.add(123, 133.0);
		collection.remove(81.0);
		bh.consume(collection.remove(70));
		collection.add(0, 95.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(143.0,57.0,76.0,7.0)));
		collection.remove(59.0);
		collection.add(173, 56.0);
		bh.consume(collection.set(47, 73.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(68.0,128.0,185.0,110.0,162.0,47.0,133.0,5.0)));
		collection.add(0, 4.0);
		bh.consume(collection.remove(55));
		bh.consume(collection.contains(155.0));
		collection.add(108, 86.0);
		collection.add(0, 71.0);
		collection.remove(187.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(30.0,92.0,137.0)));
		collection.remove(133.0);
		collection.add(0, 17.0);
		bh.consume(collection.set(133, 14.0));
		collection.add(23, 175.0);
		collection.remove(52.0);
		collection.add(0, 96.0);
		bh.consume(collection.set(89, 17.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(194.0,22.0,74.0,132.0)));
		bh.consume(collection.contains(47.0));
		collection.add(199, 90.0);
		bh.consume(collection.get(41));
		bh.consume(collection.lastIndexOf(73.0));
		bh.consume(collection.lastIndexOf(162.0));
		bh.consume(collection.set(100, 142.0));
		collection.add(0, 76.0);
		bh.consume(collection.get(130));
		bh.consume(collection.lastIndexOf(143.0));
		bh.consume(collection.addAll(72, java.util.Arrays.asList(119.0,48.0,127.0)));
		bh.consume(collection.set(117, 86.0));
		collection.add(1, 185.0);
		collection.add(61, 46.0);
		bh.consume(collection.lastIndexOf(54.0));
		collection.remove(133.0);
		bh.consume(collection.get(133));
		bh.consume(collection.set(100, 146.0));
		bh.consume(collection.addAll(150, java.util.Arrays.asList(163.0,184.0,182.0,132.0,189.0,190.0,45.0)));
		collection.add(22.0);
		collection.add(1, 107.0);
		bh.consume(collection.set(30, 98.0));
		collection.add(0, 197.0);
		bh.consume(collection.addAll(90, java.util.Arrays.asList(11.0,99.0,71.0,131.0,133.0,47.0)));
		collection.add(56.0);
		collection.add(57, 171.0);
		bh.consume(collection.set(79, 184.0));
		bh.consume(collection.contains(159.0));
		bh.consume(collection.set(88, 126.0));
		bh.consume(collection.contains(55.0));
		bh.consume(collection.set(55, 56.0));
		bh.consume(collection.set(183, 43.0));
		bh.consume(collection.set(25, 71.0));
		collection.add(2, 193.0);
		bh.consume(collection.set(132, 70.0));
		collection.add(48.0);
		bh.consume(collection.set(65, 101.0));
		bh.consume(collection.contains(125.0));
		collection.add(0, 34.0);
		bh.consume(collection.contains(135.0));
		collection.add(90.0);
		collection.add(83, 144.0);
		bh.consume(collection.lastIndexOf(121.0));
		collection.remove(172.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(40.0,163.0,30.0)));
		bh.consume(collection.set(131, 16.0));
		bh.consume(collection.contains(104.0));
		collection.add(0, 195.0);
		collection.remove(65.0);
		bh.consume(collection.lastIndexOf(113.0));
		collection.add(89, 158.0);
		bh.consume(collection.lastIndexOf(165.0));
		bh.consume(collection.lastIndexOf(42.0));
		bh.consume(collection.set(13, 56.0));
		collection.add(34.0);
		bh.consume(collection.addAll(61, java.util.Arrays.asList(193.0,114.0,123.0,107.0,32.0,88.0,123.0,171.0)));
		bh.consume(collection.lastIndexOf(196.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(11.0,68.0,25.0,49.0,138.0)));
		bh.consume(collection.contains(10.0));
		bh.consume(collection.get(104));
		bh.consume(collection.lastIndexOf(56.0));
		collection.add(156, 84.0);
		bh.consume(collection.remove(122));
		bh.consume(collection.get(130));
		collection.add(176.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(160.0,104.0,172.0)));
		collection.remove(111.0);
		collection.add(160, 122.0);
		collection.add(56, 6.0);
		collection.add(0, 39.0);
		bh.consume(collection.lastIndexOf(108.0));
		collection.add(119, 75.0);
		bh.consume(collection.lastIndexOf(81.0));
		collection.add(39.0);
		collection.add(193.0);
		bh.consume(collection.set(18, 142.0));
		bh.consume(collection.remove(174));
		bh.consume(collection.remove(66));
		collection.add(124.0);
		bh.consume(collection.contains(81.0));
		bh.consume(collection.contains(118.0));
		bh.consume(collection.remove(98));
		bh.consume(collection.set(187, 169.0));
		collection.add(154.0);
		bh.consume(collection.get(40));
		collection.add(0, 170.0);
		collection.add(104, 98.0);
		bh.consume(collection.set(94, 115.0));
		bh.consume(collection.set(140, 132.0));
		bh.consume(collection.set(56, 121.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(144.0,115.0,77.0)));
		collection.add(0, 101.0);
		bh.consume(collection.set(130, 195.0));
		bh.consume(collection.remove(122));
		collection.add(12, 128.0);
		bh.consume(collection.set(63, 122.0));
		bh.consume(collection.contains(98.0));
		collection.add(164.0);
		bh.consume(collection.remove(12));
		collection.add(54, 120.0);
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(168.0,135.0,37.0,80.0,76.0)));
		collection.remove(112.0);
		bh.consume(collection.lastIndexOf(6.0));
		collection.add(78, 117.0);
		collection.add(85.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,20.0,94.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(60.0,60.0,99.0,118.0,75.0,75.0)));
		bh.consume(collection.lastIndexOf(57.0));
		collection.add(54, 95.0);
		bh.consume(collection.set(115, 105.0));
		collection.add(0, 128.0);
		bh.consume(collection.get(104));
		bh.consume(collection.contains(125.0));
		bh.consume(collection.addAll(75, java.util.Arrays.asList(100.0,65.0,47.0,86.0,153.0,14.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(160.0,119.0,121.0,93.0,129.0,60.0,131.0,106.0)));
		collection.add(47, 172.0);
		bh.consume(collection.addAll(56, java.util.Arrays.asList(84.0,74.0,135.0,46.0,70.0,180.0,89.0,68.0,36.0)));
		bh.consume(collection.contains(78.0));
		collection.add(71, 76.0);
		collection.add(23.0);
		collection.add(42, 103.0);
		bh.consume(collection.remove(78));
		bh.consume(collection.addAll(java.util.Arrays.asList(22.0,8.0,122.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(82.0,14.0,183.0,62.0,195.0,118.0,198.0)));
		bh.consume(collection.set(68, 87.0));
		bh.consume(collection.set(66, 194.0));
		collection.add(27.0);
		collection.add(18.0);
		bh.consume(collection.addAll(58, java.util.Arrays.asList(13.0,174.0,43.0,123.0,138.0,42.0,154.0,105.0,162.0)));
		bh.consume(collection.set(140, 2.0));
		collection.add(0, 18.0);
		bh.consume(collection.lastIndexOf(33.0));
		bh.consume(collection.lastIndexOf(48.0));
		collection.add(146, 135.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(87.0,127.0,102.0,146.0)));
		collection.add(0, 96.0);
		collection.remove(60.0);
		collection.add(139.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(197.0,35.0,32.0,66.0,175.0,99.0)));
		bh.consume(collection.lastIndexOf(84.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(149.0,125.0,80.0,149.0,141.0,68.0,21.0,35.0,12.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(76.0,66.0,19.0,39.0,104.0)));
		bh.consume(collection.set(133, 119.0));
		bh.consume(collection.remove(42));
		bh.consume(collection.addAll(30, java.util.Arrays.asList(103.0,144.0,5.0)));
		collection.add(128, 54.0);
		bh.consume(collection.remove(179));
		bh.consume(collection.addAll(java.util.Arrays.asList(179.0,32.0,59.0,44.0,49.0,167.0,48.0)));
		bh.consume(collection.remove(170));
		bh.consume(collection.addAll(java.util.Arrays.asList(89.0,137.0,190.0,19.0,194.0,48.0,119.0)));
		collection.add(0, 107.0);
		collection.add(11, 58.0);
		bh.consume(collection.contains(123.0));
		bh.consume(collection.addAll(181, java.util.Arrays.asList(182.0,192.0,98.0)));
		bh.consume(collection.lastIndexOf(150.0));
		bh.consume(collection.set(104, 168.0));
		collection.add(0, 164.0);
		collection.add(131, 71.0);
		bh.consume(collection.contains(95.0));
		bh.consume(collection.lastIndexOf(144.0));
		collection.remove(2.0);
		collection.add(81.0);
		bh.consume(collection.lastIndexOf(78.0));
		bh.consume(collection.set(55, 93.0));
		bh.consume(collection.addAll(120, java.util.Arrays.asList(199.0,28.0,194.0,91.0,20.0,125.0,11.0,56.0)));
		bh.consume(collection.set(53, 117.0));
		bh.consume(collection.set(46, 190.0));
		collection.remove(164.0);
		collection.add(12, 143.0);
		bh.consume(collection.addAll(184, java.util.Arrays.asList(190.0,37.0,94.0)));
		collection.add(54, 177.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(142.0,42.0,161.0,73.0,144.0,80.0,121.0,77.0,180.0)));
		collection.add(0, 160.0);
		collection.add(0, 166.0);
		bh.consume(collection.contains(2.0));
		collection.add(39, 109.0);
		bh.consume(collection.set(184, 139.0));
		collection.remove(46.0);
		collection.remove(180.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(174.0,21.0,154.0,124.0,17.0,68.0,136.0,39.0,191.0)));
		bh.consume(collection.set(45, 171.0));
		collection.remove(90.0);
		bh.consume(collection.set(37, 10.0));
		bh.consume(collection.set(48, 15.0));
		bh.consume(collection.indexOf(55.0));
		bh.consume(collection.addAll(14, java.util.Arrays.asList(37.0,181.0,55.0,19.0,23.0,57.0,195.0,116.0,9.0)));
		bh.consume(collection.set(198, 18.0));
		collection.remove(128.0);
		bh.consume(collection.contains(28.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(118.0,68.0,28.0,149.0,157.0,138.0,11.0,34.0)));
		collection.add(63, 174.0);
		bh.consume(collection.set(70, 10.0));
		collection.add(60.0);
		collection.add(62, 95.0);
		collection.remove(174.0);
		bh.consume(collection.lastIndexOf(76.0));
		bh.consume(collection.addAll(18, java.util.Arrays.asList(191.0,129.0,75.0,92.0,195.0,154.0,37.0)));
		collection.add(0, 99.0);
		collection.add(115, 92.0);
		bh.consume(collection.contains(108.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(188.0,139.0,168.0,128.0,148.0,128.0,98.0,141.0)));
		bh.consume(collection.set(81, 137.0));
		collection.add(88, 130.0);
		bh.consume(collection.contains(185.0));
		bh.consume(collection.set(124, 25.0));
		collection.remove(43.0);
		collection.add(25.0);
		bh.consume(collection.remove(141));
		collection.add(21, 129.0);
		bh.consume(collection.addAll(177, java.util.Arrays.asList(179.0,66.0,50.0,159.0,158.0)));
		collection.add(20.0);
		collection.add(24, 17.0);
		bh.consume(collection.set(29, 24.0));
		collection.add(85.0);
		collection.add(55.0);
		collection.add(111, 41.0);
		bh.consume(collection.addAll(43, java.util.Arrays.asList(70.0,11.0,151.0,67.0,106.0)));
		bh.consume(collection.remove(175));
		collection.add(167.0);
		collection.add(68, 40.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(108.0,82.0,15.0,115.0,121.0,83.0,100.0,99.0,165.0)));
		bh.consume(collection.lastIndexOf(56.0));
		collection.remove(91.0);
		collection.remove(170.0);
		collection.remove(98.0);
		collection.remove(62.0);
		collection.remove(116.0);
		bh.consume(collection.set(60, 174.0));
		bh.consume(collection.lastIndexOf(126.0));
		collection.add(56, 62.0);
		collection.add(181.0);
		bh.consume(collection.addAll(127, java.util.Arrays.asList(189.0,80.0,115.0,153.0,147.0)));
		bh.consume(collection.lastIndexOf(200.0));
		collection.add(41, 45.0);
		bh.consume(collection.indexOf(25.0));
		collection.add(0, 22.0);
		bh.consume(collection.contains(59.0));
		bh.consume(collection.set(23, 132.0));
		collection.add(52, 52.0);
		bh.consume(collection.remove(84));
		bh.consume(collection.get(185));
		bh.consume(collection.set(132, 69.0));
		bh.consume(collection.set(64, 177.0));
		collection.add(146, 148.0);
		bh.consume(collection.addAll(47, java.util.Arrays.asList(94.0,122.0,198.0,154.0,180.0,197.0,157.0,163.0)));
		collection.remove(163.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(63.0,44.0,102.0,172.0,108.0,136.0,180.0,29.0,133.0)));
		collection.add(142, 106.0);
		bh.consume(collection.set(114, 22.0));
		bh.consume(collection.set(69, 103.0));
		bh.consume(collection.set(198, 89.0));
		bh.consume(collection.set(126, 54.0));
		collection.add(9.0);
		bh.consume(collection.contains(143.0));
		collection.remove(137.0);
		bh.consume(collection.addAll(3, java.util.Arrays.asList(192.0,154.0,191.0,147.0,76.0)));
		bh.consume(collection.contains(163.0));
		bh.consume(collection.contains(55.0));
		collection.add(114.0);
		bh.consume(collection.set(184, 159.0));
		bh.consume(collection.remove(84));
		bh.consume(collection.addAll(81, java.util.Arrays.asList(149.0,21.0,65.0,156.0,189.0,142.0)));
		bh.consume(collection.lastIndexOf(142.0));
		collection.add(96, 38.0);
		bh.consume(collection.lastIndexOf(152.0));
		bh.consume(collection.remove(126));
		bh.consume(collection.set(179, 33.0));
		bh.consume(collection.lastIndexOf(184.0));
		bh.consume(collection.indexOf(132.0));
		bh.consume(collection.contains(154.0));
		bh.consume(collection.set(14, 61.0));
		bh.consume(collection.set(52, 197.0));
		collection.add(190, 5.0);
		collection.remove(118.0);
		bh.consume(collection.lastIndexOf(86.0));
		bh.consume(collection.set(45, 103.0));
		bh.consume(collection.set(98, 7.0));
		bh.consume(collection.set(53, 5.0));
		collection.add(126.0);
		bh.consume(collection.remove(173));
		bh.consume(collection.set(68, 5.0));
		bh.consume(collection.lastIndexOf(67.0));
		bh.consume(collection.get(35));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(36.0,113.0,64.0)));
		collection.add(91.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(143.0,92.0,126.0,93.0,36.0,37.0,182.0,85.0,14.0)));
		collection.add(23.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(24.0,81.0,34.0)));
		bh.consume(collection.addAll(80, java.util.Arrays.asList(167.0,45.0,191.0,23.0)));
		bh.consume(collection.contains(136.0));
		bh.consume(collection.set(43, 63.0));
		collection.add(0, 139.0);
		bh.consume(collection.remove(142));
		collection.add(151, 173.0);
		collection.add(33, 56.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,98.0,171.0,131.0,13.0,43.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(59.0,107.0,158.0,143.0,75.0,25.0,184.0,78.0,28.0)));
		collection.add(54, 94.0);
		bh.consume(collection.set(116, 143.0));
		bh.consume(collection.set(147, 71.0));
		bh.consume(collection.set(20, 12.0));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(41.0,131.0,97.0,12.0)));
		collection.remove(27.0);
		collection.add(140, 159.0);
		bh.consume(collection.contains(148.0));
		collection.add(61, 165.0);
		bh.consume(collection.contains(177.0));
		bh.consume(collection.contains(157.0));
		bh.consume(collection.contains(46.0));
		bh.consume(collection.set(26, 57.0));
		collection.add(0, 184.0);
		collection.add(3.0);
		collection.add(99, 133.0);
		bh.consume(collection.get(95));
		collection.add(30.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(114.0,165.0,105.0,95.0,189.0,144.0,112.0,10.0)));
		bh.consume(collection.lastIndexOf(195.0));
		bh.consume(collection.lastIndexOf(82.0));
		bh.consume(collection.addAll(172, java.util.Arrays.asList(174.0,87.0,88.0,112.0,47.0,57.0,20.0)));
		collection.remove(187.0);
		bh.consume(collection.get(44));
		collection.remove(171.0);
		collection.add(114.0);
		collection.add(0, 110.0);
		collection.add(73, 192.0);
		collection.remove(148.0);
		collection.add(69, 20.0);
		collection.add(0, 199.0);
		collection.remove(77.0);
		bh.consume(collection.set(76, 122.0));
		bh.consume(collection.lastIndexOf(98.0));
		bh.consume(collection.addAll(9, java.util.Arrays.asList(188.0,191.0,196.0,86.0)));
		bh.consume(collection.set(132, 162.0));
		collection.add(9, 116.0);
		collection.add(146, 99.0);
		bh.consume(collection.set(13, 179.0));
		bh.consume(collection.lastIndexOf(58.0));
		collection.add(0, 187.0);
		bh.consume(collection.lastIndexOf(7.0));
		bh.consume(collection.lastIndexOf(16.0));
		bh.consume(collection.lastIndexOf(83.0));
		bh.consume(collection.get(94));
		bh.consume(collection.set(190, 28.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(186.0,54.0,125.0,53.0,44.0)));
		bh.consume(collection.contains(157.0));
		bh.consume(collection.set(174, 82.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,101.0,117.0,90.0)));
		bh.consume(collection.set(104, 94.0));
		collection.add(0, 133.0);
		collection.add(12.0);
		bh.consume(collection.contains(197.0));
		bh.consume(collection.remove(25));
		collection.add(104.0);
		collection.remove(86.0);
		collection.add(0, 107.0);
		collection.remove(164.0);
		collection.add(54, 102.0);
		bh.consume(collection.set(159, 160.0));
		bh.consume(collection.lastIndexOf(69.0));
		bh.consume(collection.set(19, 175.0));
		bh.consume(collection.set(140, 83.0));
		collection.add(43.0);
		bh.consume(collection.remove(164));
		bh.consume(collection.addAll(java.util.Arrays.asList(69.0,100.0,57.0)));
		bh.consume(collection.set(3, 6.0));
		collection.remove(141.0);
		collection.add(135.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,82.0,172.0,35.0,81.0,36.0,96.0,86.0,99.0)));
		bh.consume(collection.lastIndexOf(140.0));
		bh.consume(collection.lastIndexOf(166.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(165.0,75.0,200.0,123.0,108.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(188.0,11.0,42.0,179.0,43.0,136.0,76.0,39.0)));
		collection.add(130, 102.0);
		collection.remove(175.0);
		collection.add(9, 158.0);
		bh.consume(collection.addAll(194, java.util.Arrays.asList(34.0,105.0,17.0)));
		collection.add(79, 82.0);
		bh.consume(collection.set(77, 72.0));
		bh.consume(collection.addAll(186, java.util.Arrays.asList(148.0,57.0,57.0,148.0,197.0,64.0)));
		collection.add(37.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(11.0,37.0,101.0,29.0,66.0,95.0,166.0,98.0)));
		collection.add(77.0);
		collection.add(0, 147.0);
		bh.consume(collection.addAll(194, java.util.Arrays.asList(147.0,8.0,188.0,82.0,105.0,125.0,76.0,117.0)));
		bh.consume(collection.set(40, 178.0));
		bh.consume(collection.lastIndexOf(194.0));
		collection.add(104, 7.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(189.0,184.0,107.0,113.0,148.0,71.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(119.0,9.0,15.0,24.0,82.0,146.0,72.0,20.0,121.0)));
		bh.consume(collection.set(142, 135.0));
		bh.consume(collection.remove(188));
		collection.add(133.0);
		collection.add(0, 142.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(2.0,147.0,14.0,93.0,149.0)));
		bh.consume(collection.remove(171));
		bh.consume(collection.set(167, 24.0));
		bh.consume(collection.set(175, 75.0));
		collection.add(155, 143.0);
		bh.consume(collection.set(156, 96.0));
		bh.consume(collection.contains(160.0));
		bh.consume(collection.lastIndexOf(111.0));
		bh.consume(collection.remove(119));
		bh.consume(collection.addAll(165, java.util.Arrays.asList(195.0,33.0,117.0,115.0,77.0,5.0,81.0)));
		bh.consume(collection.set(102, 3.0));
		bh.consume(collection.set(97, 104.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(133.0,6.0,156.0,107.0,174.0,58.0,195.0)));
		collection.add(0, 62.0);
		collection.add(119, 56.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(173.0,136.0,180.0,70.0,154.0,2.0,74.0)));
		collection.add(105, 191.0);
		bh.consume(collection.contains(152.0));
		collection.add(112.0);
		collection.remove(195.0);
		collection.remove(188.0);
		collection.add(199, 7.0);
		bh.consume(collection.addAll(133, java.util.Arrays.asList(26.0,85.0,8.0,6.0,163.0,45.0,193.0)));
		bh.consume(collection.addAll(139, java.util.Arrays.asList(43.0,108.0,128.0,36.0,53.0,16.0,171.0,24.0,153.0)));
		bh.consume(collection.addAll(172, java.util.Arrays.asList(189.0,177.0,125.0,181.0)));
		bh.consume(collection.set(83, 63.0));
		bh.consume(collection.addAll(76, java.util.Arrays.asList(176.0,189.0,79.0,74.0,86.0,115.0,49.0,173.0)));
		bh.consume(collection.lastIndexOf(80.0));
		bh.consume(collection.contains(200.0));
		bh.consume(collection.set(74, 120.0));
		bh.consume(collection.lastIndexOf(129.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(110.0,30.0,36.0,123.0,8.0)));
		bh.consume(collection.contains(88.0));
	}
}
