package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile4AllSequences_JArraySequence_20220501132111728 {
	java.util.ArrayList<Double> collection = new java.util.ArrayList<>();
	@Setup(Level.Invocation)
	public void setupJArraySequence() {
		collection = new java.util.ArrayList<>();
		collection.add(196.0);
		collection.add(73.0);
		collection.add(132.0);
		collection.add(78.0);
		collection.add(119.0);
		collection.add(20.0);
		collection.add(68.0);
		collection.add(116.0);
		collection.add(23.0);
		collection.add(52.0);
		collection.add(194.0);
		collection.add(88.0);
		collection.add(104.0);
		collection.add(61.0);
		collection.add(154.0);
		collection.add(144.0);
		collection.add(35.0);
		collection.add(55.0);
		collection.add(146.0);
		collection.add(131.0);
		collection.add(57.0);
		collection.add(169.0);
		collection.add(40.0);
		collection.add(130.0);
		collection.add(20.0);
		collection.add(108.0);
		collection.add(96.0);
		collection.add(188.0);
		collection.add(81.0);
		collection.add(155.0);
		collection.add(172.0);
		collection.add(181.0);
		collection.add(154.0);
		collection.add(19.0);
		collection.add(155.0);
		collection.add(184.0);
		collection.add(32.0);
		collection.add(162.0);
		collection.add(105.0);
		collection.add(51.0);
		collection.add(191.0);
		collection.add(148.0);
		collection.add(128.0);
		collection.add(160.0);
		collection.add(12.0);
		collection.add(91.0);
		collection.add(193.0);
		collection.add(140.0);
		collection.add(23.0);
		collection.add(39.0);
		collection.add(127.0);
		collection.add(54.0);
		collection.add(124.0);
		collection.add(1.0);
		collection.add(115.0);
		collection.add(187.0);
		collection.add(78.0);
		collection.add(196.0);
		collection.add(194.0);
		collection.add(3.0);
		collection.add(40.0);
		collection.add(174.0);
		collection.add(134.0);
		collection.add(158.0);
		collection.add(2.0);
		collection.add(90.0);
		collection.add(138.0);
		collection.add(72.0);
		collection.add(112.0);
		collection.add(90.0);
		collection.add(40.0);
		collection.add(10.0);
		collection.add(161.0);
		collection.add(146.0);
		collection.add(88.0);
		collection.add(50.0);
		collection.add(144.0);
		collection.add(81.0);
		collection.add(71.0);
		collection.add(67.0);
		collection.add(106.0);
		collection.add(13.0);
		collection.add(19.0);
		collection.add(76.0);
		collection.add(117.0);
		collection.add(141.0);
		collection.add(107.0);
		collection.add(123.0);
		collection.add(187.0);
		collection.add(80.0);
		collection.add(59.0);
		collection.add(83.0);
		collection.add(111.0);
		collection.add(64.0);
		collection.add(196.0);
		collection.add(20.0);
		collection.add(142.0);
		collection.add(73.0);
		collection.add(55.0);
		collection.add(7.0);
		collection.add(34.0);
		collection.add(35.0);
		collection.add(37.0);
		collection.add(62.0);
		collection.add(112.0);
		collection.add(183.0);
		collection.add(100.0);
		collection.add(36.0);
		collection.add(189.0);
		collection.add(99.0);
		collection.add(61.0);
		collection.add(82.0);
		collection.add(198.0);
		collection.add(100.0);
		collection.add(41.0);
		collection.add(116.0);
		collection.add(162.0);
		collection.add(153.0);
		collection.add(93.0);
		collection.add(20.0);
		collection.add(97.0);
		collection.add(5.0);
		collection.add(115.0);
		collection.add(63.0);
		collection.add(127.0);
		collection.add(147.0);
		collection.add(198.0);
		collection.add(76.0);
		collection.add(160.0);
		collection.add(91.0);
		collection.add(90.0);
		collection.add(194.0);
		collection.add(47.0);
		collection.add(182.0);
		collection.add(22.0);
		collection.add(112.0);
		collection.add(120.0);
		collection.add(30.0);
		collection.add(176.0);
		collection.add(190.0);
		collection.add(100.0);
		collection.add(115.0);
		collection.add(110.0);
		collection.add(108.0);
		collection.add(7.0);
		collection.add(181.0);
		collection.add(149.0);
		collection.add(18.0);
		collection.add(193.0);
		collection.add(41.0);
		collection.add(126.0);
		collection.add(153.0);
		collection.add(61.0);
		collection.add(67.0);
		collection.add(94.0);
		collection.add(143.0);
		collection.add(92.0);
		collection.add(112.0);
		collection.add(184.0);
		collection.add(98.0);
		collection.add(136.0);
		collection.add(60.0);
		collection.add(124.0);
		collection.add(10.0);
		collection.add(175.0);
		collection.add(134.0);
		collection.add(65.0);
		collection.add(78.0);
		collection.add(66.0);
		collection.add(37.0);
		collection.add(95.0);
		collection.add(98.0);
		collection.add(124.0);
		collection.add(133.0);
		collection.add(198.0);
		collection.add(142.0);
		collection.add(120.0);
		collection.add(33.0);
		collection.add(42.0);
		collection.add(101.0);
		collection.add(55.0);
		collection.add(163.0);
		collection.add(151.0);
		collection.add(9.0);
		collection.add(162.0);
		collection.add(85.0);
		collection.add(59.0);
		collection.add(2.0);
		collection.add(165.0);
		collection.add(17.0);
		collection.add(12.0);
		collection.add(177.0);
		collection.add(17.0);
		collection.add(155.0);
		collection.add(197.0);
		collection.add(106.0);
		collection.add(40.0);
		collection.add(155.0);
		collection.add(108.0);
		collection.add(179.0);
		collection.add(10.0);
		collection.add(157.0);
		collection.add(195.0);
		collection.add(175.0);
		collection.add(62.0);
		collection.add(18.0);
		collection.add(83.0);
		collection.add(43.0);
		collection.add(41.0);
		collection.add(74.0);
		collection.add(104.0);
		collection.add(39.0);
		collection.add(144.0);
		collection.add(9.0);
		collection.add(178.0);
		collection.add(67.0);
		collection.add(115.0);
		collection.add(80.0);
		collection.add(96.0);
		collection.add(119.0);
		collection.add(119.0);
		collection.add(176.0);
		collection.add(38.0);
		collection.add(11.0);
		collection.add(62.0);
		collection.add(162.0);
		collection.add(129.0);
		collection.add(116.0);
		collection.add(10.0);
		collection.add(159.0);
		collection.add(158.0);
		collection.add(84.0);
		collection.add(126.0);
		collection.add(45.0);
		collection.add(113.0);
		collection.add(139.0);
		collection.add(173.0);
		collection.add(176.0);
		collection.add(161.0);
		collection.add(26.0);
		collection.add(43.0);
		collection.add(92.0);
		collection.add(75.0);
		collection.add(100.0);
		collection.add(127.0);
		collection.add(158.0);
		collection.add(189.0);
		collection.add(118.0);
		collection.add(187.0);
		collection.add(24.0);
		collection.add(127.0);
		collection.add(33.0);
		collection.add(148.0);
		collection.add(172.0);
		collection.add(170.0);
		collection.add(16.0);
		collection.add(125.0);
		collection.add(190.0);
		collection.add(134.0);
		collection.add(73.0);
		collection.add(191.0);
		collection.add(135.0);
		collection.add(115.0);
		collection.add(1.0);
		collection.add(142.0);
		collection.add(73.0);
		collection.add(139.0);
		collection.add(121.0);
		collection.add(136.0);
		collection.add(56.0);
		collection.add(170.0);
		collection.add(83.0);
		collection.add(114.0);
		collection.add(42.0);
		collection.add(5.0);
		collection.add(159.0);
		collection.add(116.0);
		collection.add(110.0);
		collection.add(88.0);
		collection.add(168.0);
		collection.add(5.0);
		collection.add(136.0);
		collection.add(128.0);
		collection.add(96.0);
		collection.add(95.0);
		collection.add(81.0);
		collection.add(84.0);
		collection.add(20.0);
		collection.add(13.0);
		collection.add(158.0);
		collection.add(125.0);
		collection.add(85.0);
		collection.add(103.0);
		collection.add(156.0);
		collection.add(36.0);
		collection.add(58.0);
		collection.add(46.0);
		collection.add(57.0);
		collection.add(1.0);
		collection.add(32.0);
		collection.add(196.0);
		collection.add(62.0);
		collection.add(60.0);
		collection.add(98.0);
		collection.add(19.0);
		collection.add(133.0);
		collection.add(98.0);
		collection.add(161.0);
		collection.add(3.0);
		collection.add(151.0);
		collection.add(182.0);
		collection.add(154.0);
		collection.add(75.0);
		collection.add(158.0);
		collection.add(46.0);
		collection.add(64.0);
		collection.add(106.0);
		collection.add(161.0);
		collection.add(98.0);
		collection.add(17.0);
		collection.add(1.0);
		collection.add(109.0);
		collection.add(160.0);
		collection.add(59.0);
		collection.add(67.0);
		collection.add(182.0);
		collection.add(137.0);
		collection.add(38.0);
		collection.add(48.0);
		collection.add(90.0);
		collection.add(93.0);
		collection.add(11.0);
		collection.add(195.0);
		collection.add(138.0);
		collection.add(14.0);
		collection.add(150.0);
		collection.add(169.0);
		collection.add(200.0);
		collection.add(83.0);
		collection.add(188.0);
		collection.add(49.0);
		collection.add(151.0);
		collection.add(59.0);
		collection.add(157.0);
		collection.add(91.0);
		collection.add(137.0);
		collection.add(155.0);
		collection.add(130.0);
		collection.add(153.0);
		collection.add(83.0);
		collection.add(199.0);
		collection.add(25.0);
		collection.add(151.0);
		collection.add(118.0);
		collection.add(116.0);
		collection.add(34.0);
		collection.add(103.0);
		collection.add(156.0);
		collection.add(184.0);
		collection.add(91.0);
		collection.add(113.0);
		collection.add(28.0);
		collection.add(6.0);
		collection.add(27.0);
		collection.add(83.0);
		collection.add(37.0);
		collection.add(164.0);
		collection.add(151.0);
		collection.add(29.0);
		collection.add(141.0);
		collection.add(129.0);
		collection.add(12.0);
		collection.add(147.0);
		collection.add(172.0);
		collection.add(4.0);
		collection.add(77.0);
		collection.add(199.0);
		collection.add(51.0);
		collection.add(187.0);
		collection.add(48.0);
		collection.add(95.0);
		collection.add(37.0);
		collection.add(2.0);
		collection.add(2.0);
		collection.add(104.0);
		collection.add(103.0);
		collection.add(158.0);
		collection.add(167.0);
		collection.add(152.0);
		collection.add(58.0);
		collection.add(50.0);
		collection.add(81.0);
		collection.add(132.0);
		collection.add(149.0);
		collection.add(71.0);
		collection.add(194.0);
		collection.add(99.0);
		collection.add(5.0);
		collection.add(55.0);
		collection.add(98.0);
		collection.add(102.0);
		collection.add(122.0);
		collection.add(170.0);
		collection.add(174.0);
		collection.add(26.0);
		collection.add(10.0);
		collection.add(128.0);
		collection.add(31.0);
		collection.add(26.0);
		collection.add(192.0);
		collection.add(37.0);
		collection.add(85.0);
		collection.add(157.0);
		collection.add(91.0);
		collection.add(1.0);
		collection.add(26.0);
		collection.add(36.0);
		collection.add(147.0);
		collection.add(45.0);
		collection.add(67.0);
		collection.add(79.0);
		collection.add(166.0);
		collection.add(191.0);
		collection.add(15.0);
		collection.add(151.0);
		collection.add(152.0);
		collection.add(12.0);
		collection.add(182.0);
		collection.add(75.0);
		collection.add(165.0);
		collection.add(123.0);
		collection.add(111.0);
		collection.add(177.0);
		collection.add(170.0);
		collection.add(78.0);
		collection.add(125.0);
		collection.add(112.0);
		collection.add(184.0);
		collection.add(115.0);
		collection.add(48.0);
		collection.add(145.0);
		collection.add(166.0);
		collection.add(79.0);
		collection.add(69.0);
		collection.add(48.0);
		collection.add(168.0);
		collection.add(10.0);
		collection.add(31.0);
		collection.add(14.0);
		collection.add(174.0);
		collection.add(65.0);
		collection.add(69.0);
		collection.add(152.0);
		collection.add(166.0);
		collection.add(34.0);
		collection.add(106.0);
		collection.add(73.0);
		collection.add(76.0);
		collection.add(157.0);
		collection.add(91.0);
		collection.add(2.0);
		collection.add(26.0);
		collection.add(131.0);
		collection.add(6.0);
		collection.add(25.0);
		collection.add(158.0);
		collection.add(163.0);
		collection.add(192.0);
		collection.add(148.0);
		collection.add(87.0);
		collection.add(94.0);
		collection.add(95.0);
		collection.add(108.0);
		collection.add(180.0);
		collection.add(76.0);
		collection.add(44.0);
		collection.add(166.0);
		collection.add(119.0);
		collection.add(47.0);
		collection.add(175.0);
		collection.add(19.0);
		collection.add(22.0);
		collection.add(26.0);
		collection.add(68.0);
		collection.add(18.0);
		collection.add(175.0);
		collection.add(22.0);
		collection.add(74.0);
		collection.add(200.0);
		collection.add(44.0);
		collection.add(100.0);
		collection.add(24.0);
		collection.add(29.0);
		collection.add(60.0);
		collection.add(156.0);
		collection.add(159.0);
		collection.add(156.0);
		collection.add(50.0);
		collection.add(148.0);
		collection.add(11.0);
		collection.add(198.0);
		collection.add(167.0);
		collection.add(171.0);
		collection.add(185.0);
		collection.add(47.0);
		collection.add(124.0);
		collection.add(63.0);
		collection.add(74.0);
		collection.add(183.0);
		collection.add(164.0);
		collection.add(175.0);
		collection.add(200.0);
		collection.add(29.0);
		collection.add(182.0);
		collection.add(84.0);
		collection.add(123.0);
		collection.add(58.0);
		collection.add(98.0);
		collection.add(200.0);
		collection.add(64.0);
		collection.add(47.0);
		collection.add(78.0);
		collection.add(191.0);
		collection.add(92.0);
		collection.add(7.0);
		collection.add(50.0);
		collection.add(48.0);
		collection.add(145.0);
		collection.add(72.0);
		collection.add(87.0);
		collection.add(48.0);
		collection.add(196.0);
		collection.add(147.0);
		collection.add(32.0);
		collection.add(120.0);
		collection.add(132.0);
		collection.add(122.0);
		collection.add(83.0);
		collection.add(31.0);
		collection.add(81.0);
		collection.add(115.0);
		collection.add(39.0);
		collection.add(127.0);
		collection.add(54.0);
		collection.add(135.0);
		collection.add(175.0);
		collection.add(6.0);
		collection.add(172.0);
		collection.add(187.0);
		collection.add(123.0);
		collection.add(120.0);
		collection.add(171.0);
		collection.add(124.0);
		collection.add(153.0);
		collection.add(141.0);
		collection.add(79.0);
		collection.add(136.0);
		collection.add(190.0);
		collection.add(14.0);
		collection.add(47.0);
		collection.add(198.0);
		collection.add(59.0);
		collection.add(67.0);
		collection.add(72.0);
		collection.add(48.0);
		collection.add(107.0);
		collection.add(138.0);
		collection.add(98.0);
		collection.add(61.0);
		collection.add(115.0);
		collection.add(38.0);
		collection.add(25.0);
		collection.add(123.0);
		collection.add(137.0);
		collection.add(81.0);
		collection.add(112.0);
		collection.add(18.0);
		collection.add(163.0);
		collection.add(62.0);
		collection.add(56.0);
		collection.add(158.0);
		collection.add(165.0);
		collection.add(34.0);
		collection.add(28.0);
		collection.add(199.0);
		collection.add(22.0);
		collection.add(36.0);
		collection.add(199.0);
		collection.add(107.0);
		collection.add(183.0);
		collection.add(2.0);
		collection.add(162.0);
		collection.add(180.0);
		collection.add(76.0);
		collection.add(57.0);
		collection.add(87.0);
		collection.add(187.0);
		collection.add(116.0);
		collection.add(69.0);
		collection.add(91.0);
		collection.add(175.0);
		collection.add(152.0);
		collection.add(25.0);
		collection.add(110.0);
		collection.add(95.0);
		collection.add(78.0);
		collection.add(191.0);
		collection.add(146.0);
		collection.add(112.0);
		collection.add(105.0);
		collection.add(112.0);
		collection.add(188.0);
		collection.add(126.0);
		collection.add(135.0);
		collection.add(12.0);
		collection.add(191.0);
		collection.add(142.0);
		collection.add(142.0);
		collection.add(90.0);
		collection.add(160.0);
		collection.add(9.0);
		collection.add(194.0);
		collection.add(136.0);
		collection.add(178.0);
		collection.add(118.0);
		collection.add(179.0);
		collection.add(14.0);
		collection.add(136.0);
		collection.add(172.0);
		collection.add(75.0);
		collection.add(154.0);
		collection.add(86.0);
		collection.add(54.0);
		collection.add(115.0);
		collection.add(160.0);
		collection.add(70.0);
		collection.add(197.0);
		collection.add(72.0);
		collection.add(79.0);
		collection.add(11.0);
		collection.add(118.0);
		collection.add(138.0);
		collection.add(92.0);
		collection.add(136.0);
		collection.add(101.0);
		collection.add(91.0);
		collection.add(11.0);
		collection.add(39.0);
		collection.add(131.0);
		collection.add(49.0);
		collection.add(188.0);
		collection.add(149.0);
		collection.add(173.0);
		collection.add(147.0);
		collection.add(131.0);
		collection.add(125.0);
		collection.add(19.0);
		collection.add(147.0);
		collection.add(84.0);
		collection.add(6.0);
		collection.add(165.0);
		collection.add(92.0);
		collection.add(58.0);
		collection.add(17.0);
		collection.add(176.0);
		collection.add(74.0);
		collection.add(1.0);
		collection.add(96.0);
		collection.add(60.0);
		collection.add(163.0);
		collection.add(130.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(193.0);
		collection.add(172.0);
		collection.add(23.0);
		collection.add(69.0);
		collection.add(20.0);
		collection.add(181.0);
		collection.add(59.0);
		collection.add(80.0);
		collection.add(186.0);
		collection.add(6.0);
		collection.add(140.0);
		collection.add(148.0);
		collection.add(1.0);
		collection.add(48.0);
		collection.add(30.0);
		collection.add(141.0);
		collection.add(96.0);
		collection.add(161.0);
		collection.add(185.0);
		collection.add(67.0);
		collection.add(58.0);
		collection.add(181.0);
		collection.add(118.0);
		collection.add(33.0);
		collection.add(31.0);
		collection.add(91.0);
		collection.add(191.0);
		collection.add(99.0);
		collection.add(72.0);
		collection.add(157.0);
		collection.add(65.0);
		collection.add(66.0);
		collection.add(98.0);
		collection.add(130.0);
		collection.add(147.0);
		collection.add(184.0);
		collection.add(72.0);
		collection.add(134.0);
		collection.add(176.0);
		collection.add(126.0);
		collection.add(200.0);
		collection.add(148.0);
		collection.add(43.0);
		collection.add(197.0);
		collection.add(42.0);
		collection.add(113.0);
		collection.add(152.0);
		collection.add(68.0);
		collection.add(68.0);
		collection.add(83.0);
		collection.add(71.0);
		collection.add(112.0);
		collection.add(60.0);
		collection.add(71.0);
		collection.add(127.0);
		collection.add(32.0);
		collection.add(179.0);
		collection.add(154.0);
		collection.add(6.0);
		collection.add(6.0);
		collection.add(186.0);
		collection.add(199.0);
		collection.add(56.0);
		collection.add(168.0);
		collection.add(120.0);
		collection.add(124.0);
		collection.add(31.0);
		collection.add(25.0);
		collection.add(118.0);
		collection.add(189.0);
		collection.add(79.0);
		collection.add(128.0);
		collection.add(12.0);
		collection.add(87.0);
		collection.add(22.0);
		collection.add(82.0);
		collection.add(186.0);
		collection.add(27.0);
		collection.add(149.0);
		collection.add(38.0);
		collection.add(43.0);
		collection.add(117.0);
		collection.add(34.0);
		collection.add(42.0);
		collection.add(87.0);
		collection.add(75.0);
		collection.add(52.0);
		collection.add(107.0);
		collection.add(97.0);
		collection.add(123.0);
		collection.add(49.0);
		collection.add(88.0);
		collection.add(165.0);
		collection.add(27.0);
		collection.add(163.0);
		collection.add(151.0);
		collection.add(115.0);
		collection.add(98.0);
		collection.add(191.0);
		collection.add(131.0);
		collection.add(177.0);
		collection.add(167.0);
		collection.add(166.0);
		collection.add(104.0);
		collection.add(139.0);
		collection.add(101.0);
		collection.add(52.0);
		collection.add(55.0);
		collection.add(29.0);
		collection.add(126.0);
		collection.add(47.0);
		collection.add(26.0);
		collection.add(18.0);
		collection.add(59.0);
		collection.add(116.0);
		collection.add(122.0);
		collection.add(62.0);
		collection.add(24.0);
		collection.add(125.0);
		collection.add(182.0);
		collection.add(61.0);
		collection.add(71.0);
		collection.add(109.0);
		collection.add(60.0);
		collection.add(63.0);
		collection.add(118.0);
		collection.add(52.0);
		collection.add(156.0);
		collection.add(151.0);
		collection.add(138.0);
		collection.add(92.0);
		collection.add(104.0);
		collection.add(153.0);
		collection.add(79.0);
		collection.add(20.0);
		collection.add(5.0);
		collection.add(23.0);
		collection.add(115.0);
		collection.add(75.0);
		collection.add(98.0);
		collection.add(48.0);
		collection.add(15.0);
		collection.add(147.0);
		collection.add(110.0);
		collection.add(182.0);
		collection.add(130.0);
		collection.add(124.0);
		collection.add(165.0);
		collection.add(98.0);
		collection.add(174.0);
		collection.add(21.0);
		collection.add(176.0);
		collection.add(144.0);
		collection.add(182.0);
		collection.add(136.0);
		collection.add(174.0);
		collection.add(18.0);
		collection.add(22.0);
		collection.add(185.0);
		collection.add(149.0);
		collection.add(23.0);
		collection.add(36.0);
		collection.add(140.0);
		collection.add(40.0);
		collection.add(94.0);
		collection.add(182.0);
		collection.add(167.0);
		collection.add(118.0);
		collection.add(127.0);
		collection.add(101.0);
		collection.add(149.0);
		collection.add(66.0);
		collection.add(102.0);
		collection.add(149.0);
		collection.add(87.0);
		collection.add(63.0);
		collection.add(157.0);
		collection.add(85.0);
		collection.add(71.0);
		collection.add(80.0);
		collection.add(90.0);
		collection.add(46.0);
		collection.add(6.0);
		collection.add(96.0);
		collection.add(141.0);
		collection.add(103.0);
		collection.add(194.0);
		collection.add(27.0);
		collection.add(149.0);
		collection.add(66.0);
		collection.add(5.0);
		collection.add(10.0);
		collection.add(170.0);
		collection.add(36.0);
		collection.add(106.0);
		collection.add(114.0);
		collection.add(21.0);
		collection.add(185.0);
		collection.add(63.0);
		collection.add(54.0);
		collection.add(50.0);
		collection.add(168.0);
		collection.add(64.0);
		collection.add(154.0);
		collection.add(126.0);
		collection.add(54.0);
		collection.add(132.0);
		collection.add(98.0);
		collection.add(50.0);
		collection.add(83.0);
		collection.add(31.0);
		collection.add(93.0);
		collection.add(8.0);
		collection.add(147.0);
		collection.add(11.0);
		collection.add(53.0);
		collection.add(111.0);
		collection.add(140.0);
		collection.add(127.0);
		collection.add(166.0);
		collection.add(92.0);
		collection.add(157.0);
		collection.add(179.0);
		collection.add(91.0);
		collection.add(48.0);
		collection.add(156.0);
		collection.add(142.0);
		collection.add(186.0);
		collection.add(64.0);
		collection.add(98.0);
		collection.add(161.0);
		collection.add(91.0);
		collection.add(74.0);
		collection.add(111.0);
		collection.add(15.0);
		collection.add(47.0);
		collection.add(44.0);
		collection.add(184.0);
		collection.add(53.0);
		collection.add(161.0);
		collection.add(181.0);
		collection.add(189.0);
		collection.add(132.0);
		collection.add(50.0);
		collection.add(148.0);
		collection.add(74.0);
		collection.add(188.0);
		collection.add(195.0);
		collection.add(71.0);
		collection.add(78.0);
		collection.add(77.0);
		collection.add(73.0);
		collection.add(69.0);
		collection.add(154.0);
		collection.add(139.0);
		collection.add(80.0);
		collection.add(194.0);
		collection.add(8.0);
		collection.add(57.0);
		collection.add(176.0);
		collection.add(69.0);
		collection.add(130.0);
		collection.add(40.0);
		collection.add(1.0);
		collection.add(197.0);
		collection.add(158.0);
		collection.add(128.0);
		collection.add(87.0);
		collection.add(198.0);
		collection.add(73.0);
		collection.add(57.0);
		collection.add(120.0);
		collection.add(146.0);
		collection.add(110.0);
		collection.add(124.0);
		collection.add(123.0);
		collection.add(196.0);
		collection.add(128.0);
		collection.add(23.0);
		collection.add(135.0);
		collection.add(91.0);
		collection.add(173.0);
		collection.add(78.0);
		collection.add(17.0);
		collection.add(177.0);
		collection.add(110.0);
		collection.add(84.0);
		collection.add(9.0);
		collection.add(12.0);
		collection.add(114.0);
		collection.add(90.0);
		collection.add(166.0);
		collection.add(110.0);
		collection.add(20.0);
		collection.add(111.0);
		collection.add(134.0);
		collection.add(160.0);
		collection.add(20.0);
		collection.add(122.0);
		collection.add(5.0);
		collection.add(53.0);
		collection.add(155.0);
		collection.add(174.0);
		collection.add(23.0);
		collection.add(31.0);
		collection.add(8.0);
		collection.add(143.0);
		collection.add(160.0);
		collection.add(122.0);
		collection.add(55.0);
		collection.add(112.0);
		collection.add(55.0);
		collection.add(57.0);
		collection.add(82.0);
		collection.add(170.0);
		collection.add(15.0);
		collection.add(97.0);
		collection.add(108.0);
		collection.add(191.0);
		collection.add(151.0);
		collection.add(40.0);
		collection.add(62.0);
		collection.add(11.0);
		collection.add(178.0);
		collection.add(158.0);
		collection.add(163.0);
		collection.add(106.0);
		collection.add(30.0);
		collection.add(156.0);
		collection.add(131.0);
		collection.add(128.0);
		collection.add(171.0);
		collection.add(158.0);
		collection.add(97.0);
		collection.add(171.0);
		collection.add(55.0);
		collection.add(27.0);
		collection.add(30.0);
		collection.add(125.0);
		collection.add(65.0);
		collection.add(88.0);
		collection.add(66.0);
		collection.add(141.0);
		collection.add(113.0);
		collection.add(114.0);
		collection.add(101.0);
		collection.add(86.0);
		collection.add(100.0);
		collection.add(75.0);
		collection.add(192.0);
		collection.add(181.0);
		collection.add(13.0);
		collection.add(188.0);
		collection.add(120.0);
		collection.add(64.0);
		collection.add(78.0);
		collection.add(7.0);
		collection.add(86.0);
		collection.add(32.0);
		collection.add(53.0);
		collection.add(163.0);
		collection.add(146.0);
		collection.add(84.0);
		collection.add(56.0);
		collection.add(156.0);
		collection.add(110.0);
		collection.add(177.0);
		collection.add(190.0);
		collection.add(181.0);
		collection.add(131.0);
		collection.add(9.0);
		collection.add(124.0);
		collection.add(184.0);
		collection.add(24.0);
		collection.add(4.0);
		collection.add(130.0);
		collection.add(56.0);
		collection.add(11.0);
		collection.add(156.0);
		collection.add(199.0);
		collection.add(165.0);
		collection.add(100.0);
		collection.add(94.0);
		collection.add(99.0);
		collection.add(81.0);
		collection.add(172.0);
		collection.add(5.0);
		collection.add(162.0);
		collection.add(151.0);
		collection.add(171.0);
		collection.add(124.0);
		collection.add(15.0);
		collection.add(73.0);
		collection.add(45.0);
		collection.add(149.0);
		collection.add(160.0);
		collection.add(5.0);
		collection.add(59.0);
		collection.add(137.0);
		collection.add(68.0);
		collection.add(192.0);
		collection.add(21.0);
		collection.add(42.0);
		collection.add(196.0);
		collection.add(15.0);
		collection.add(131.0);
		collection.add(176.0);
		collection.add(175.0);
		collection.add(64.0);
		collection.add(77.0);
		collection.add(136.0);
		collection.add(80.0);
		collection.add(1.0);
		collection.add(114.0);
		collection.add(101.0);
		collection.add(26.0);
		collection.add(156.0);
		collection.add(97.0);
		collection.add(86.0);
		collection.add(30.0);
		collection.add(189.0);
		collection.add(68.0);
		collection.add(16.0);
		collection.add(191.0);
		collection.add(68.0);
		collection.add(171.0);
		collection.add(180.0);
		collection.add(70.0);
		collection.add(3.0);
		collection.add(187.0);
		collection.add(98.0);
		collection.add(174.0);
		collection.add(36.0);
		collection.add(178.0);
		collection.add(72.0);
		collection.add(189.0);
		collection.add(67.0);
		collection.add(63.0);
		collection.add(189.0);
		collection.add(90.0);
		collection.add(144.0);
		collection.add(116.0);
		collection.add(34.0);
		collection.add(163.0);
		collection.add(53.0);
		collection.add(9.0);
		collection.add(6.0);
		collection.add(140.0);
		collection.add(108.0);
		collection.add(197.0);
		collection.add(31.0);
		collection.add(100.0);
		collection.add(150.0);
		collection.add(119.0);
		collection.add(197.0);
		collection.add(17.0);
		collection.add(97.0);
		collection.add(68.0);
		collection.add(155.0);
		collection.add(103.0);
		collection.add(59.0);
		collection.add(45.0);
		collection.add(8.0);
		collection.add(50.0);
		collection.add(51.0);
		collection.add(157.0);
		collection.add(87.0);
		collection.add(116.0);
		collection.add(81.0);
		collection.add(59.0);
		collection.add(161.0);
		collection.add(27.0);
		collection.add(58.0);
		collection.add(23.0);
		collection.add(147.0);
		collection.add(67.0);
		collection.add(33.0);
		collection.add(188.0);
		collection.add(116.0);
		collection.add(177.0);
		collection.add(40.0);
		collection.add(180.0);
		collection.add(191.0);
		collection.add(55.0);
		collection.add(109.0);
		collection.add(20.0);
		collection.add(82.0);
		collection.add(198.0);
		collection.add(186.0);
		collection.add(95.0);
		collection.add(149.0);
		collection.add(178.0);
		collection.add(95.0);
		collection.add(107.0);
		collection.add(63.0);
		collection.add(114.0);
		collection.add(106.0);
		collection.add(161.0);
		collection.add(108.0);
		collection.add(48.0);
		collection.add(164.0);
		collection.add(126.0);
		collection.add(179.0);
		collection.add(143.0);
		collection.add(87.0);
		collection.add(169.0);
		collection.add(116.0);
		collection.add(189.0);
		collection.add(159.0);
		collection.add(116.0);
		collection.add(28.0);
		collection.add(74.0);
		collection.add(132.0);
		collection.add(74.0);
		collection.add(121.0);
		collection.add(130.0);
		collection.add(61.0);
		collection.add(71.0);
		collection.add(190.0);
		collection.add(161.0);
		collection.add(161.0);
		collection.add(174.0);
		collection.add(196.0);
		collection.add(181.0);
		collection.add(180.0);
		collection.add(110.0);
		collection.add(55.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JArraySequence(Blackhole bh) {
		bh.consume(collection.contains(125.0));
		collection.add(191.0);
		bh.consume(collection.set(70, 32.0));
		bh.consume(collection.get(185));
		bh.consume(collection.addAll(java.util.Arrays.asList(101.0,30.0,166.0,23.0)));
		bh.consume(collection.indexOf(26.0));
		collection.add(10.0);
		bh.consume(collection.remove(156));
		bh.consume(collection.set(66, 64.0));
		collection.add(49, 122.0);
		bh.consume(collection.indexOf(36.0));
		bh.consume(collection.indexOf(77.0));
		bh.consume(collection.get(194));
		bh.consume(collection.contains(153.0));
		bh.consume(collection.indexOf(69.0));
		collection.add(0, 36.0);
		bh.consume(collection.addAll(125, java.util.Arrays.asList(124.0,19.0,117.0,158.0,104.0,151.0,41.0,40.0)));
		bh.consume(collection.remove(185));
		bh.consume(collection.get(111));
		bh.consume(collection.indexOf(59.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(3.0,125.0,183.0,12.0,5.0)));
		collection.add(144, 87.0);
		bh.consume(collection.set(170, 91.0));
		bh.consume(collection.contains(121.0));
		bh.consume(collection.contains(166.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(177.0,197.0,47.0)));
		bh.consume(collection.contains(91.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(189.0,180.0,41.0,153.0,145.0,80.0,36.0,24.0)));
		collection.remove(131.0);
		bh.consume(collection.set(36, 95.0));
		bh.consume(collection.set(11, 18.0));
		collection.add(99, 125.0);
		bh.consume(collection.contains(93.0));
		collection.add(147.0);
		bh.consume(collection.addAll(189, java.util.Arrays.asList(39.0,21.0,168.0,164.0,12.0,130.0,110.0,50.0)));
		bh.consume(collection.addAll(155, java.util.Arrays.asList(168.0,156.0,34.0,138.0)));
		bh.consume(collection.set(75, 137.0));
		bh.consume(collection.contains(150.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(116.0,183.0,28.0,168.0)));
		bh.consume(collection.indexOf(75.0));
		bh.consume(collection.set(16, 191.0));
		collection.add(0, 84.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(42.0,81.0,144.0,159.0,55.0,197.0,114.0)));
		bh.consume(collection.indexOf(67.0));
		collection.add(0, 59.0);
		bh.consume(collection.addAll(3, java.util.Arrays.asList(186.0,24.0,48.0,102.0,80.0)));
		bh.consume(collection.addAll(127, java.util.Arrays.asList(119.0,19.0,83.0,54.0,83.0,146.0,17.0)));
		collection.add(0, 96.0);
		collection.add(103, 183.0);
		bh.consume(collection.indexOf(65.0));
		bh.consume(collection.set(29, 36.0));
		collection.add(90, 115.0);
		collection.add(20, 132.0);
		bh.consume(collection.remove(122));
		bh.consume(collection.indexOf(136.0));
		bh.consume(collection.contains(146.0));
		collection.add(22.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(46.0,41.0,107.0)));
		collection.add(182.0);
		collection.add(0, 62.0);
		collection.add(194, 96.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(48.0,17.0,139.0)));
		bh.consume(collection.addAll(193, java.util.Arrays.asList(129.0,168.0,115.0,90.0,88.0)));
		collection.add(0, 26.0);
		collection.add(0, 6.0);
		collection.add(41, 132.0);
		collection.add(0, 36.0);
		bh.consume(collection.set(137, 24.0));
		collection.remove(46.0);
		bh.consume(collection.contains(66.0));
		bh.consume(collection.set(90, 54.0));
		collection.add(141.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(162.0,191.0,134.0)));
		collection.add(51.0);
		collection.remove(108.0);
		bh.consume(collection.addAll(181, java.util.Arrays.asList(122.0,168.0,187.0,182.0,139.0)));
		bh.consume(collection.remove(5));
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,2.0,193.0,21.0,63.0,75.0)));
		collection.add(58.0);
		collection.remove(53.0);
		bh.consume(collection.set(182, 9.0));
		bh.consume(collection.get(63));
		collection.add(0, 25.0);
		bh.consume(collection.contains(54.0));
		bh.consume(collection.set(165, 139.0));
		collection.add(103.0);
		bh.consume(collection.indexOf(12.0));
		bh.consume(collection.set(166, 95.0));
		bh.consume(collection.get(15));
		bh.consume(collection.set(35, 151.0));
		bh.consume(collection.lastIndexOf(23.0));
		collection.add(4, 56.0);
		bh.consume(collection.set(74, 197.0));
		bh.consume(collection.set(36, 148.0));
		collection.add(41, 31.0);
		collection.remove(124.0);
		bh.consume(collection.lastIndexOf(151.0));
		collection.add(0, 36.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(150.0,147.0,111.0)));
		bh.consume(collection.set(175, 93.0));
		collection.add(192, 126.0);
		bh.consume(collection.addAll(49, java.util.Arrays.asList(59.0,42.0,120.0,147.0,185.0,133.0,152.0,174.0,164.0)));
		bh.consume(collection.set(36, 64.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(138.0,53.0,39.0,181.0)));
		collection.add(157.0);
		bh.consume(collection.get(84));
		collection.add(133, 77.0);
		bh.consume(collection.addAll(7, java.util.Arrays.asList(159.0,27.0,92.0,50.0,66.0)));
		collection.remove(84.0);
		bh.consume(collection.set(30, 164.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(44.0,140.0,34.0,24.0,77.0,88.0,92.0,152.0)));
		bh.consume(collection.get(56));
		bh.consume(collection.contains(157.0));
		bh.consume(collection.get(20));
		bh.consume(collection.addAll(java.util.Arrays.asList(98.0,51.0,172.0,53.0,186.0)));
		collection.add(162.0);
		bh.consume(collection.get(103));
		collection.add(96, 175.0);
		bh.consume(collection.set(158, 111.0));
		collection.add(81.0);
		bh.consume(collection.get(159));
		collection.add(132.0);
		bh.consume(collection.get(6));
		collection.add(51, 23.0);
		bh.consume(collection.indexOf(98.0));
		bh.consume(collection.addAll(174, java.util.Arrays.asList(179.0,91.0,196.0,198.0,141.0)));
		collection.add(43, 51.0);
		bh.consume(collection.set(130, 163.0));
		bh.consume(collection.remove(36));
		collection.add(0, 5.0);
		bh.consume(collection.set(55, 195.0));
		collection.add(133.0);
		bh.consume(collection.set(110, 87.0));
		collection.add(150, 39.0);
		collection.remove(11.0);
		collection.add(95.0);
		bh.consume(collection.get(115));
		bh.consume(collection.contains(59.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(17.0,59.0,52.0,70.0,42.0,59.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(190.0,108.0,49.0,197.0,26.0)));
		collection.add(71.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(42.0,133.0,27.0)));
		bh.consume(collection.remove(148));
		collection.remove(11.0);
		collection.add(56.0);
		bh.consume(collection.get(106));
		bh.consume(collection.contains(94.0));
		bh.consume(collection.contains(23.0));
		bh.consume(collection.indexOf(128.0));
		bh.consume(collection.set(110, 162.0));
		bh.consume(collection.contains(14.0));
		bh.consume(collection.indexOf(45.0));
		collection.add(0, 34.0);
		collection.add(0, 116.0);
		collection.remove(181.0);
		bh.consume(collection.contains(17.0));
		bh.consume(collection.set(141, 54.0));
		bh.consume(collection.addAll(82, java.util.Arrays.asList(1.0,105.0,38.0,198.0,134.0,52.0,98.0)));
		bh.consume(collection.contains(139.0));
		bh.consume(collection.addAll(11, java.util.Arrays.asList(136.0,63.0,149.0)));
		bh.consume(collection.indexOf(144.0));
		collection.add(194, 188.0);
		bh.consume(collection.get(82));
		bh.consume(collection.set(183, 82.0));
		collection.remove(41.0);
		collection.add(0, 131.0);
		collection.add(0, 61.0);
		bh.consume(collection.indexOf(86.0));
		bh.consume(collection.set(73, 57.0));
		bh.consume(collection.set(73, 20.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(157.0,148.0,113.0,66.0,104.0,20.0,38.0)));
		bh.consume(collection.get(191));
		bh.consume(collection.addAll(146, java.util.Arrays.asList(136.0,87.0,58.0,171.0,164.0,40.0,82.0,92.0)));
		bh.consume(collection.contains(152.0));
		bh.consume(collection.addAll(150, java.util.Arrays.asList(162.0,116.0,130.0,53.0,55.0)));
		collection.add(191.0);
		collection.add(61.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(123.0,177.0,163.0,16.0,11.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(34.0,95.0,9.0,192.0,20.0,176.0,120.0,83.0,120.0)));
		bh.consume(collection.set(116, 193.0));
		collection.add(92, 29.0);
		collection.add(187, 27.0);
		collection.add(14, 156.0);
		collection.add(153.0);
		collection.add(15, 108.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(114.0,152.0,106.0)));
		collection.add(105, 61.0);
		bh.consume(collection.set(81, 157.0));
		collection.add(170, 94.0);
		bh.consume(collection.set(195, 63.0));
		bh.consume(collection.remove(53));
		bh.consume(collection.addAll(java.util.Arrays.asList(156.0,155.0,10.0)));
		bh.consume(collection.indexOf(11.0));
		bh.consume(collection.get(195));
		bh.consume(collection.get(181));
		bh.consume(collection.set(145, 42.0));
		bh.consume(collection.contains(46.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(176.0,81.0,91.0,5.0,118.0,185.0,126.0,70.0,171.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(186.0,152.0,84.0,181.0,175.0,115.0,7.0)));
		collection.add(22, 194.0);
		bh.consume(collection.remove(120));
		bh.consume(collection.set(177, 46.0));
		bh.consume(collection.get(128));
		bh.consume(collection.remove(26));
		bh.consume(collection.addAll(java.util.Arrays.asList(28.0,25.0,45.0,6.0,5.0)));
		collection.add(121, 183.0);
		bh.consume(collection.set(115, 115.0));
		collection.add(36, 56.0);
		bh.consume(collection.remove(37));
		collection.add(71.0);
		collection.add(80, 96.0);
		collection.add(0, 128.0);
		bh.consume(collection.indexOf(182.0));
		bh.consume(collection.contains(59.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(80.0,55.0,153.0,76.0,148.0)));
		bh.consume(collection.addAll(160, java.util.Arrays.asList(106.0,14.0,13.0,198.0)));
		collection.remove(134.0);
		bh.consume(collection.set(133, 121.0));
		collection.add(133, 165.0);
		collection.add(195, 187.0);
		collection.remove(125.0);
		bh.consume(collection.contains(163.0));
		collection.add(7, 118.0);
		bh.consume(collection.set(37, 146.0));
		collection.add(0, 162.0);
		bh.consume(collection.remove(169));
		bh.consume(collection.get(54));
		collection.add(6.0);
		collection.add(76, 2.0);
		bh.consume(collection.get(97));
		collection.add(114, 78.0);
		bh.consume(collection.indexOf(191.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(82.0,86.0,73.0,75.0,1.0,157.0,163.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(173.0,161.0,110.0,64.0)));
		collection.add(101, 15.0);
		bh.consume(collection.set(126, 57.0));
		bh.consume(collection.indexOf(50.0));
		collection.add(92.0);
		bh.consume(collection.remove(141));
		bh.consume(collection.indexOf(192.0));
		collection.add(107, 5.0);
		bh.consume(collection.remove(137));
		collection.add(0, 133.0);
		bh.consume(collection.indexOf(108.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(48.0,62.0,126.0,160.0)));
		bh.consume(collection.get(32));
		bh.consume(collection.set(64, 54.0));
		collection.add(0, 89.0);
		bh.consume(collection.remove(19));
		bh.consume(collection.contains(28.0));
		collection.add(110.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(46.0,200.0,74.0,146.0,78.0,68.0,84.0,96.0)));
		bh.consume(collection.contains(140.0));
		bh.consume(collection.set(154, 23.0));
		bh.consume(collection.contains(114.0));
		bh.consume(collection.contains(69.0));
		bh.consume(collection.set(14, 14.0));
		collection.add(79.0);
		collection.add(0, 81.0);
		bh.consume(collection.indexOf(132.0));
		collection.remove(132.0);
		collection.add(110, 103.0);
		collection.add(62.0);
		bh.consume(collection.contains(42.0));
		bh.consume(collection.addAll(82, java.util.Arrays.asList(119.0,191.0,172.0,31.0,45.0,53.0)));
		bh.consume(collection.addAll(67, java.util.Arrays.asList(119.0,143.0,193.0)));
		collection.add(18.0);
		collection.add(0, 191.0);
		collection.add(55.0);
		bh.consume(collection.set(7, 127.0));
		bh.consume(collection.get(75));
		bh.consume(collection.contains(85.0));
		bh.consume(collection.contains(19.0));
		bh.consume(collection.remove(168));
		bh.consume(collection.set(18, 152.0));
		bh.consume(collection.get(43));
		collection.add(30, 95.0);
		bh.consume(collection.remove(73));
		bh.consume(collection.contains(36.0));
		collection.add(0, 156.0);
		bh.consume(collection.contains(42.0));
		bh.consume(collection.set(17, 15.0));
		collection.add(0, 31.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(60.0,126.0,78.0,57.0,138.0,196.0,134.0,142.0)));
		bh.consume(collection.set(89, 200.0));
		bh.consume(collection.indexOf(104.0));
		collection.add(21, 109.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(15.0,173.0,109.0,160.0,144.0)));
		collection.add(153, 164.0);
		bh.consume(collection.contains(37.0));
		bh.consume(collection.indexOf(196.0));
		bh.consume(collection.remove(18));
		bh.consume(collection.remove(106));
		bh.consume(collection.remove(13));
		collection.add(23.0);
		bh.consume(collection.set(172, 162.0));
		bh.consume(collection.contains(82.0));
		bh.consume(collection.contains(146.0));
		bh.consume(collection.get(118));
		bh.consume(collection.contains(186.0));
		bh.consume(collection.contains(63.0));
		collection.remove(30.0);
		bh.consume(collection.get(28));
		bh.consume(collection.contains(14.0));
		collection.add(6, 75.0);
		bh.consume(collection.contains(181.0));
		collection.add(163.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(30.0,188.0,186.0)));
		bh.consume(collection.remove(6));
		bh.consume(collection.contains(22.0));
		collection.add(60.0);
		collection.add(168.0);
		bh.consume(collection.addAll(85, java.util.Arrays.asList(5.0,167.0,49.0,64.0,196.0,90.0,92.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(165.0,133.0,66.0)));
		bh.consume(collection.get(191));
		collection.add(0, 143.0);
		bh.consume(collection.set(111, 123.0));
		collection.add(163.0);
		collection.remove(21.0);
		bh.consume(collection.set(91, 154.0));
		collection.add(81, 104.0);
		bh.consume(collection.contains(187.0));
		bh.consume(collection.contains(110.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(25.0,174.0,48.0,199.0,30.0,54.0,71.0,128.0,165.0)));
		collection.add(0, 93.0);
		bh.consume(collection.indexOf(144.0));
		collection.add(49.0);
		bh.consume(collection.get(13));
		bh.consume(collection.contains(107.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(148.0,98.0,185.0,176.0,105.0,164.0,7.0,187.0,113.0)));
		bh.consume(collection.remove(112));
		bh.consume(collection.remove(38));
		bh.consume(collection.addAll(java.util.Arrays.asList(174.0,149.0,70.0)));
		bh.consume(collection.set(104, 103.0));
		collection.add(25, 31.0);
		collection.add(111, 105.0);
		bh.consume(collection.get(87));
		collection.add(0, 144.0);
		collection.add(31.0);
		collection.add(64.0);
		bh.consume(collection.contains(56.0));
		bh.consume(collection.get(162));
		collection.add(28.0);
		collection.add(11, 13.0);
		bh.consume(collection.set(168, 88.0));
		collection.add(35, 37.0);
		bh.consume(collection.indexOf(108.0));
		collection.remove(113.0);
		bh.consume(collection.set(186, 188.0));
		collection.add(34, 105.0);
		collection.add(198, 62.0);
		collection.remove(52.0);
		bh.consume(collection.addAll(184, java.util.Arrays.asList(66.0,27.0,188.0)));
		bh.consume(collection.contains(113.0));
		collection.add(74, 164.0);
		collection.add(127.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(174.0,163.0,1.0,65.0,107.0,33.0,164.0,94.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,106.0,137.0,152.0,17.0,67.0,178.0,102.0)));
		collection.remove(37.0);
		bh.consume(collection.remove(52));
		bh.consume(collection.contains(62.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(77.0,175.0,162.0,137.0,80.0)));
		bh.consume(collection.set(63, 49.0));
		bh.consume(collection.set(107, 10.0));
		collection.add(0, 38.0);
		bh.consume(collection.set(23, 35.0));
		bh.consume(collection.get(18));
		bh.consume(collection.addAll(148, java.util.Arrays.asList(160.0,99.0,46.0,200.0,159.0,126.0,29.0,83.0,5.0)));
		bh.consume(collection.set(104, 81.0));
		bh.consume(collection.set(166, 48.0));
		bh.consume(collection.addAll(45, java.util.Arrays.asList(123.0,150.0,180.0)));
		bh.consume(collection.remove(124));
		bh.consume(collection.addAll(java.util.Arrays.asList(104.0,122.0,91.0,162.0,2.0,174.0)));
		collection.add(89.0);
		bh.consume(collection.indexOf(149.0));
		bh.consume(collection.contains(17.0));
		bh.consume(collection.set(26, 140.0));
		collection.add(172.0);
		bh.consume(collection.remove(158));
		collection.add(111, 179.0);
		bh.consume(collection.remove(145));
		bh.consume(collection.set(45, 27.0));
		bh.consume(collection.get(27));
		bh.consume(collection.indexOf(140.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(12.0,66.0,71.0,66.0,31.0,81.0,44.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,138.0,70.0,159.0,181.0,42.0)));
		collection.add(107.0);
		bh.consume(collection.contains(12.0));
		bh.consume(collection.indexOf(32.0));
		bh.consume(collection.contains(130.0));
		bh.consume(collection.get(127));
		bh.consume(collection.contains(198.0));
		bh.consume(collection.indexOf(172.0));
		collection.add(45.0);
		bh.consume(collection.remove(165));
		collection.add(191, 124.0);
		bh.consume(collection.set(58, 109.0));
		collection.add(0, 175.0);
		bh.consume(collection.remove(106));
		collection.remove(163.0);
		collection.add(0, 51.0);
		collection.add(32, 37.0);
		bh.consume(collection.contains(84.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(165.0,6.0,90.0,147.0,89.0,176.0,11.0,57.0,9.0)));
		collection.add(141, 160.0);
		collection.remove(51.0);
		bh.consume(collection.remove(132));
		collection.add(0, 7.0);
		bh.consume(collection.indexOf(134.0));
		bh.consume(collection.set(70, 96.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(134.0,109.0,117.0,198.0,36.0,160.0,73.0)));
		bh.consume(collection.set(31, 57.0));
		bh.consume(collection.get(4));
		bh.consume(collection.set(28, 20.0));
		bh.consume(collection.indexOf(55.0));
		bh.consume(collection.get(197));
		bh.consume(collection.indexOf(30.0));
		bh.consume(collection.indexOf(44.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(145.0,119.0,112.0,141.0,182.0,23.0,186.0)));
		bh.consume(collection.remove(3));
		bh.consume(collection.addAll(java.util.Arrays.asList(56.0,65.0,137.0,189.0,148.0,21.0)));
		bh.consume(collection.get(16));
		bh.consume(collection.set(89, 178.0));
		collection.add(0, 159.0);
		bh.consume(collection.set(160, 56.0));
		bh.consume(collection.contains(51.0));
		bh.consume(collection.contains(50.0));
		collection.add(158, 161.0);
		bh.consume(collection.set(120, 130.0));
		collection.add(106.0);
		bh.consume(collection.set(65, 80.0));
		collection.add(0, 145.0);
		collection.add(41.0);
		collection.add(78, 19.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(113.0,187.0,166.0,76.0,22.0,49.0,7.0,125.0,178.0)));
		collection.add(148.0);
		collection.remove(18.0);
		collection.add(2, 193.0);
		collection.add(181, 37.0);
		bh.consume(collection.set(108, 33.0));
		bh.consume(collection.addAll(18, java.util.Arrays.asList(61.0,141.0,115.0,33.0,106.0,181.0,48.0)));
		bh.consume(collection.addAll(136, java.util.Arrays.asList(2.0,9.0,15.0,179.0,132.0)));
		collection.add(37, 149.0);
		bh.consume(collection.addAll(132, java.util.Arrays.asList(88.0,119.0,75.0,132.0,120.0,83.0,115.0)));
		collection.add(190.0);
		collection.add(14.0);
		collection.add(162, 135.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(100.0,5.0,27.0,117.0,63.0,96.0,12.0,37.0,194.0)));
		collection.add(152.0);
		collection.add(0, 26.0);
		collection.add(108.0);
		bh.consume(collection.indexOf(44.0));
		bh.consume(collection.contains(98.0));
		bh.consume(collection.addAll(64, java.util.Arrays.asList(142.0,119.0,93.0,43.0)));
		collection.add(187.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(141.0,59.0,167.0)));
		bh.consume(collection.contains(117.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(127.0,25.0,68.0,151.0,74.0,132.0,173.0,45.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(172.0,166.0,143.0)));
		bh.consume(collection.indexOf(110.0));
		bh.consume(collection.contains(37.0));
		bh.consume(collection.contains(122.0));
		bh.consume(collection.indexOf(125.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(92.0,156.0,69.0,66.0,53.0,146.0,66.0,100.0)));
		collection.add(0, 126.0);
		bh.consume(collection.get(13));
		collection.add(0, 14.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(195.0,165.0,199.0,42.0,87.0,151.0,9.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(44.0,54.0,184.0)));
		bh.consume(collection.indexOf(192.0));
		bh.consume(collection.indexOf(162.0));
		collection.remove(197.0);
		bh.consume(collection.indexOf(145.0));
		bh.consume(collection.addAll(123, java.util.Arrays.asList(33.0,123.0,58.0,171.0,2.0,124.0,23.0,18.0,15.0)));
		bh.consume(collection.contains(43.0));
		collection.add(167, 183.0);
		bh.consume(collection.indexOf(112.0));
		collection.add(0, 162.0);
		bh.consume(collection.indexOf(35.0));
		collection.add(178.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(47.0,70.0,40.0)));
		bh.consume(collection.addAll(57, java.util.Arrays.asList(197.0,43.0,77.0,122.0,27.0,69.0,82.0,105.0,47.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(146.0,161.0,149.0,88.0,58.0,161.0,47.0,57.0,130.0)));
		bh.consume(collection.set(45, 184.0));
		collection.add(0, 65.0);
		bh.consume(collection.contains(185.0));
		collection.add(157, 75.0);
		bh.consume(collection.indexOf(196.0));
		collection.add(83, 127.0);
		bh.consume(collection.addAll(46, java.util.Arrays.asList(1.0,196.0,147.0,65.0,164.0,131.0,62.0,23.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(107.0,129.0,49.0,108.0,83.0,108.0,54.0,59.0)));
		bh.consume(collection.set(84, 54.0));
		collection.add(20, 153.0);
		bh.consume(collection.addAll(174, java.util.Arrays.asList(147.0,136.0,77.0)));
		bh.consume(collection.indexOf(137.0));
		collection.add(0, 57.0);
		bh.consume(collection.contains(153.0));
		bh.consume(collection.set(157, 100.0));
		collection.add(43, 9.0);
		collection.add(184.0);
	}
}
