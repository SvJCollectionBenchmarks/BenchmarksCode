package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile6AllSequences_JVectorSequence_20220501132112968 {
	java.util.Vector<Double> collection = new java.util.Vector<>();
	@Setup(Level.Invocation)
	public void setupJVectorSequence() {
		collection = new java.util.Vector<>();
		collection.add(111.0);
		collection.add(8.0);
		collection.add(93.0);
		collection.add(45.0);
		collection.add(47.0);
		collection.add(110.0);
		collection.add(13.0);
		collection.add(97.0);
		collection.add(160.0);
		collection.add(68.0);
		collection.add(78.0);
		collection.add(98.0);
		collection.add(75.0);
		collection.add(18.0);
		collection.add(84.0);
		collection.add(173.0);
		collection.add(47.0);
		collection.add(102.0);
		collection.add(53.0);
		collection.add(59.0);
		collection.add(96.0);
		collection.add(16.0);
		collection.add(142.0);
		collection.add(12.0);
		collection.add(93.0);
		collection.add(42.0);
		collection.add(105.0);
		collection.add(167.0);
		collection.add(46.0);
		collection.add(139.0);
		collection.add(11.0);
		collection.add(72.0);
		collection.add(150.0);
		collection.add(42.0);
		collection.add(99.0);
		collection.add(66.0);
		collection.add(67.0);
		collection.add(102.0);
		collection.add(19.0);
		collection.add(116.0);
		collection.add(86.0);
		collection.add(12.0);
		collection.add(25.0);
		collection.add(116.0);
		collection.add(150.0);
		collection.add(66.0);
		collection.add(199.0);
		collection.add(184.0);
		collection.add(51.0);
		collection.add(19.0);
		collection.add(179.0);
		collection.add(140.0);
		collection.add(96.0);
		collection.add(21.0);
		collection.add(67.0);
		collection.add(59.0);
		collection.add(107.0);
		collection.add(103.0);
		collection.add(44.0);
		collection.add(6.0);
		collection.add(106.0);
		collection.add(8.0);
		collection.add(99.0);
		collection.add(46.0);
		collection.add(103.0);
		collection.add(108.0);
		collection.add(131.0);
		collection.add(54.0);
		collection.add(126.0);
		collection.add(16.0);
		collection.add(22.0);
		collection.add(68.0);
		collection.add(65.0);
		collection.add(31.0);
		collection.add(29.0);
		collection.add(6.0);
		collection.add(45.0);
		collection.add(184.0);
		collection.add(35.0);
		collection.add(30.0);
		collection.add(189.0);
		collection.add(165.0);
		collection.add(21.0);
		collection.add(148.0);
		collection.add(53.0);
		collection.add(102.0);
		collection.add(119.0);
		collection.add(35.0);
		collection.add(155.0);
		collection.add(38.0);
		collection.add(59.0);
		collection.add(14.0);
		collection.add(98.0);
		collection.add(160.0);
		collection.add(19.0);
		collection.add(174.0);
		collection.add(59.0);
		collection.add(168.0);
		collection.add(99.0);
		collection.add(79.0);
		collection.add(172.0);
		collection.add(67.0);
		collection.add(47.0);
		collection.add(22.0);
		collection.add(69.0);
		collection.add(67.0);
		collection.add(187.0);
		collection.add(89.0);
		collection.add(19.0);
		collection.add(153.0);
		collection.add(151.0);
		collection.add(11.0);
		collection.add(99.0);
		collection.add(194.0);
		collection.add(161.0);
		collection.add(11.0);
		collection.add(139.0);
		collection.add(67.0);
		collection.add(190.0);
		collection.add(142.0);
		collection.add(160.0);
		collection.add(196.0);
		collection.add(69.0);
		collection.add(66.0);
		collection.add(36.0);
		collection.add(10.0);
		collection.add(102.0);
		collection.add(53.0);
		collection.add(182.0);
		collection.add(78.0);
		collection.add(18.0);
		collection.add(125.0);
		collection.add(6.0);
		collection.add(114.0);
		collection.add(159.0);
		collection.add(21.0);
		collection.add(55.0);
		collection.add(194.0);
		collection.add(39.0);
		collection.add(93.0);
		collection.add(55.0);
		collection.add(101.0);
		collection.add(166.0);
		collection.add(156.0);
		collection.add(156.0);
		collection.add(83.0);
		collection.add(154.0);
		collection.add(80.0);
		collection.add(121.0);
		collection.add(52.0);
		collection.add(50.0);
		collection.add(51.0);
		collection.add(126.0);
		collection.add(8.0);
		collection.add(26.0);
		collection.add(190.0);
		collection.add(151.0);
		collection.add(77.0);
		collection.add(87.0);
		collection.add(46.0);
		collection.add(140.0);
		collection.add(71.0);
		collection.add(168.0);
		collection.add(86.0);
		collection.add(42.0);
		collection.add(131.0);
		collection.add(60.0);
		collection.add(14.0);
		collection.add(151.0);
		collection.add(69.0);
		collection.add(135.0);
		collection.add(72.0);
		collection.add(197.0);
		collection.add(130.0);
		collection.add(140.0);
		collection.add(137.0);
		collection.add(172.0);
		collection.add(40.0);
		collection.add(181.0);
		collection.add(18.0);
		collection.add(122.0);
		collection.add(166.0);
		collection.add(23.0);
		collection.add(67.0);
		collection.add(166.0);
		collection.add(171.0);
		collection.add(104.0);
		collection.add(187.0);
		collection.add(54.0);
		collection.add(182.0);
		collection.add(69.0);
		collection.add(33.0);
		collection.add(64.0);
		collection.add(158.0);
		collection.add(81.0);
		collection.add(176.0);
		collection.add(194.0);
		collection.add(28.0);
		collection.add(79.0);
		collection.add(191.0);
		collection.add(34.0);
		collection.add(136.0);
		collection.add(95.0);
		collection.add(56.0);
		collection.add(189.0);
		collection.add(120.0);
		collection.add(126.0);
		collection.add(30.0);
		collection.add(184.0);
		collection.add(131.0);
		collection.add(110.0);
		collection.add(20.0);
		collection.add(91.0);
		collection.add(31.0);
		collection.add(144.0);
		collection.add(185.0);
		collection.add(106.0);
		collection.add(185.0);
		collection.add(189.0);
		collection.add(88.0);
		collection.add(143.0);
		collection.add(156.0);
		collection.add(152.0);
		collection.add(130.0);
		collection.add(132.0);
		collection.add(169.0);
		collection.add(169.0);
		collection.add(77.0);
		collection.add(3.0);
		collection.add(113.0);
		collection.add(146.0);
		collection.add(159.0);
		collection.add(200.0);
		collection.add(123.0);
		collection.add(65.0);
		collection.add(78.0);
		collection.add(90.0);
		collection.add(126.0);
		collection.add(31.0);
		collection.add(86.0);
		collection.add(194.0);
		collection.add(68.0);
		collection.add(112.0);
		collection.add(182.0);
		collection.add(7.0);
		collection.add(109.0);
		collection.add(114.0);
		collection.add(30.0);
		collection.add(75.0);
		collection.add(48.0);
		collection.add(127.0);
		collection.add(169.0);
		collection.add(127.0);
		collection.add(150.0);
		collection.add(23.0);
		collection.add(111.0);
		collection.add(165.0);
		collection.add(190.0);
		collection.add(54.0);
		collection.add(43.0);
		collection.add(21.0);
		collection.add(108.0);
		collection.add(187.0);
		collection.add(160.0);
		collection.add(118.0);
		collection.add(131.0);
		collection.add(132.0);
		collection.add(132.0);
		collection.add(60.0);
		collection.add(152.0);
		collection.add(166.0);
		collection.add(171.0);
		collection.add(1.0);
		collection.add(121.0);
		collection.add(12.0);
		collection.add(196.0);
		collection.add(4.0);
		collection.add(39.0);
		collection.add(183.0);
		collection.add(89.0);
		collection.add(145.0);
		collection.add(175.0);
		collection.add(98.0);
		collection.add(155.0);
		collection.add(37.0);
		collection.add(110.0);
		collection.add(29.0);
		collection.add(86.0);
		collection.add(98.0);
		collection.add(136.0);
		collection.add(46.0);
		collection.add(131.0);
		collection.add(141.0);
		collection.add(107.0);
		collection.add(84.0);
		collection.add(104.0);
		collection.add(59.0);
		collection.add(119.0);
		collection.add(107.0);
		collection.add(72.0);
		collection.add(95.0);
		collection.add(76.0);
		collection.add(146.0);
		collection.add(122.0);
		collection.add(129.0);
		collection.add(34.0);
		collection.add(127.0);
		collection.add(200.0);
		collection.add(48.0);
		collection.add(197.0);
		collection.add(79.0);
		collection.add(193.0);
		collection.add(60.0);
		collection.add(164.0);
		collection.add(193.0);
		collection.add(34.0);
		collection.add(141.0);
		collection.add(52.0);
		collection.add(151.0);
		collection.add(67.0);
		collection.add(90.0);
		collection.add(154.0);
		collection.add(151.0);
		collection.add(124.0);
		collection.add(92.0);
		collection.add(115.0);
		collection.add(86.0);
		collection.add(187.0);
		collection.add(18.0);
		collection.add(23.0);
		collection.add(140.0);
		collection.add(164.0);
		collection.add(51.0);
		collection.add(35.0);
		collection.add(152.0);
		collection.add(56.0);
		collection.add(129.0);
		collection.add(26.0);
		collection.add(74.0);
		collection.add(17.0);
		collection.add(118.0);
		collection.add(78.0);
		collection.add(190.0);
		collection.add(183.0);
		collection.add(31.0);
		collection.add(145.0);
		collection.add(11.0);
		collection.add(101.0);
		collection.add(79.0);
		collection.add(114.0);
		collection.add(87.0);
		collection.add(37.0);
		collection.add(73.0);
		collection.add(9.0);
		collection.add(104.0);
		collection.add(145.0);
		collection.add(17.0);
		collection.add(93.0);
		collection.add(136.0);
		collection.add(43.0);
		collection.add(15.0);
		collection.add(92.0);
		collection.add(128.0);
		collection.add(108.0);
		collection.add(119.0);
		collection.add(198.0);
		collection.add(54.0);
		collection.add(48.0);
		collection.add(88.0);
		collection.add(194.0);
		collection.add(101.0);
		collection.add(50.0);
		collection.add(180.0);
		collection.add(126.0);
		collection.add(124.0);
		collection.add(51.0);
		collection.add(17.0);
		collection.add(106.0);
		collection.add(40.0);
		collection.add(162.0);
		collection.add(5.0);
		collection.add(199.0);
		collection.add(111.0);
		collection.add(30.0);
		collection.add(13.0);
		collection.add(27.0);
		collection.add(187.0);
		collection.add(193.0);
		collection.add(71.0);
		collection.add(42.0);
		collection.add(98.0);
		collection.add(131.0);
		collection.add(20.0);
		collection.add(27.0);
		collection.add(168.0);
		collection.add(26.0);
		collection.add(51.0);
		collection.add(192.0);
		collection.add(186.0);
		collection.add(173.0);
		collection.add(106.0);
		collection.add(142.0);
		collection.add(30.0);
		collection.add(21.0);
		collection.add(91.0);
		collection.add(144.0);
		collection.add(130.0);
		collection.add(104.0);
		collection.add(51.0);
		collection.add(118.0);
		collection.add(121.0);
		collection.add(40.0);
		collection.add(200.0);
		collection.add(29.0);
		collection.add(165.0);
		collection.add(94.0);
		collection.add(175.0);
		collection.add(43.0);
		collection.add(129.0);
		collection.add(104.0);
		collection.add(143.0);
		collection.add(131.0);
		collection.add(176.0);
		collection.add(28.0);
		collection.add(115.0);
		collection.add(87.0);
		collection.add(99.0);
		collection.add(176.0);
		collection.add(62.0);
		collection.add(165.0);
		collection.add(86.0);
		collection.add(22.0);
		collection.add(172.0);
		collection.add(100.0);
		collection.add(37.0);
		collection.add(176.0);
		collection.add(136.0);
		collection.add(198.0);
		collection.add(142.0);
		collection.add(85.0);
		collection.add(162.0);
		collection.add(121.0);
		collection.add(34.0);
		collection.add(88.0);
		collection.add(44.0);
		collection.add(120.0);
		collection.add(3.0);
		collection.add(140.0);
		collection.add(171.0);
		collection.add(51.0);
		collection.add(188.0);
		collection.add(103.0);
		collection.add(174.0);
		collection.add(63.0);
		collection.add(59.0);
		collection.add(37.0);
		collection.add(44.0);
		collection.add(141.0);
		collection.add(110.0);
		collection.add(199.0);
		collection.add(94.0);
		collection.add(51.0);
		collection.add(36.0);
		collection.add(16.0);
		collection.add(74.0);
		collection.add(120.0);
		collection.add(165.0);
		collection.add(60.0);
		collection.add(114.0);
		collection.add(155.0);
		collection.add(57.0);
		collection.add(139.0);
		collection.add(191.0);
		collection.add(190.0);
		collection.add(180.0);
		collection.add(87.0);
		collection.add(152.0);
		collection.add(125.0);
		collection.add(85.0);
		collection.add(82.0);
		collection.add(148.0);
		collection.add(62.0);
		collection.add(136.0);
		collection.add(143.0);
		collection.add(77.0);
		collection.add(17.0);
		collection.add(147.0);
		collection.add(129.0);
		collection.add(8.0);
		collection.add(65.0);
		collection.add(29.0);
		collection.add(196.0);
		collection.add(148.0);
		collection.add(63.0);
		collection.add(74.0);
		collection.add(134.0);
		collection.add(109.0);
		collection.add(134.0);
		collection.add(195.0);
		collection.add(82.0);
		collection.add(82.0);
		collection.add(183.0);
		collection.add(129.0);
		collection.add(74.0);
		collection.add(59.0);
		collection.add(11.0);
		collection.add(38.0);
		collection.add(157.0);
		collection.add(14.0);
		collection.add(10.0);
		collection.add(119.0);
		collection.add(161.0);
		collection.add(101.0);
		collection.add(53.0);
		collection.add(108.0);
		collection.add(184.0);
		collection.add(182.0);
		collection.add(38.0);
		collection.add(111.0);
		collection.add(143.0);
		collection.add(200.0);
		collection.add(110.0);
		collection.add(28.0);
		collection.add(31.0);
		collection.add(57.0);
		collection.add(69.0);
		collection.add(36.0);
		collection.add(107.0);
		collection.add(1.0);
		collection.add(67.0);
		collection.add(14.0);
		collection.add(190.0);
		collection.add(176.0);
		collection.add(26.0);
		collection.add(113.0);
		collection.add(194.0);
		collection.add(154.0);
		collection.add(134.0);
		collection.add(1.0);
		collection.add(160.0);
		collection.add(51.0);
		collection.add(193.0);
		collection.add(162.0);
		collection.add(86.0);
		collection.add(151.0);
		collection.add(44.0);
		collection.add(180.0);
		collection.add(11.0);
		collection.add(132.0);
		collection.add(2.0);
		collection.add(81.0);
		collection.add(100.0);
		collection.add(74.0);
		collection.add(13.0);
		collection.add(136.0);
		collection.add(94.0);
		collection.add(178.0);
		collection.add(63.0);
		collection.add(30.0);
		collection.add(40.0);
		collection.add(94.0);
		collection.add(133.0);
		collection.add(46.0);
		collection.add(173.0);
		collection.add(53.0);
		collection.add(11.0);
		collection.add(116.0);
		collection.add(120.0);
		collection.add(86.0);
		collection.add(66.0);
		collection.add(55.0);
		collection.add(176.0);
		collection.add(19.0);
		collection.add(152.0);
		collection.add(111.0);
		collection.add(35.0);
		collection.add(138.0);
		collection.add(89.0);
		collection.add(33.0);
		collection.add(195.0);
		collection.add(98.0);
		collection.add(112.0);
		collection.add(57.0);
		collection.add(171.0);
		collection.add(153.0);
		collection.add(189.0);
		collection.add(24.0);
		collection.add(184.0);
		collection.add(117.0);
		collection.add(159.0);
		collection.add(63.0);
		collection.add(94.0);
		collection.add(90.0);
		collection.add(85.0);
		collection.add(57.0);
		collection.add(106.0);
		collection.add(104.0);
		collection.add(149.0);
		collection.add(94.0);
		collection.add(187.0);
		collection.add(35.0);
		collection.add(149.0);
		collection.add(180.0);
		collection.add(173.0);
		collection.add(35.0);
		collection.add(141.0);
		collection.add(148.0);
		collection.add(127.0);
		collection.add(155.0);
		collection.add(67.0);
		collection.add(192.0);
		collection.add(22.0);
		collection.add(115.0);
		collection.add(135.0);
		collection.add(161.0);
		collection.add(112.0);
		collection.add(94.0);
		collection.add(107.0);
		collection.add(192.0);
		collection.add(134.0);
		collection.add(196.0);
		collection.add(132.0);
		collection.add(32.0);
		collection.add(184.0);
		collection.add(145.0);
		collection.add(24.0);
		collection.add(106.0);
		collection.add(105.0);
		collection.add(55.0);
		collection.add(84.0);
		collection.add(88.0);
		collection.add(98.0);
		collection.add(49.0);
		collection.add(185.0);
		collection.add(82.0);
		collection.add(174.0);
		collection.add(178.0);
		collection.add(72.0);
		collection.add(109.0);
		collection.add(192.0);
		collection.add(25.0);
		collection.add(50.0);
		collection.add(33.0);
		collection.add(61.0);
		collection.add(21.0);
		collection.add(33.0);
		collection.add(60.0);
		collection.add(132.0);
		collection.add(18.0);
		collection.add(177.0);
		collection.add(180.0);
		collection.add(113.0);
		collection.add(72.0);
		collection.add(127.0);
		collection.add(118.0);
		collection.add(41.0);
		collection.add(114.0);
		collection.add(193.0);
		collection.add(86.0);
		collection.add(84.0);
		collection.add(48.0);
		collection.add(112.0);
		collection.add(32.0);
		collection.add(147.0);
		collection.add(64.0);
		collection.add(12.0);
		collection.add(138.0);
		collection.add(191.0);
		collection.add(69.0);
		collection.add(168.0);
		collection.add(74.0);
		collection.add(188.0);
		collection.add(133.0);
		collection.add(113.0);
		collection.add(173.0);
		collection.add(72.0);
		collection.add(196.0);
		collection.add(26.0);
		collection.add(51.0);
		collection.add(117.0);
		collection.add(155.0);
		collection.add(82.0);
		collection.add(176.0);
		collection.add(34.0);
		collection.add(33.0);
		collection.add(154.0);
		collection.add(187.0);
		collection.add(171.0);
		collection.add(33.0);
		collection.add(180.0);
		collection.add(70.0);
		collection.add(16.0);
		collection.add(154.0);
		collection.add(80.0);
		collection.add(178.0);
		collection.add(189.0);
		collection.add(80.0);
		collection.add(34.0);
		collection.add(122.0);
		collection.add(186.0);
		collection.add(24.0);
		collection.add(127.0);
		collection.add(2.0);
		collection.add(35.0);
		collection.add(56.0);
		collection.add(27.0);
		collection.add(13.0);
		collection.add(58.0);
		collection.add(50.0);
		collection.add(167.0);
		collection.add(45.0);
		collection.add(26.0);
		collection.add(116.0);
		collection.add(40.0);
		collection.add(63.0);
		collection.add(38.0);
		collection.add(187.0);
		collection.add(190.0);
		collection.add(168.0);
		collection.add(4.0);
		collection.add(128.0);
		collection.add(22.0);
		collection.add(70.0);
		collection.add(194.0);
		collection.add(52.0);
		collection.add(78.0);
		collection.add(96.0);
		collection.add(98.0);
		collection.add(134.0);
		collection.add(99.0);
		collection.add(120.0);
		collection.add(188.0);
		collection.add(63.0);
		collection.add(124.0);
		collection.add(161.0);
		collection.add(170.0);
		collection.add(66.0);
		collection.add(3.0);
		collection.add(137.0);
		collection.add(124.0);
		collection.add(114.0);
		collection.add(168.0);
		collection.add(55.0);
		collection.add(155.0);
		collection.add(113.0);
		collection.add(33.0);
		collection.add(87.0);
		collection.add(84.0);
		collection.add(45.0);
		collection.add(15.0);
		collection.add(57.0);
		collection.add(144.0);
		collection.add(21.0);
		collection.add(37.0);
		collection.add(160.0);
		collection.add(162.0);
		collection.add(101.0);
		collection.add(35.0);
		collection.add(56.0);
		collection.add(75.0);
		collection.add(65.0);
		collection.add(109.0);
		collection.add(152.0);
		collection.add(179.0);
		collection.add(157.0);
		collection.add(164.0);
		collection.add(120.0);
		collection.add(83.0);
		collection.add(99.0);
		collection.add(19.0);
		collection.add(177.0);
		collection.add(38.0);
		collection.add(45.0);
		collection.add(46.0);
		collection.add(116.0);
		collection.add(195.0);
		collection.add(125.0);
		collection.add(153.0);
		collection.add(120.0);
		collection.add(94.0);
		collection.add(144.0);
		collection.add(112.0);
		collection.add(19.0);
		collection.add(168.0);
		collection.add(59.0);
		collection.add(176.0);
		collection.add(132.0);
		collection.add(118.0);
		collection.add(136.0);
		collection.add(140.0);
		collection.add(125.0);
		collection.add(45.0);
		collection.add(87.0);
		collection.add(52.0);
		collection.add(84.0);
		collection.add(134.0);
		collection.add(140.0);
		collection.add(49.0);
		collection.add(133.0);
		collection.add(166.0);
		collection.add(39.0);
		collection.add(195.0);
		collection.add(28.0);
		collection.add(84.0);
		collection.add(43.0);
		collection.add(65.0);
		collection.add(33.0);
		collection.add(34.0);
		collection.add(117.0);
		collection.add(41.0);
		collection.add(76.0);
		collection.add(139.0);
		collection.add(88.0);
		collection.add(196.0);
		collection.add(182.0);
		collection.add(147.0);
		collection.add(67.0);
		collection.add(17.0);
		collection.add(164.0);
		collection.add(84.0);
		collection.add(59.0);
		collection.add(158.0);
		collection.add(99.0);
		collection.add(125.0);
		collection.add(1.0);
		collection.add(146.0);
		collection.add(140.0);
		collection.add(22.0);
		collection.add(125.0);
		collection.add(180.0);
		collection.add(49.0);
		collection.add(51.0);
		collection.add(93.0);
		collection.add(64.0);
		collection.add(158.0);
		collection.add(68.0);
		collection.add(140.0);
		collection.add(50.0);
		collection.add(1.0);
		collection.add(13.0);
		collection.add(173.0);
		collection.add(125.0);
		collection.add(153.0);
		collection.add(136.0);
		collection.add(186.0);
		collection.add(143.0);
		collection.add(107.0);
		collection.add(160.0);
		collection.add(123.0);
		collection.add(142.0);
		collection.add(80.0);
		collection.add(22.0);
		collection.add(58.0);
		collection.add(69.0);
		collection.add(153.0);
		collection.add(3.0);
		collection.add(36.0);
		collection.add(170.0);
		collection.add(61.0);
		collection.add(38.0);
		collection.add(106.0);
		collection.add(150.0);
		collection.add(183.0);
		collection.add(119.0);
		collection.add(115.0);
		collection.add(136.0);
		collection.add(184.0);
		collection.add(132.0);
		collection.add(109.0);
		collection.add(169.0);
		collection.add(177.0);
		collection.add(155.0);
		collection.add(15.0);
		collection.add(52.0);
		collection.add(169.0);
		collection.add(87.0);
		collection.add(20.0);
		collection.add(73.0);
		collection.add(71.0);
		collection.add(121.0);
		collection.add(97.0);
		collection.add(72.0);
		collection.add(60.0);
		collection.add(46.0);
		collection.add(161.0);
		collection.add(34.0);
		collection.add(167.0);
		collection.add(171.0);
		collection.add(27.0);
		collection.add(171.0);
		collection.add(148.0);
		collection.add(173.0);
		collection.add(44.0);
		collection.add(33.0);
		collection.add(128.0);
		collection.add(84.0);
		collection.add(12.0);
		collection.add(68.0);
		collection.add(182.0);
		collection.add(76.0);
		collection.add(33.0);
		collection.add(20.0);
		collection.add(13.0);
		collection.add(199.0);
		collection.add(20.0);
		collection.add(128.0);
		collection.add(172.0);
		collection.add(60.0);
		collection.add(43.0);
		collection.add(158.0);
		collection.add(150.0);
		collection.add(57.0);
		collection.add(26.0);
		collection.add(10.0);
		collection.add(13.0);
		collection.add(95.0);
		collection.add(188.0);
		collection.add(3.0);
		collection.add(120.0);
		collection.add(76.0);
		collection.add(84.0);
		collection.add(82.0);
		collection.add(39.0);
		collection.add(4.0);
		collection.add(75.0);
		collection.add(44.0);
		collection.add(37.0);
		collection.add(125.0);
		collection.add(84.0);
		collection.add(4.0);
		collection.add(104.0);
		collection.add(10.0);
		collection.add(65.0);
		collection.add(122.0);
		collection.add(141.0);
		collection.add(11.0);
		collection.add(15.0);
		collection.add(38.0);
		collection.add(100.0);
		collection.add(163.0);
		collection.add(115.0);
		collection.add(144.0);
		collection.add(41.0);
		collection.add(176.0);
		collection.add(85.0);
		collection.add(102.0);
		collection.add(20.0);
		collection.add(82.0);
		collection.add(183.0);
		collection.add(3.0);
		collection.add(142.0);
		collection.add(146.0);
		collection.add(166.0);
		collection.add(79.0);
		collection.add(37.0);
		collection.add(125.0);
		collection.add(191.0);
		collection.add(62.0);
		collection.add(14.0);
		collection.add(13.0);
		collection.add(167.0);
		collection.add(45.0);
		collection.add(29.0);
		collection.add(11.0);
		collection.add(54.0);
		collection.add(192.0);
		collection.add(165.0);
		collection.add(153.0);
		collection.add(148.0);
		collection.add(170.0);
		collection.add(5.0);
		collection.add(168.0);
		collection.add(62.0);
		collection.add(58.0);
		collection.add(98.0);
		collection.add(41.0);
		collection.add(123.0);
		collection.add(38.0);
		collection.add(76.0);
		collection.add(150.0);
		collection.add(169.0);
		collection.add(112.0);
		collection.add(22.0);
		collection.add(84.0);
		collection.add(183.0);
		collection.add(190.0);
		collection.add(188.0);
		collection.add(62.0);
		collection.add(138.0);
		collection.add(87.0);
		collection.add(85.0);
		collection.add(89.0);
		collection.add(187.0);
		collection.add(121.0);
		collection.add(17.0);
		collection.add(23.0);
		collection.add(62.0);
		collection.add(17.0);
		collection.add(57.0);
		collection.add(91.0);
		collection.add(22.0);
		collection.add(130.0);
		collection.add(33.0);
		collection.add(172.0);
		collection.add(135.0);
		collection.add(120.0);
		collection.add(150.0);
		collection.add(164.0);
		collection.add(68.0);
		collection.add(87.0);
		collection.add(95.0);
		collection.add(142.0);
		collection.add(84.0);
		collection.add(18.0);
		collection.add(58.0);
		collection.add(45.0);
		collection.add(64.0);
		collection.add(130.0);
		collection.add(41.0);
		collection.add(71.0);
		collection.add(42.0);
		collection.add(103.0);
		collection.add(187.0);
		collection.add(145.0);
		collection.add(100.0);
		collection.add(34.0);
		collection.add(99.0);
		collection.add(189.0);
		collection.add(159.0);
		collection.add(122.0);
		collection.add(100.0);
		collection.add(66.0);
		collection.add(22.0);
		collection.add(131.0);
		collection.add(68.0);
		collection.add(66.0);
		collection.add(110.0);
		collection.add(182.0);
		collection.add(137.0);
		collection.add(160.0);
		collection.add(61.0);
		collection.add(152.0);
		collection.add(146.0);
		collection.add(9.0);
		collection.add(34.0);
		collection.add(167.0);
		collection.add(144.0);
		collection.add(104.0);
		collection.add(80.0);
		collection.add(185.0);
		collection.add(106.0);
		collection.add(158.0);
		collection.add(155.0);
		collection.add(40.0);
		collection.add(158.0);
		collection.add(83.0);
		collection.add(30.0);
		collection.add(28.0);
		collection.add(181.0);
		collection.add(183.0);
		collection.add(3.0);
		collection.add(110.0);
		collection.add(180.0);
		collection.add(133.0);
		collection.add(4.0);
		collection.add(150.0);
		collection.add(165.0);
		collection.add(175.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(73.0);
		collection.add(45.0);
		collection.add(41.0);
		collection.add(116.0);
		collection.add(122.0);
		collection.add(144.0);
		collection.add(108.0);
		collection.add(141.0);
		collection.add(186.0);
		collection.add(61.0);
		collection.add(10.0);
		collection.add(70.0);
		collection.add(20.0);
		collection.add(150.0);
		collection.add(68.0);
		collection.add(108.0);
		collection.add(14.0);
		collection.add(58.0);
		collection.add(83.0);
		collection.add(98.0);
		collection.add(122.0);
		collection.add(200.0);
		collection.add(56.0);
		collection.add(143.0);
		collection.add(167.0);
		collection.add(170.0);
		collection.add(182.0);
		collection.add(30.0);
		collection.add(193.0);
		collection.add(83.0);
		collection.add(15.0);
		collection.add(158.0);
		collection.add(20.0);
		collection.add(93.0);
		collection.add(70.0);
		collection.add(44.0);
		collection.add(87.0);
		collection.add(105.0);
		collection.add(24.0);
		collection.add(58.0);
		collection.add(106.0);
		collection.add(154.0);
		collection.add(129.0);
		collection.add(128.0);
		collection.add(185.0);
		collection.add(70.0);
		collection.add(136.0);
		collection.add(76.0);
		collection.add(72.0);
		collection.add(75.0);
		collection.add(27.0);
		collection.add(8.0);
		collection.add(44.0);
		collection.add(140.0);
		collection.add(46.0);
		collection.add(33.0);
		collection.add(91.0);
		collection.add(143.0);
		collection.add(189.0);
		collection.add(26.0);
		collection.add(46.0);
		collection.add(23.0);
		collection.add(13.0);
		collection.add(69.0);
		collection.add(187.0);
		collection.add(118.0);
		collection.add(125.0);
		collection.add(135.0);
		collection.add(31.0);
		collection.add(197.0);
		collection.add(86.0);
		collection.add(152.0);
		collection.add(16.0);
		collection.add(180.0);
		collection.add(67.0);
		collection.add(135.0);
		collection.add(190.0);
		collection.add(17.0);
		collection.add(71.0);
		collection.add(119.0);
		collection.add(52.0);
		collection.add(111.0);
		collection.add(164.0);
		collection.add(91.0);
		collection.add(2.0);
		collection.add(79.0);
		collection.add(81.0);
		collection.add(99.0);
		collection.add(49.0);
		collection.add(160.0);
		collection.add(123.0);
		collection.add(32.0);
		collection.add(143.0);
		collection.add(172.0);
		collection.add(18.0);
		collection.add(12.0);
		collection.add(133.0);
		collection.add(178.0);
		collection.add(3.0);
		collection.add(37.0);
		collection.add(93.0);
		collection.add(16.0);
		collection.add(107.0);
		collection.add(25.0);
		collection.add(190.0);
		collection.add(173.0);
		collection.add(39.0);
		collection.add(42.0);
		collection.add(109.0);
		collection.add(168.0);
		collection.add(46.0);
		collection.add(154.0);
		collection.add(9.0);
		collection.add(5.0);
		collection.add(159.0);
		collection.add(82.0);
		collection.add(176.0);
		collection.add(61.0);
		collection.add(55.0);
		collection.add(134.0);
		collection.add(137.0);
		collection.add(83.0);
		collection.add(71.0);
		collection.add(165.0);
		collection.add(167.0);
		collection.add(28.0);
		collection.add(179.0);
		collection.add(166.0);
		collection.add(60.0);
		collection.add(64.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JVectorSequence(Blackhole bh) {
		bh.consume(collection.indexOf(51.0));
		bh.consume(collection.remove(141));
		bh.consume(collection.addAll(32, java.util.Arrays.asList(73.0,26.0,191.0,75.0,198.0,27.0,59.0,125.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,115.0,197.0,86.0,139.0,3.0)));
		bh.consume(collection.get(73));
		bh.consume(collection.contains(15.0));
		bh.consume(collection.indexOf(97.0));
		bh.consume(collection.get(111));
		bh.consume(collection.addAll(java.util.Arrays.asList(102.0,113.0,7.0,90.0,134.0,96.0,34.0)));
		bh.consume(collection.get(99));
		bh.consume(collection.indexOf(75.0));
		bh.consume(collection.lastIndexOf(1.0));
		bh.consume(collection.set(120, 194.0));
		collection.add(134.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,180.0,10.0,157.0)));
		collection.add(182.0);
		bh.consume(collection.indexOf(65.0));
		bh.consume(collection.indexOf(49.0));
		bh.consume(collection.get(13));
		bh.consume(collection.indexOf(21.0));
		bh.consume(collection.get(151));
		bh.consume(collection.get(24));
		collection.add(0, 150.0);
		bh.consume(collection.indexOf(191.0));
		collection.add(0, 91.0);
		bh.consume(collection.addAll(116, java.util.Arrays.asList(119.0,82.0,188.0,50.0,98.0,183.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(167.0,15.0,162.0,83.0,29.0,127.0,125.0,15.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(185.0,98.0,133.0)));
		collection.add(0, 118.0);
		bh.consume(collection.indexOf(78.0));
		bh.consume(collection.contains(33.0));
		bh.consume(collection.addAll(23, java.util.Arrays.asList(181.0,11.0,140.0,57.0,1.0,29.0,47.0,122.0,111.0)));
		bh.consume(collection.get(106));
		bh.consume(collection.indexOf(10.0));
		collection.add(112.0);
		collection.add(10.0);
		bh.consume(collection.get(150));
		bh.consume(collection.set(168, 80.0));
		bh.consume(collection.lastIndexOf(113.0));
		bh.consume(collection.indexOf(8.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(133.0,83.0,124.0,172.0,99.0)));
		bh.consume(collection.get(164));
		collection.add(22.0);
		bh.consume(collection.addAll(152, java.util.Arrays.asList(151.0,190.0,192.0,165.0,113.0,182.0)));
		collection.add(46, 84.0);
		collection.add(190, 48.0);
		bh.consume(collection.addAll(14, java.util.Arrays.asList(56.0,34.0,170.0)));
		collection.add(105, 189.0);
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.indexOf(102.0));
		bh.consume(collection.get(160));
		bh.consume(collection.set(198, 12.0));
		collection.add(0, 150.0);
		bh.consume(collection.addAll(165, java.util.Arrays.asList(18.0,171.0,72.0,139.0)));
		bh.consume(collection.remove(72));
		bh.consume(collection.addAll(142, java.util.Arrays.asList(76.0,143.0,163.0,156.0,47.0,154.0,190.0)));
		bh.consume(collection.contains(169.0));
		bh.consume(collection.get(120));
		bh.consume(collection.indexOf(100.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(109.0,160.0,183.0,66.0,64.0,34.0,93.0)));
		bh.consume(collection.addAll(81, java.util.Arrays.asList(171.0,182.0,80.0,93.0,1.0,193.0,190.0,165.0)));
		bh.consume(collection.addAll(64, java.util.Arrays.asList(98.0,136.0,16.0,47.0,145.0,67.0)));
		collection.add(0, 103.0);
		bh.consume(collection.remove(152));
		bh.consume(collection.addAll(java.util.Arrays.asList(195.0,66.0,48.0,79.0,48.0,80.0,8.0,9.0,182.0)));
		bh.consume(collection.indexOf(157.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(151.0,178.0,127.0,179.0,61.0,64.0,155.0)));
		bh.consume(collection.indexOf(183.0));
		bh.consume(collection.contains(121.0));
		collection.add(100.0);
		bh.consume(collection.contains(131.0));
		bh.consume(collection.addAll(193, java.util.Arrays.asList(58.0,164.0,28.0,131.0,136.0,199.0,123.0,93.0)));
		collection.remove(152.0);
		collection.add(59, 182.0);
		collection.add(0, 178.0);
		bh.consume(collection.contains(98.0));
		collection.add(81.0);
		bh.consume(collection.get(106));
		bh.consume(collection.lastIndexOf(1.0));
		bh.consume(collection.addAll(94, java.util.Arrays.asList(130.0,98.0,78.0,97.0,79.0,198.0,177.0,48.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(67.0,39.0,125.0)));
		bh.consume(collection.contains(7.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(187.0,186.0,66.0,109.0,44.0,188.0,163.0)));
		bh.consume(collection.remove(93));
		bh.consume(collection.indexOf(192.0));
		bh.consume(collection.remove(107));
		bh.consume(collection.get(48));
		bh.consume(collection.set(28, 107.0));
		bh.consume(collection.remove(40));
		bh.consume(collection.addAll(193, java.util.Arrays.asList(106.0,83.0,5.0,159.0,150.0,108.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(139.0,191.0,171.0,126.0,187.0,90.0,129.0)));
		collection.add(73, 19.0);
		bh.consume(collection.contains(1.0));
		bh.consume(collection.remove(69));
		bh.consume(collection.get(111));
		bh.consume(collection.set(49, 16.0));
		collection.remove(138.0);
		bh.consume(collection.indexOf(149.0));
		bh.consume(collection.lastIndexOf(139.0));
		bh.consume(collection.get(129));
		bh.consume(collection.addAll(java.util.Arrays.asList(158.0,122.0,48.0)));
		bh.consume(collection.remove(141));
		bh.consume(collection.lastIndexOf(43.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(170.0,147.0,18.0,114.0,159.0,77.0,91.0)));
		collection.add(0, 156.0);
		collection.add(178, 110.0);
		bh.consume(collection.addAll(83, java.util.Arrays.asList(64.0,177.0,171.0,98.0,126.0,53.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(101.0,183.0,70.0,56.0,164.0,31.0,187.0)));
		bh.consume(collection.contains(57.0));
		bh.consume(collection.lastIndexOf(183.0));
		bh.consume(collection.contains(189.0));
		collection.add(0, 65.0);
		bh.consume(collection.addAll(165, java.util.Arrays.asList(7.0,57.0,193.0,40.0)));
		collection.add(0, 48.0);
		bh.consume(collection.addAll(20, java.util.Arrays.asList(70.0,18.0,158.0,95.0,76.0,80.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(139.0,105.0,31.0,198.0,118.0,61.0,99.0,7.0,74.0)));
		bh.consume(collection.indexOf(12.0));
		bh.consume(collection.contains(21.0));
		collection.add(84, 84.0);
		bh.consume(collection.indexOf(61.0));
		bh.consume(collection.addAll(185, java.util.Arrays.asList(63.0,38.0,13.0,112.0,85.0)));
		bh.consume(collection.addAll(84, java.util.Arrays.asList(151.0,35.0,194.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(5.0,183.0,183.0,67.0,134.0,114.0)));
		bh.consume(collection.lastIndexOf(124.0));
		bh.consume(collection.indexOf(20.0));
		collection.add(0, 145.0);
		collection.add(113.0);
		bh.consume(collection.contains(155.0));
		bh.consume(collection.addAll(159, java.util.Arrays.asList(96.0,92.0,146.0,102.0,94.0,32.0,185.0,172.0,67.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,63.0,53.0,103.0,115.0,60.0)));
		bh.consume(collection.addAll(184, java.util.Arrays.asList(145.0,107.0,44.0,30.0,136.0,17.0)));
		bh.consume(collection.lastIndexOf(7.0));
		bh.consume(collection.indexOf(43.0));
		bh.consume(collection.addAll(24, java.util.Arrays.asList(80.0,16.0,118.0,169.0)));
		bh.consume(collection.get(57));
		bh.consume(collection.addAll(95, java.util.Arrays.asList(168.0,86.0,196.0,46.0,126.0,17.0)));
		bh.consume(collection.contains(197.0));
		bh.consume(collection.indexOf(130.0));
		collection.add(0, 160.0);
		bh.consume(collection.set(156, 185.0));
		bh.consume(collection.remove(93));
		bh.consume(collection.lastIndexOf(8.0));
		bh.consume(collection.get(172));
		bh.consume(collection.addAll(77, java.util.Arrays.asList(98.0,129.0,174.0,199.0,133.0)));
		bh.consume(collection.contains(3.0));
		bh.consume(collection.addAll(145, java.util.Arrays.asList(76.0,58.0,34.0)));
		bh.consume(collection.remove(193));
		bh.consume(collection.indexOf(66.0));
		bh.consume(collection.contains(11.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(168.0,102.0,153.0,72.0,187.0)));
		bh.consume(collection.remove(176));
		bh.consume(collection.remove(163));
		collection.add(159.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(177.0,114.0,59.0,88.0,195.0)));
		collection.add(163.0);
		bh.consume(collection.get(138));
		collection.add(0, 20.0);
		bh.consume(collection.indexOf(171.0));
		collection.add(31.0);
		bh.consume(collection.addAll(81, java.util.Arrays.asList(151.0,91.0,48.0,45.0,25.0,24.0,187.0)));
		bh.consume(collection.indexOf(166.0));
		bh.consume(collection.indexOf(119.0));
		bh.consume(collection.remove(129));
		bh.consume(collection.contains(197.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(164.0,37.0,26.0,100.0,172.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,44.0,101.0,76.0,77.0,8.0,1.0)));
		bh.consume(collection.set(131, 27.0));
		bh.consume(collection.remove(55));
		bh.consume(collection.contains(131.0));
		collection.add(0, 63.0);
		bh.consume(collection.indexOf(173.0));
		bh.consume(collection.indexOf(177.0));
		bh.consume(collection.set(4, 132.0));
		bh.consume(collection.indexOf(25.0));
		collection.add(119.0);
		bh.consume(collection.indexOf(134.0));
		bh.consume(collection.indexOf(183.0));
		bh.consume(collection.contains(97.0));
		bh.consume(collection.get(42));
		bh.consume(collection.addAll(159, java.util.Arrays.asList(153.0,35.0,24.0,11.0,187.0,117.0,164.0)));
		bh.consume(collection.set(9, 17.0));
		bh.consume(collection.indexOf(140.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(87.0,129.0,183.0,77.0,37.0,52.0,154.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(171.0,33.0,66.0,102.0,143.0,141.0)));
		bh.consume(collection.lastIndexOf(167.0));
		bh.consume(collection.indexOf(178.0));
		bh.consume(collection.contains(101.0));
		bh.consume(collection.get(109));
		collection.add(105.0);
		bh.consume(collection.get(153));
		bh.consume(collection.indexOf(183.0));
		collection.add(5.0);
		bh.consume(collection.indexOf(38.0));
		bh.consume(collection.indexOf(156.0));
		bh.consume(collection.set(55, 27.0));
		bh.consume(collection.contains(136.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(57.0,144.0,160.0,66.0,16.0,42.0,116.0,103.0,73.0)));
		bh.consume(collection.get(33));
		bh.consume(collection.addAll(70, java.util.Arrays.asList(7.0,36.0,187.0,179.0,22.0,102.0,85.0,137.0,65.0)));
		bh.consume(collection.addAll(23, java.util.Arrays.asList(177.0,131.0,33.0,159.0,88.0,11.0,71.0)));
		bh.consume(collection.get(68));
		collection.add(43.0);
		bh.consume(collection.indexOf(65.0));
		bh.consume(collection.addAll(62, java.util.Arrays.asList(109.0,81.0,127.0,106.0,100.0,162.0,82.0)));
		bh.consume(collection.get(149));
		bh.consume(collection.addAll(54, java.util.Arrays.asList(26.0,157.0,78.0,180.0,40.0,15.0,55.0)));
		bh.consume(collection.addAll(152, java.util.Arrays.asList(166.0,179.0,106.0,39.0)));
		bh.consume(collection.set(78, 45.0));
		bh.consume(collection.indexOf(154.0));
		collection.add(0, 48.0);
		bh.consume(collection.indexOf(89.0));
		bh.consume(collection.contains(71.0));
		bh.consume(collection.lastIndexOf(69.0));
		bh.consume(collection.lastIndexOf(178.0));
		collection.add(0, 163.0);
		bh.consume(collection.addAll(100, java.util.Arrays.asList(12.0,128.0,15.0,147.0,169.0,151.0,76.0,79.0,158.0)));
		bh.consume(collection.indexOf(74.0));
		bh.consume(collection.indexOf(163.0));
		collection.add(154, 35.0);
		bh.consume(collection.addAll(132, java.util.Arrays.asList(192.0,95.0,12.0,86.0)));
		bh.consume(collection.indexOf(78.0));
		bh.consume(collection.addAll(25, java.util.Arrays.asList(83.0,142.0,179.0,56.0,51.0,29.0,175.0)));
		collection.add(0, 28.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(27.0,18.0,21.0,135.0,183.0,16.0,61.0,125.0,200.0)));
		bh.consume(collection.indexOf(170.0));
		bh.consume(collection.contains(17.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(168.0,136.0,175.0,29.0,10.0)));
		bh.consume(collection.get(109));
		bh.consume(collection.indexOf(61.0));
		collection.add(20.0);
		bh.consume(collection.lastIndexOf(14.0));
		collection.add(195, 40.0);
		bh.consume(collection.get(70));
		bh.consume(collection.remove(131));
		bh.consume(collection.contains(42.0));
		collection.add(69.0);
		bh.consume(collection.remove(195));
		bh.consume(collection.indexOf(36.0));
		collection.add(24, 168.0);
		collection.add(146, 22.0);
		bh.consume(collection.addAll(61, java.util.Arrays.asList(97.0,194.0,90.0,120.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(14.0,165.0,106.0,87.0,57.0,194.0,36.0,148.0,160.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(85.0,90.0,144.0,99.0,56.0,9.0,97.0,134.0)));
		collection.add(0, 76.0);
		bh.consume(collection.contains(129.0));
		collection.remove(9.0);
		bh.consume(collection.indexOf(35.0));
		bh.consume(collection.indexOf(24.0));
		collection.add(95.0);
		collection.add(103.0);
		collection.add(194.0);
		bh.consume(collection.indexOf(58.0));
		bh.consume(collection.get(69));
		bh.consume(collection.remove(9));
		bh.consume(collection.addAll(java.util.Arrays.asList(182.0,153.0,115.0,117.0,32.0,169.0,59.0,108.0,164.0)));
		bh.consume(collection.addAll(53, java.util.Arrays.asList(33.0,31.0,188.0,78.0,178.0,185.0,34.0)));
		bh.consume(collection.indexOf(186.0));
		bh.consume(collection.contains(30.0));
		bh.consume(collection.indexOf(153.0));
		bh.consume(collection.set(109, 23.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(81.0,2.0,89.0)));
		collection.add(0, 198.0);
		bh.consume(collection.contains(135.0));
		bh.consume(collection.remove(64));
		bh.consume(collection.set(48, 27.0));
		bh.consume(collection.remove(48));
		bh.consume(collection.get(147));
		bh.consume(collection.indexOf(11.0));
		bh.consume(collection.indexOf(187.0));
		bh.consume(collection.addAll(131, java.util.Arrays.asList(162.0,14.0,163.0)));
		bh.consume(collection.remove(68));
		collection.add(141, 84.0);
		bh.consume(collection.set(5, 4.0));
		bh.consume(collection.get(58));
		bh.consume(collection.addAll(java.util.Arrays.asList(187.0,105.0,108.0,88.0,106.0,89.0,35.0,27.0)));
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.get(8));
		bh.consume(collection.addAll(10, java.util.Arrays.asList(21.0,9.0,99.0,189.0,36.0,168.0,49.0)));
		bh.consume(collection.set(135, 142.0));
		bh.consume(collection.indexOf(19.0));
		bh.consume(collection.lastIndexOf(175.0));
		bh.consume(collection.indexOf(117.0));
		bh.consume(collection.remove(50));
		bh.consume(collection.indexOf(121.0));
		bh.consume(collection.remove(125));
		bh.consume(collection.addAll(java.util.Arrays.asList(58.0,191.0,21.0,176.0,59.0,69.0)));
		collection.add(0, 139.0);
		bh.consume(collection.indexOf(179.0));
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(79.0,39.0,192.0,79.0,189.0,77.0,149.0)));
		bh.consume(collection.remove(99));
		collection.add(0, 180.0);
		collection.add(139.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(178.0,46.0,165.0)));
		bh.consume(collection.addAll(70, java.util.Arrays.asList(75.0,111.0,7.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(3.0,71.0,72.0,163.0)));
		collection.add(159.0);
		collection.add(0, 62.0);
		bh.consume(collection.lastIndexOf(186.0));
		bh.consume(collection.contains(4.0));
		bh.consume(collection.addAll(73, java.util.Arrays.asList(182.0,128.0,89.0,24.0,135.0,61.0,133.0)));
		bh.consume(collection.addAll(195, java.util.Arrays.asList(1.0,102.0,108.0)));
		bh.consume(collection.indexOf(96.0));
		bh.consume(collection.contains(148.0));
		bh.consume(collection.indexOf(20.0));
		bh.consume(collection.contains(152.0));
		collection.add(0, 83.0);
		bh.consume(collection.indexOf(118.0));
		bh.consume(collection.indexOf(110.0));
		bh.consume(collection.indexOf(45.0));
		bh.consume(collection.set(140, 170.0));
		bh.consume(collection.indexOf(199.0));
		bh.consume(collection.addAll(154, java.util.Arrays.asList(75.0,51.0,62.0,130.0,36.0,12.0,84.0,157.0,145.0)));
		collection.add(137, 77.0);
		collection.add(49.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(24.0,182.0,188.0,124.0,71.0,110.0,59.0)));
		bh.consume(collection.get(18));
		collection.add(144.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(153.0,111.0,169.0,197.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(33.0,85.0,146.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(52.0,181.0,180.0,171.0,6.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(162.0,118.0,19.0,165.0,104.0,196.0,45.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,177.0,104.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(58.0,44.0,19.0,171.0,45.0,172.0,145.0,64.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,135.0,6.0,187.0,75.0)));
		bh.consume(collection.contains(29.0));
		collection.add(77.0);
		bh.consume(collection.indexOf(161.0));
		bh.consume(collection.indexOf(101.0));
		bh.consume(collection.indexOf(176.0));
		bh.consume(collection.addAll(84, java.util.Arrays.asList(198.0,158.0,71.0,187.0,192.0,139.0,39.0,27.0,151.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(92.0,154.0,168.0,171.0)));
		bh.consume(collection.get(63));
		bh.consume(collection.remove(67));
		bh.consume(collection.addAll(java.util.Arrays.asList(49.0,128.0,23.0,58.0,40.0,164.0,5.0,76.0,84.0)));
		collection.add(0, 112.0);
		bh.consume(collection.contains(149.0));
		collection.add(0, 109.0);
		bh.consume(collection.addAll(191, java.util.Arrays.asList(170.0,55.0,127.0)));
		bh.consume(collection.contains(37.0));
		collection.add(90.0);
		collection.add(0, 111.0);
		bh.consume(collection.indexOf(49.0));
		bh.consume(collection.get(143));
		bh.consume(collection.indexOf(120.0));
		bh.consume(collection.remove(50));
		bh.consume(collection.addAll(java.util.Arrays.asList(88.0,1.0,63.0,145.0,199.0)));
		bh.consume(collection.set(81, 187.0));
		bh.consume(collection.indexOf(25.0));
		bh.consume(collection.indexOf(29.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,140.0,168.0,108.0,127.0,84.0,78.0)));
		collection.add(108.0);
		bh.consume(collection.indexOf(170.0));
		bh.consume(collection.contains(112.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(132.0,175.0,20.0,120.0,12.0,138.0,22.0,106.0,11.0)));
		bh.consume(collection.get(124));
		bh.consume(collection.addAll(190, java.util.Arrays.asList(80.0,123.0,169.0,191.0)));
		bh.consume(collection.get(98));
		bh.consume(collection.addAll(java.util.Arrays.asList(112.0,62.0,20.0,29.0,16.0,92.0,161.0,13.0)));
		bh.consume(collection.indexOf(130.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(22.0,109.0,151.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(103.0,106.0,19.0,144.0,52.0,131.0,125.0,173.0)));
		bh.consume(collection.indexOf(13.0));
		bh.consume(collection.remove(10));
		bh.consume(collection.addAll(java.util.Arrays.asList(174.0,5.0,12.0,24.0,164.0,139.0,74.0)));
		bh.consume(collection.get(197));
		bh.consume(collection.contains(12.0));
		collection.add(16.0);
		bh.consume(collection.remove(5));
		bh.consume(collection.contains(177.0));
		collection.add(60.0);
		collection.add(147.0);
		bh.consume(collection.indexOf(70.0));
		bh.consume(collection.addAll(9, java.util.Arrays.asList(35.0,149.0,100.0,12.0,29.0)));
		bh.consume(collection.addAll(35, java.util.Arrays.asList(5.0,87.0,92.0,67.0,44.0,24.0,160.0,66.0)));
		bh.consume(collection.get(186));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,138.0,99.0,89.0,120.0)));
		bh.consume(collection.lastIndexOf(140.0));
		collection.add(0, 162.0);
		collection.add(59, 13.0);
		bh.consume(collection.remove(8));
		collection.add(0, 26.0);
		bh.consume(collection.get(24));
		bh.consume(collection.indexOf(102.0));
		bh.consume(collection.get(49));
		collection.add(0, 167.0);
		bh.consume(collection.lastIndexOf(12.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(142.0,125.0,16.0,37.0,24.0,157.0)));
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.set(54, 83.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(165.0,61.0,178.0,160.0,21.0)));
		bh.consume(collection.get(116));
		bh.consume(collection.addAll(java.util.Arrays.asList(130.0,147.0,131.0,126.0,13.0)));
		collection.add(24, 25.0);
		collection.add(98.0);
		collection.add(25, 72.0);
		bh.consume(collection.get(198));
		bh.consume(collection.addAll(16, java.util.Arrays.asList(132.0,128.0,61.0,200.0,195.0,55.0,64.0)));
		bh.consume(collection.remove(175));
		collection.add(0, 123.0);
		bh.consume(collection.indexOf(71.0));
		bh.consume(collection.remove(130));
		collection.add(85, 16.0);
		bh.consume(collection.addAll(20, java.util.Arrays.asList(49.0,74.0,52.0,195.0,108.0)));
		bh.consume(collection.contains(131.0));
		bh.consume(collection.addAll(152, java.util.Arrays.asList(131.0,29.0,150.0,93.0)));
		bh.consume(collection.contains(124.0));
		collection.add(183.0);
		collection.add(0, 20.0);
		bh.consume(collection.addAll(155, java.util.Arrays.asList(80.0,193.0,63.0)));
		bh.consume(collection.remove(45));
		bh.consume(collection.remove(180));
		bh.consume(collection.indexOf(19.0));
		bh.consume(collection.addAll(135, java.util.Arrays.asList(81.0,115.0,37.0,3.0,154.0)));
		bh.consume(collection.remove(23));
		collection.add(25.0);
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.indexOf(109.0));
		bh.consume(collection.indexOf(196.0));
		bh.consume(collection.get(165));
		collection.add(33, 95.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(79.0,156.0,114.0,30.0,87.0,119.0,83.0,1.0)));
		bh.consume(collection.set(168, 60.0));
		bh.consume(collection.indexOf(95.0));
		bh.consume(collection.addAll(13, java.util.Arrays.asList(137.0,196.0,199.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(2.0,124.0,84.0,71.0)));
		collection.add(0, 199.0);
		bh.consume(collection.indexOf(80.0));
		collection.add(0, 66.0);
		bh.consume(collection.indexOf(10.0));
		bh.consume(collection.get(199));
		bh.consume(collection.addAll(java.util.Arrays.asList(163.0,65.0,133.0,18.0,34.0)));
		bh.consume(collection.addAll(141, java.util.Arrays.asList(117.0,147.0,155.0,145.0,117.0)));
		collection.add(0, 25.0);
		bh.consume(collection.get(30));
		bh.consume(collection.addAll(java.util.Arrays.asList(116.0,63.0,69.0,125.0,92.0,100.0,128.0,74.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(180.0,112.0,7.0)));
		bh.consume(collection.remove(111));
		bh.consume(collection.addAll(java.util.Arrays.asList(190.0,123.0,60.0,5.0,109.0)));
		collection.add(143, 171.0);
		bh.consume(collection.addAll(196, java.util.Arrays.asList(46.0,4.0,100.0,26.0,148.0)));
		bh.consume(collection.get(185));
		bh.consume(collection.addAll(java.util.Arrays.asList(106.0,146.0,31.0,24.0,43.0,129.0,90.0,33.0)));
		bh.consume(collection.contains(134.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(13.0,180.0,94.0,127.0,85.0)));
		bh.consume(collection.indexOf(128.0));
		bh.consume(collection.get(190));
		collection.add(88.0);
		collection.add(8.0);
		bh.consume(collection.get(135));
		bh.consume(collection.indexOf(43.0));
		bh.consume(collection.get(188));
		bh.consume(collection.get(158));
		bh.consume(collection.indexOf(83.0));
		bh.consume(collection.indexOf(60.0));
		collection.add(58.0);
		bh.consume(collection.indexOf(77.0));
		bh.consume(collection.remove(135));
		bh.consume(collection.addAll(65, java.util.Arrays.asList(77.0,74.0,158.0,66.0,24.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(191.0,91.0,4.0,100.0,63.0)));
		bh.consume(collection.remove(30));
		bh.consume(collection.indexOf(109.0));
		bh.consume(collection.addAll(63, java.util.Arrays.asList(184.0,27.0,42.0,156.0,99.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(13.0,40.0,40.0)));
		bh.consume(collection.set(6, 103.0));
		bh.consume(collection.contains(92.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(149.0,55.0,140.0,133.0,35.0,115.0,163.0)));
		bh.consume(collection.get(6));
		bh.consume(collection.addAll(java.util.Arrays.asList(103.0,154.0,196.0,26.0,192.0,36.0,118.0)));
		bh.consume(collection.get(48));
		bh.consume(collection.addAll(56, java.util.Arrays.asList(133.0,144.0,88.0,51.0,126.0,90.0)));
		bh.consume(collection.indexOf(197.0));
		collection.add(18.0);
		bh.consume(collection.indexOf(67.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(195.0,179.0,107.0,11.0,108.0,47.0,89.0,60.0)));
		collection.add(49, 42.0);
		bh.consume(collection.addAll(96, java.util.Arrays.asList(38.0,35.0,129.0,154.0,183.0,8.0,61.0)));
		collection.add(0, 138.0);
		bh.consume(collection.indexOf(144.0));
		bh.consume(collection.contains(169.0));
		bh.consume(collection.remove(186));
		collection.add(72.0);
		bh.consume(collection.set(167, 13.0));
		bh.consume(collection.indexOf(80.0));
		bh.consume(collection.remove(192));
		bh.consume(collection.contains(181.0));
		bh.consume(collection.addAll(41, java.util.Arrays.asList(107.0,24.0,133.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(79.0,14.0,86.0,81.0,136.0,44.0,199.0,38.0)));
		bh.consume(collection.indexOf(75.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(3.0,33.0,157.0,147.0,52.0,147.0,39.0,56.0,172.0)));
		bh.consume(collection.lastIndexOf(121.0));
		bh.consume(collection.lastIndexOf(86.0));
		bh.consume(collection.set(135, 156.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(44.0,98.0,151.0,10.0,145.0,51.0,79.0,79.0,108.0)));
		bh.consume(collection.addAll(28, java.util.Arrays.asList(172.0,70.0,186.0,72.0,79.0,91.0,85.0,131.0,8.0)));
		bh.consume(collection.set(50, 38.0));
		bh.consume(collection.set(33, 17.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(19.0,122.0,94.0,193.0,119.0,53.0,104.0,198.0,98.0)));
		bh.consume(collection.indexOf(144.0));
		bh.consume(collection.contains(53.0));
	}
}
