package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile1AllSequences_JVectorSequence_20220501132110079 {
	java.util.Vector<Double> collection = new java.util.Vector<>();
	@Setup(Level.Invocation)
	public void setupJVectorSequence() {
		collection = new java.util.Vector<>();
		collection.add(182.0);
		collection.add(133.0);
		collection.add(91.0);
		collection.add(152.0);
		collection.add(170.0);
		collection.add(4.0);
		collection.add(56.0);
		collection.add(120.0);
		collection.add(53.0);
		collection.add(88.0);
		collection.add(179.0);
		collection.add(139.0);
		collection.add(190.0);
		collection.add(36.0);
		collection.add(126.0);
		collection.add(23.0);
		collection.add(98.0);
		collection.add(32.0);
		collection.add(67.0);
		collection.add(80.0);
		collection.add(113.0);
		collection.add(15.0);
		collection.add(141.0);
		collection.add(200.0);
		collection.add(161.0);
		collection.add(165.0);
		collection.add(49.0);
		collection.add(166.0);
		collection.add(18.0);
		collection.add(88.0);
		collection.add(138.0);
		collection.add(23.0);
		collection.add(95.0);
		collection.add(39.0);
		collection.add(90.0);
		collection.add(97.0);
		collection.add(39.0);
		collection.add(174.0);
		collection.add(51.0);
		collection.add(116.0);
		collection.add(103.0);
		collection.add(159.0);
		collection.add(65.0);
		collection.add(51.0);
		collection.add(79.0);
		collection.add(55.0);
		collection.add(111.0);
		collection.add(1.0);
		collection.add(183.0);
		collection.add(195.0);
		collection.add(34.0);
		collection.add(56.0);
		collection.add(98.0);
		collection.add(85.0);
		collection.add(194.0);
		collection.add(66.0);
		collection.add(70.0);
		collection.add(192.0);
		collection.add(92.0);
		collection.add(168.0);
		collection.add(27.0);
		collection.add(173.0);
		collection.add(141.0);
		collection.add(113.0);
		collection.add(66.0);
		collection.add(25.0);
		collection.add(200.0);
		collection.add(93.0);
		collection.add(24.0);
		collection.add(34.0);
		collection.add(158.0);
		collection.add(192.0);
		collection.add(19.0);
		collection.add(187.0);
		collection.add(63.0);
		collection.add(31.0);
		collection.add(173.0);
		collection.add(135.0);
		collection.add(140.0);
		collection.add(92.0);
		collection.add(6.0);
		collection.add(77.0);
		collection.add(118.0);
		collection.add(187.0);
		collection.add(181.0);
		collection.add(96.0);
		collection.add(139.0);
		collection.add(92.0);
		collection.add(177.0);
		collection.add(74.0);
		collection.add(67.0);
		collection.add(66.0);
		collection.add(166.0);
		collection.add(114.0);
		collection.add(105.0);
		collection.add(34.0);
		collection.add(91.0);
		collection.add(67.0);
		collection.add(116.0);
		collection.add(193.0);
		collection.add(164.0);
		collection.add(134.0);
		collection.add(82.0);
		collection.add(59.0);
		collection.add(146.0);
		collection.add(96.0);
		collection.add(92.0);
		collection.add(156.0);
		collection.add(72.0);
		collection.add(184.0);
		collection.add(84.0);
		collection.add(174.0);
		collection.add(62.0);
		collection.add(13.0);
		collection.add(162.0);
		collection.add(99.0);
		collection.add(148.0);
		collection.add(20.0);
		collection.add(130.0);
		collection.add(7.0);
		collection.add(96.0);
		collection.add(109.0);
		collection.add(23.0);
		collection.add(94.0);
		collection.add(78.0);
		collection.add(175.0);
		collection.add(139.0);
		collection.add(186.0);
		collection.add(33.0);
		collection.add(118.0);
		collection.add(27.0);
		collection.add(124.0);
		collection.add(26.0);
		collection.add(171.0);
		collection.add(55.0);
		collection.add(181.0);
		collection.add(85.0);
		collection.add(87.0);
		collection.add(88.0);
		collection.add(166.0);
		collection.add(87.0);
		collection.add(192.0);
		collection.add(21.0);
		collection.add(94.0);
		collection.add(60.0);
		collection.add(138.0);
		collection.add(127.0);
		collection.add(144.0);
		collection.add(137.0);
		collection.add(13.0);
		collection.add(102.0);
		collection.add(72.0);
		collection.add(58.0);
		collection.add(103.0);
		collection.add(94.0);
		collection.add(103.0);
		collection.add(96.0);
		collection.add(77.0);
		collection.add(74.0);
		collection.add(169.0);
		collection.add(73.0);
		collection.add(176.0);
		collection.add(30.0);
		collection.add(114.0);
		collection.add(142.0);
		collection.add(175.0);
		collection.add(82.0);
		collection.add(20.0);
		collection.add(43.0);
		collection.add(193.0);
		collection.add(67.0);
		collection.add(108.0);
		collection.add(172.0);
		collection.add(181.0);
		collection.add(130.0);
		collection.add(51.0);
		collection.add(17.0);
		collection.add(75.0);
		collection.add(198.0);
		collection.add(182.0);
		collection.add(16.0);
		collection.add(155.0);
		collection.add(70.0);
		collection.add(136.0);
		collection.add(145.0);
		collection.add(4.0);
		collection.add(164.0);
		collection.add(199.0);
		collection.add(28.0);
		collection.add(70.0);
		collection.add(17.0);
		collection.add(93.0);
		collection.add(195.0);
		collection.add(179.0);
		collection.add(184.0);
		collection.add(126.0);
		collection.add(198.0);
		collection.add(21.0);
		collection.add(109.0);
		collection.add(37.0);
		collection.add(89.0);
		collection.add(108.0);
		collection.add(12.0);
		collection.add(40.0);
		collection.add(103.0);
		collection.add(56.0);
		collection.add(17.0);
		collection.add(12.0);
		collection.add(82.0);
		collection.add(69.0);
		collection.add(37.0);
		collection.add(75.0);
		collection.add(69.0);
		collection.add(186.0);
		collection.add(149.0);
		collection.add(54.0);
		collection.add(200.0);
		collection.add(143.0);
		collection.add(164.0);
		collection.add(190.0);
		collection.add(107.0);
		collection.add(92.0);
		collection.add(106.0);
		collection.add(193.0);
		collection.add(3.0);
		collection.add(110.0);
		collection.add(88.0);
		collection.add(16.0);
		collection.add(50.0);
		collection.add(61.0);
		collection.add(67.0);
		collection.add(187.0);
		collection.add(107.0);
		collection.add(57.0);
		collection.add(88.0);
		collection.add(5.0);
		collection.add(68.0);
		collection.add(158.0);
		collection.add(115.0);
		collection.add(70.0);
		collection.add(4.0);
		collection.add(64.0);
		collection.add(164.0);
		collection.add(37.0);
		collection.add(1.0);
		collection.add(186.0);
		collection.add(75.0);
		collection.add(70.0);
		collection.add(81.0);
		collection.add(194.0);
		collection.add(5.0);
		collection.add(89.0);
		collection.add(110.0);
		collection.add(84.0);
		collection.add(14.0);
		collection.add(31.0);
		collection.add(164.0);
		collection.add(153.0);
		collection.add(159.0);
		collection.add(177.0);
		collection.add(20.0);
		collection.add(168.0);
		collection.add(118.0);
		collection.add(122.0);
		collection.add(23.0);
		collection.add(153.0);
		collection.add(44.0);
		collection.add(52.0);
		collection.add(31.0);
		collection.add(34.0);
		collection.add(158.0);
		collection.add(181.0);
		collection.add(29.0);
		collection.add(102.0);
		collection.add(135.0);
		collection.add(68.0);
		collection.add(82.0);
		collection.add(36.0);
		collection.add(59.0);
		collection.add(144.0);
		collection.add(168.0);
		collection.add(129.0);
		collection.add(29.0);
		collection.add(2.0);
		collection.add(180.0);
		collection.add(70.0);
		collection.add(25.0);
		collection.add(3.0);
		collection.add(127.0);
		collection.add(194.0);
		collection.add(2.0);
		collection.add(194.0);
		collection.add(73.0);
		collection.add(112.0);
		collection.add(49.0);
		collection.add(24.0);
		collection.add(164.0);
		collection.add(146.0);
		collection.add(192.0);
		collection.add(111.0);
		collection.add(163.0);
		collection.add(89.0);
		collection.add(143.0);
		collection.add(51.0);
		collection.add(131.0);
		collection.add(161.0);
		collection.add(17.0);
		collection.add(109.0);
		collection.add(120.0);
		collection.add(100.0);
		collection.add(148.0);
		collection.add(92.0);
		collection.add(142.0);
		collection.add(98.0);
		collection.add(125.0);
		collection.add(112.0);
		collection.add(28.0);
		collection.add(86.0);
		collection.add(61.0);
		collection.add(29.0);
		collection.add(30.0);
		collection.add(93.0);
		collection.add(13.0);
		collection.add(52.0);
		collection.add(151.0);
		collection.add(200.0);
		collection.add(156.0);
		collection.add(163.0);
		collection.add(63.0);
		collection.add(30.0);
		collection.add(169.0);
		collection.add(82.0);
		collection.add(196.0);
		collection.add(59.0);
		collection.add(178.0);
		collection.add(121.0);
		collection.add(16.0);
		collection.add(5.0);
		collection.add(125.0);
		collection.add(166.0);
		collection.add(57.0);
		collection.add(40.0);
		collection.add(196.0);
		collection.add(192.0);
		collection.add(166.0);
		collection.add(176.0);
		collection.add(185.0);
		collection.add(181.0);
		collection.add(108.0);
		collection.add(70.0);
		collection.add(116.0);
		collection.add(55.0);
		collection.add(34.0);
		collection.add(163.0);
		collection.add(138.0);
		collection.add(91.0);
		collection.add(28.0);
		collection.add(176.0);
		collection.add(113.0);
		collection.add(7.0);
		collection.add(43.0);
		collection.add(93.0);
		collection.add(62.0);
		collection.add(133.0);
		collection.add(91.0);
		collection.add(106.0);
		collection.add(9.0);
		collection.add(43.0);
		collection.add(154.0);
		collection.add(127.0);
		collection.add(180.0);
		collection.add(142.0);
		collection.add(11.0);
		collection.add(85.0);
		collection.add(141.0);
		collection.add(86.0);
		collection.add(120.0);
		collection.add(53.0);
		collection.add(48.0);
		collection.add(42.0);
		collection.add(16.0);
		collection.add(163.0);
		collection.add(123.0);
		collection.add(110.0);
		collection.add(63.0);
		collection.add(132.0);
		collection.add(64.0);
		collection.add(108.0);
		collection.add(189.0);
		collection.add(84.0);
		collection.add(109.0);
		collection.add(152.0);
		collection.add(43.0);
		collection.add(98.0);
		collection.add(135.0);
		collection.add(95.0);
		collection.add(200.0);
		collection.add(129.0);
		collection.add(138.0);
		collection.add(153.0);
		collection.add(146.0);
		collection.add(35.0);
		collection.add(167.0);
		collection.add(15.0);
		collection.add(24.0);
		collection.add(186.0);
		collection.add(151.0);
		collection.add(166.0);
		collection.add(107.0);
		collection.add(20.0);
		collection.add(156.0);
		collection.add(172.0);
		collection.add(65.0);
		collection.add(32.0);
		collection.add(120.0);
		collection.add(5.0);
		collection.add(21.0);
		collection.add(102.0);
		collection.add(195.0);
		collection.add(82.0);
		collection.add(176.0);
		collection.add(139.0);
		collection.add(79.0);
		collection.add(23.0);
		collection.add(103.0);
		collection.add(158.0);
		collection.add(18.0);
		collection.add(73.0);
		collection.add(105.0);
		collection.add(101.0);
		collection.add(96.0);
		collection.add(22.0);
		collection.add(56.0);
		collection.add(1.0);
		collection.add(65.0);
		collection.add(59.0);
		collection.add(71.0);
		collection.add(101.0);
		collection.add(61.0);
		collection.add(141.0);
		collection.add(153.0);
		collection.add(62.0);
		collection.add(180.0);
		collection.add(98.0);
		collection.add(183.0);
		collection.add(11.0);
		collection.add(165.0);
		collection.add(170.0);
		collection.add(76.0);
		collection.add(33.0);
		collection.add(158.0);
		collection.add(95.0);
		collection.add(123.0);
		collection.add(89.0);
		collection.add(170.0);
		collection.add(65.0);
		collection.add(34.0);
		collection.add(119.0);
		collection.add(165.0);
		collection.add(126.0);
		collection.add(170.0);
		collection.add(39.0);
		collection.add(184.0);
		collection.add(181.0);
		collection.add(84.0);
		collection.add(42.0);
		collection.add(176.0);
		collection.add(64.0);
		collection.add(127.0);
		collection.add(199.0);
		collection.add(126.0);
		collection.add(54.0);
		collection.add(154.0);
		collection.add(91.0);
		collection.add(105.0);
		collection.add(137.0);
		collection.add(29.0);
		collection.add(95.0);
		collection.add(140.0);
		collection.add(183.0);
		collection.add(175.0);
		collection.add(53.0);
		collection.add(192.0);
		collection.add(190.0);
		collection.add(50.0);
		collection.add(95.0);
		collection.add(167.0);
		collection.add(59.0);
		collection.add(85.0);
		collection.add(163.0);
		collection.add(81.0);
		collection.add(141.0);
		collection.add(43.0);
		collection.add(98.0);
		collection.add(30.0);
		collection.add(33.0);
		collection.add(81.0);
		collection.add(121.0);
		collection.add(42.0);
		collection.add(25.0);
		collection.add(1.0);
		collection.add(155.0);
		collection.add(117.0);
		collection.add(191.0);
		collection.add(131.0);
		collection.add(69.0);
		collection.add(54.0);
		collection.add(139.0);
		collection.add(59.0);
		collection.add(186.0);
		collection.add(60.0);
		collection.add(112.0);
		collection.add(90.0);
		collection.add(122.0);
		collection.add(101.0);
		collection.add(47.0);
		collection.add(200.0);
		collection.add(173.0);
		collection.add(155.0);
		collection.add(161.0);
		collection.add(22.0);
		collection.add(83.0);
		collection.add(141.0);
		collection.add(142.0);
		collection.add(87.0);
		collection.add(137.0);
		collection.add(198.0);
		collection.add(146.0);
		collection.add(177.0);
		collection.add(150.0);
		collection.add(200.0);
		collection.add(92.0);
		collection.add(157.0);
		collection.add(16.0);
		collection.add(154.0);
		collection.add(100.0);
		collection.add(120.0);
		collection.add(33.0);
		collection.add(62.0);
		collection.add(119.0);
		collection.add(158.0);
		collection.add(142.0);
		collection.add(4.0);
		collection.add(37.0);
		collection.add(117.0);
		collection.add(15.0);
		collection.add(97.0);
		collection.add(36.0);
		collection.add(33.0);
		collection.add(180.0);
		collection.add(76.0);
		collection.add(5.0);
		collection.add(122.0);
		collection.add(137.0);
		collection.add(184.0);
		collection.add(195.0);
		collection.add(132.0);
		collection.add(163.0);
		collection.add(3.0);
		collection.add(166.0);
		collection.add(51.0);
		collection.add(111.0);
		collection.add(70.0);
		collection.add(151.0);
		collection.add(157.0);
		collection.add(91.0);
		collection.add(23.0);
		collection.add(127.0);
		collection.add(191.0);
		collection.add(55.0);
		collection.add(186.0);
		collection.add(49.0);
		collection.add(90.0);
		collection.add(102.0);
		collection.add(103.0);
		collection.add(168.0);
		collection.add(146.0);
		collection.add(178.0);
		collection.add(126.0);
		collection.add(72.0);
		collection.add(70.0);
		collection.add(76.0);
		collection.add(12.0);
		collection.add(116.0);
		collection.add(44.0);
		collection.add(77.0);
		collection.add(104.0);
		collection.add(61.0);
		collection.add(157.0);
		collection.add(29.0);
		collection.add(74.0);
		collection.add(55.0);
		collection.add(100.0);
		collection.add(73.0);
		collection.add(143.0);
		collection.add(43.0);
		collection.add(83.0);
		collection.add(29.0);
		collection.add(63.0);
		collection.add(181.0);
		collection.add(55.0);
		collection.add(132.0);
		collection.add(32.0);
		collection.add(108.0);
		collection.add(137.0);
		collection.add(153.0);
		collection.add(6.0);
		collection.add(178.0);
		collection.add(167.0);
		collection.add(81.0);
		collection.add(11.0);
		collection.add(133.0);
		collection.add(106.0);
		collection.add(167.0);
		collection.add(115.0);
		collection.add(139.0);
		collection.add(16.0);
		collection.add(2.0);
		collection.add(131.0);
		collection.add(18.0);
		collection.add(71.0);
		collection.add(103.0);
		collection.add(1.0);
		collection.add(152.0);
		collection.add(146.0);
		collection.add(99.0);
		collection.add(158.0);
		collection.add(53.0);
		collection.add(40.0);
		collection.add(184.0);
		collection.add(169.0);
		collection.add(180.0);
		collection.add(156.0);
		collection.add(45.0);
		collection.add(155.0);
		collection.add(112.0);
		collection.add(109.0);
		collection.add(92.0);
		collection.add(75.0);
		collection.add(108.0);
		collection.add(2.0);
		collection.add(69.0);
		collection.add(61.0);
		collection.add(35.0);
		collection.add(141.0);
		collection.add(78.0);
		collection.add(128.0);
		collection.add(191.0);
		collection.add(60.0);
		collection.add(168.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(10.0);
		collection.add(38.0);
		collection.add(20.0);
		collection.add(159.0);
		collection.add(59.0);
		collection.add(46.0);
		collection.add(69.0);
		collection.add(92.0);
		collection.add(93.0);
		collection.add(140.0);
		collection.add(170.0);
		collection.add(195.0);
		collection.add(152.0);
		collection.add(73.0);
		collection.add(98.0);
		collection.add(65.0);
		collection.add(116.0);
		collection.add(148.0);
		collection.add(156.0);
		collection.add(180.0);
		collection.add(91.0);
		collection.add(30.0);
		collection.add(69.0);
		collection.add(30.0);
		collection.add(82.0);
		collection.add(83.0);
		collection.add(55.0);
		collection.add(33.0);
		collection.add(32.0);
		collection.add(181.0);
		collection.add(129.0);
		collection.add(45.0);
		collection.add(68.0);
		collection.add(115.0);
		collection.add(12.0);
		collection.add(84.0);
		collection.add(196.0);
		collection.add(127.0);
		collection.add(26.0);
		collection.add(117.0);
		collection.add(182.0);
		collection.add(62.0);
		collection.add(21.0);
		collection.add(50.0);
		collection.add(122.0);
		collection.add(117.0);
		collection.add(52.0);
		collection.add(140.0);
		collection.add(193.0);
		collection.add(57.0);
		collection.add(54.0);
		collection.add(78.0);
		collection.add(145.0);
		collection.add(198.0);
		collection.add(179.0);
		collection.add(200.0);
		collection.add(95.0);
		collection.add(19.0);
		collection.add(128.0);
		collection.add(186.0);
		collection.add(154.0);
		collection.add(164.0);
		collection.add(46.0);
		collection.add(102.0);
		collection.add(193.0);
		collection.add(142.0);
		collection.add(99.0);
		collection.add(171.0);
		collection.add(154.0);
		collection.add(185.0);
		collection.add(105.0);
		collection.add(103.0);
		collection.add(97.0);
		collection.add(150.0);
		collection.add(60.0);
		collection.add(60.0);
		collection.add(135.0);
		collection.add(170.0);
		collection.add(91.0);
		collection.add(144.0);
		collection.add(29.0);
		collection.add(112.0);
		collection.add(187.0);
		collection.add(103.0);
		collection.add(37.0);
		collection.add(169.0);
		collection.add(65.0);
		collection.add(46.0);
		collection.add(104.0);
		collection.add(32.0);
		collection.add(34.0);
		collection.add(169.0);
		collection.add(179.0);
		collection.add(5.0);
		collection.add(15.0);
		collection.add(25.0);
		collection.add(125.0);
		collection.add(73.0);
		collection.add(6.0);
		collection.add(184.0);
		collection.add(4.0);
		collection.add(101.0);
		collection.add(188.0);
		collection.add(197.0);
		collection.add(141.0);
		collection.add(48.0);
		collection.add(60.0);
		collection.add(168.0);
		collection.add(6.0);
		collection.add(121.0);
		collection.add(132.0);
		collection.add(14.0);
		collection.add(142.0);
		collection.add(58.0);
		collection.add(109.0);
		collection.add(11.0);
		collection.add(89.0);
		collection.add(36.0);
		collection.add(155.0);
		collection.add(45.0);
		collection.add(179.0);
		collection.add(150.0);
		collection.add(42.0);
		collection.add(110.0);
		collection.add(186.0);
		collection.add(98.0);
		collection.add(107.0);
		collection.add(136.0);
		collection.add(40.0);
		collection.add(114.0);
		collection.add(51.0);
		collection.add(180.0);
		collection.add(165.0);
		collection.add(70.0);
		collection.add(185.0);
		collection.add(42.0);
		collection.add(96.0);
		collection.add(131.0);
		collection.add(82.0);
		collection.add(48.0);
		collection.add(112.0);
		collection.add(174.0);
		collection.add(43.0);
		collection.add(73.0);
		collection.add(198.0);
		collection.add(153.0);
		collection.add(120.0);
		collection.add(149.0);
		collection.add(156.0);
		collection.add(182.0);
		collection.add(198.0);
		collection.add(182.0);
		collection.add(4.0);
		collection.add(174.0);
		collection.add(105.0);
		collection.add(140.0);
		collection.add(36.0);
		collection.add(25.0);
		collection.add(41.0);
		collection.add(12.0);
		collection.add(119.0);
		collection.add(121.0);
		collection.add(159.0);
		collection.add(31.0);
		collection.add(94.0);
		collection.add(98.0);
		collection.add(92.0);
		collection.add(99.0);
		collection.add(151.0);
		collection.add(80.0);
		collection.add(71.0);
		collection.add(49.0);
		collection.add(23.0);
		collection.add(180.0);
		collection.add(89.0);
		collection.add(72.0);
		collection.add(156.0);
		collection.add(199.0);
		collection.add(181.0);
		collection.add(92.0);
		collection.add(90.0);
		collection.add(166.0);
		collection.add(200.0);
		collection.add(185.0);
		collection.add(83.0);
		collection.add(70.0);
		collection.add(114.0);
		collection.add(111.0);
		collection.add(178.0);
		collection.add(138.0);
		collection.add(133.0);
		collection.add(111.0);
		collection.add(65.0);
		collection.add(139.0);
		collection.add(6.0);
		collection.add(23.0);
		collection.add(171.0);
		collection.add(144.0);
		collection.add(93.0);
		collection.add(77.0);
		collection.add(26.0);
		collection.add(79.0);
		collection.add(180.0);
		collection.add(195.0);
		collection.add(167.0);
		collection.add(83.0);
		collection.add(77.0);
		collection.add(116.0);
		collection.add(3.0);
		collection.add(147.0);
		collection.add(73.0);
		collection.add(65.0);
		collection.add(142.0);
		collection.add(111.0);
		collection.add(185.0);
		collection.add(69.0);
		collection.add(31.0);
		collection.add(92.0);
		collection.add(7.0);
		collection.add(120.0);
		collection.add(198.0);
		collection.add(15.0);
		collection.add(131.0);
		collection.add(75.0);
		collection.add(55.0);
		collection.add(94.0);
		collection.add(24.0);
		collection.add(164.0);
		collection.add(41.0);
		collection.add(119.0);
		collection.add(163.0);
		collection.add(97.0);
		collection.add(88.0);
		collection.add(30.0);
		collection.add(13.0);
		collection.add(178.0);
		collection.add(138.0);
		collection.add(82.0);
		collection.add(148.0);
		collection.add(81.0);
		collection.add(126.0);
		collection.add(57.0);
		collection.add(108.0);
		collection.add(193.0);
		collection.add(148.0);
		collection.add(195.0);
		collection.add(169.0);
		collection.add(70.0);
		collection.add(18.0);
		collection.add(111.0);
		collection.add(95.0);
		collection.add(48.0);
		collection.add(23.0);
		collection.add(43.0);
		collection.add(86.0);
		collection.add(64.0);
		collection.add(75.0);
		collection.add(72.0);
		collection.add(71.0);
		collection.add(73.0);
		collection.add(93.0);
		collection.add(177.0);
		collection.add(64.0);
		collection.add(95.0);
		collection.add(65.0);
		collection.add(173.0);
		collection.add(135.0);
		collection.add(163.0);
		collection.add(47.0);
		collection.add(187.0);
		collection.add(169.0);
		collection.add(14.0);
		collection.add(19.0);
		collection.add(193.0);
		collection.add(56.0);
		collection.add(143.0);
		collection.add(134.0);
		collection.add(45.0);
		collection.add(27.0);
		collection.add(83.0);
		collection.add(67.0);
		collection.add(5.0);
		collection.add(117.0);
		collection.add(38.0);
		collection.add(168.0);
		collection.add(2.0);
		collection.add(171.0);
		collection.add(55.0);
		collection.add(183.0);
		collection.add(12.0);
		collection.add(70.0);
		collection.add(153.0);
		collection.add(83.0);
		collection.add(184.0);
		collection.add(92.0);
		collection.add(159.0);
		collection.add(174.0);
		collection.add(182.0);
		collection.add(28.0);
		collection.add(56.0);
		collection.add(146.0);
		collection.add(87.0);
		collection.add(99.0);
		collection.add(136.0);
		collection.add(99.0);
		collection.add(100.0);
		collection.add(150.0);
		collection.add(69.0);
		collection.add(173.0);
		collection.add(79.0);
		collection.add(130.0);
		collection.add(60.0);
		collection.add(86.0);
		collection.add(90.0);
		collection.add(94.0);
		collection.add(95.0);
		collection.add(132.0);
		collection.add(146.0);
		collection.add(76.0);
		collection.add(39.0);
		collection.add(138.0);
		collection.add(112.0);
		collection.add(157.0);
		collection.add(92.0);
		collection.add(47.0);
		collection.add(39.0);
		collection.add(115.0);
		collection.add(38.0);
		collection.add(49.0);
		collection.add(153.0);
		collection.add(197.0);
		collection.add(162.0);
		collection.add(98.0);
		collection.add(80.0);
		collection.add(131.0);
		collection.add(89.0);
		collection.add(29.0);
		collection.add(128.0);
		collection.add(178.0);
		collection.add(94.0);
		collection.add(65.0);
		collection.add(57.0);
		collection.add(26.0);
		collection.add(72.0);
		collection.add(113.0);
		collection.add(68.0);
		collection.add(69.0);
		collection.add(89.0);
		collection.add(164.0);
		collection.add(83.0);
		collection.add(16.0);
		collection.add(142.0);
		collection.add(7.0);
		collection.add(96.0);
		collection.add(188.0);
		collection.add(163.0);
		collection.add(27.0);
		collection.add(160.0);
		collection.add(26.0);
		collection.add(174.0);
		collection.add(1.0);
		collection.add(109.0);
		collection.add(171.0);
		collection.add(38.0);
		collection.add(187.0);
		collection.add(153.0);
		collection.add(29.0);
		collection.add(86.0);
		collection.add(67.0);
		collection.add(82.0);
		collection.add(122.0);
		collection.add(106.0);
		collection.add(120.0);
		collection.add(190.0);
		collection.add(92.0);
		collection.add(19.0);
		collection.add(64.0);
		collection.add(109.0);
		collection.add(36.0);
		collection.add(55.0);
		collection.add(25.0);
		collection.add(50.0);
		collection.add(66.0);
		collection.add(123.0);
		collection.add(17.0);
		collection.add(8.0);
		collection.add(134.0);
		collection.add(59.0);
		collection.add(96.0);
		collection.add(86.0);
		collection.add(100.0);
		collection.add(96.0);
		collection.add(34.0);
		collection.add(142.0);
		collection.add(200.0);
		collection.add(80.0);
		collection.add(78.0);
		collection.add(66.0);
		collection.add(84.0);
		collection.add(12.0);
		collection.add(156.0);
		collection.add(174.0);
		collection.add(152.0);
		collection.add(37.0);
		collection.add(36.0);
		collection.add(151.0);
		collection.add(138.0);
		collection.add(173.0);
		collection.add(98.0);
		collection.add(69.0);
		collection.add(101.0);
		collection.add(197.0);
		collection.add(150.0);
		collection.add(15.0);
		collection.add(192.0);
		collection.add(65.0);
		collection.add(178.0);
		collection.add(102.0);
		collection.add(164.0);
		collection.add(110.0);
		collection.add(113.0);
		collection.add(41.0);
		collection.add(150.0);
		collection.add(57.0);
		collection.add(166.0);
		collection.add(70.0);
		collection.add(61.0);
		collection.add(50.0);
		collection.add(48.0);
		collection.add(133.0);
		collection.add(85.0);
		collection.add(15.0);
		collection.add(42.0);
		collection.add(140.0);
		collection.add(59.0);
		collection.add(189.0);
		collection.add(185.0);
		collection.add(157.0);
		collection.add(139.0);
		collection.add(165.0);
		collection.add(144.0);
		collection.add(66.0);
		collection.add(168.0);
		collection.add(125.0);
		collection.add(58.0);
		collection.add(82.0);
		collection.add(104.0);
		collection.add(53.0);
		collection.add(151.0);
		collection.add(131.0);
		collection.add(159.0);
		collection.add(57.0);
		collection.add(104.0);
		collection.add(114.0);
		collection.add(64.0);
		collection.add(198.0);
		collection.add(105.0);
		collection.add(8.0);
		collection.add(114.0);
		collection.add(20.0);
		collection.add(103.0);
		collection.add(12.0);
		collection.add(161.0);
		collection.add(132.0);
		collection.add(62.0);
		collection.add(180.0);
		collection.add(26.0);
		collection.add(200.0);
		collection.add(156.0);
		collection.add(109.0);
		collection.add(72.0);
		collection.add(40.0);
		collection.add(99.0);
		collection.add(98.0);
		collection.add(109.0);
		collection.add(45.0);
		collection.add(84.0);
		collection.add(94.0);
		collection.add(69.0);
		collection.add(140.0);
		collection.add(49.0);
		collection.add(161.0);
		collection.add(42.0);
		collection.add(72.0);
		collection.add(40.0);
		collection.add(73.0);
		collection.add(164.0);
		collection.add(66.0);
		collection.add(179.0);
		collection.add(22.0);
		collection.add(148.0);
		collection.add(198.0);
		collection.add(159.0);
		collection.add(25.0);
		collection.add(86.0);
		collection.add(127.0);
		collection.add(37.0);
		collection.add(145.0);
		collection.add(167.0);
		collection.add(67.0);
		collection.add(4.0);
		collection.add(48.0);
		collection.add(183.0);
		collection.add(140.0);
		collection.add(107.0);
		collection.add(176.0);
		collection.add(159.0);
		collection.add(66.0);
		collection.add(85.0);
		collection.add(112.0);
		collection.add(200.0);
		collection.add(99.0);
		collection.add(184.0);
		collection.add(90.0);
		collection.add(190.0);
		collection.add(145.0);
		collection.add(85.0);
		collection.add(34.0);
		collection.add(107.0);
		collection.add(78.0);
		collection.add(58.0);
		collection.add(113.0);
		collection.add(110.0);
		collection.add(56.0);
		collection.add(98.0);
		collection.add(85.0);
		collection.add(106.0);
		collection.add(22.0);
		collection.add(200.0);
		collection.add(45.0);
		collection.add(19.0);
		collection.add(38.0);
		collection.add(79.0);
		collection.add(57.0);
		collection.add(186.0);
		collection.add(197.0);
		collection.add(83.0);
		collection.add(139.0);
		collection.add(110.0);
		collection.add(195.0);
		collection.add(138.0);
		collection.add(189.0);
		collection.add(38.0);
		collection.add(44.0);
		collection.add(37.0);
		collection.add(98.0);
		collection.add(176.0);
		collection.add(168.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JVectorSequence(Blackhole bh) {
		bh.consume(collection.contains(186.0));
		bh.consume(collection.contains(200.0));
		collection.add(0, 138.0);
		bh.consume(collection.remove(119));
		bh.consume(collection.addAll(4, java.util.Arrays.asList(117.0,169.0,53.0,55.0,144.0,57.0,38.0,25.0,7.0)));
		bh.consume(collection.remove(148));
		bh.consume(collection.set(96, 87.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(17.0,127.0,61.0,194.0,198.0,4.0,131.0)));
		collection.remove(142.0);
		collection.add(64.0);
		bh.consume(collection.set(26, 60.0));
		collection.remove(139.0);
		bh.consume(collection.set(23, 186.0));
		bh.consume(collection.indexOf(40.0));
		bh.consume(collection.remove(171));
		bh.consume(collection.remove(137));
		bh.consume(collection.contains(149.0));
		bh.consume(collection.set(9, 18.0));
		bh.consume(collection.indexOf(91.0));
		bh.consume(collection.indexOf(54.0));
		bh.consume(collection.remove(95));
		bh.consume(collection.set(70, 189.0));
		collection.add(54, 51.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(58.0,166.0,77.0,153.0,96.0,55.0,146.0,163.0,80.0)));
		bh.consume(collection.addAll(108, java.util.Arrays.asList(102.0,23.0,54.0,43.0,81.0,60.0,104.0)));
		collection.remove(107.0);
		bh.consume(collection.set(69, 132.0));
		collection.add(158, 177.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(99.0,192.0,161.0,30.0,94.0,74.0,102.0)));
		bh.consume(collection.remove(71));
		bh.consume(collection.contains(48.0));
		bh.consume(collection.contains(60.0));
		bh.consume(collection.set(172, 53.0));
		bh.consume(collection.contains(35.0));
		bh.consume(collection.set(23, 88.0));
		bh.consume(collection.set(3, 195.0));
		bh.consume(collection.indexOf(33.0));
		bh.consume(collection.addAll(83, java.util.Arrays.asList(157.0,174.0,182.0,105.0,189.0)));
		bh.consume(collection.addAll(5, java.util.Arrays.asList(199.0,158.0,47.0,18.0,113.0,158.0,3.0,21.0,145.0)));
		bh.consume(collection.contains(31.0));
		collection.remove(110.0);
		bh.consume(collection.contains(129.0));
		bh.consume(collection.addAll(129, java.util.Arrays.asList(194.0,79.0,112.0,181.0,40.0,83.0,124.0)));
		bh.consume(collection.set(166, 7.0));
		collection.remove(117.0);
		collection.add(179, 107.0);
		bh.consume(collection.lastIndexOf(74.0));
		collection.remove(148.0);
		collection.remove(17.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(58.0,98.0,112.0,8.0)));
		collection.add(128, 44.0);
		bh.consume(collection.lastIndexOf(149.0));
		bh.consume(collection.contains(175.0));
		bh.consume(collection.indexOf(133.0));
		collection.remove(180.0);
		bh.consume(collection.set(72, 112.0));
		bh.consume(collection.contains(186.0));
		bh.consume(collection.set(41, 110.0));
		bh.consume(collection.remove(102));
		bh.consume(collection.lastIndexOf(111.0));
		bh.consume(collection.set(145, 27.0));
		bh.consume(collection.remove(133));
		collection.add(0, 120.0);
		bh.consume(collection.contains(60.0));
		collection.add(0, 32.0);
		bh.consume(collection.remove(160));
		collection.add(179, 47.0);
		bh.consume(collection.get(179));
		bh.consume(collection.get(22));
		collection.remove(18.0);
		collection.add(0, 103.0);
		collection.remove(113.0);
		bh.consume(collection.set(199, 124.0));
		bh.consume(collection.remove(196));
		bh.consume(collection.addAll(23, java.util.Arrays.asList(84.0,172.0,158.0,73.0,84.0)));
		collection.add(139, 13.0);
		bh.consume(collection.get(35));
		bh.consume(collection.get(193));
		bh.consume(collection.contains(82.0));
		bh.consume(collection.remove(19));
		bh.consume(collection.set(169, 77.0));
		bh.consume(collection.contains(71.0));
		bh.consume(collection.get(30));
		collection.remove(142.0);
		collection.add(0, 31.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(115.0,126.0,156.0,31.0,4.0,183.0,180.0)));
		bh.consume(collection.addAll(45, java.util.Arrays.asList(75.0,89.0,118.0,87.0,147.0,6.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(18.0,186.0,48.0,29.0,104.0,59.0,97.0)));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(41.0,29.0,93.0,14.0,131.0,63.0)));
		bh.consume(collection.contains(62.0));
		bh.consume(collection.set(6, 120.0));
		bh.consume(collection.remove(17));
		bh.consume(collection.indexOf(130.0));
		bh.consume(collection.get(32));
		bh.consume(collection.remove(57));
		bh.consume(collection.contains(10.0));
		bh.consume(collection.addAll(22, java.util.Arrays.asList(169.0,198.0,136.0,36.0,11.0,125.0,141.0)));
		collection.add(0, 96.0);
		bh.consume(collection.addAll(188, java.util.Arrays.asList(80.0,129.0,36.0,183.0,67.0,70.0,15.0,53.0)));
		collection.add(0, 74.0);
		bh.consume(collection.contains(54.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(157.0,86.0,64.0,182.0,59.0,138.0,35.0)));
		collection.add(173.0);
		bh.consume(collection.set(47, 12.0));
		bh.consume(collection.lastIndexOf(20.0));
		bh.consume(collection.set(23, 48.0));
		bh.consume(collection.indexOf(37.0));
		collection.add(0, 80.0);
		bh.consume(collection.indexOf(20.0));
		bh.consume(collection.contains(123.0));
		bh.consume(collection.lastIndexOf(98.0));
		bh.consume(collection.lastIndexOf(190.0));
		bh.consume(collection.indexOf(132.0));
		bh.consume(collection.set(164, 33.0));
		collection.add(124, 121.0);
		bh.consume(collection.set(194, 194.0));
		bh.consume(collection.contains(44.0));
		collection.remove(20.0);
		collection.add(29.0);
		bh.consume(collection.set(65, 126.0));
		bh.consume(collection.remove(93));
		bh.consume(collection.addAll(102, java.util.Arrays.asList(70.0,101.0,172.0,120.0,44.0)));
		collection.add(60, 87.0);
		bh.consume(collection.addAll(130, java.util.Arrays.asList(17.0,74.0,104.0,25.0,55.0,109.0,102.0,2.0,110.0)));
		bh.consume(collection.lastIndexOf(53.0));
		bh.consume(collection.addAll(184, java.util.Arrays.asList(104.0,4.0,183.0,138.0,79.0)));
		collection.add(0, 38.0);
		bh.consume(collection.set(165, 133.0));
		collection.add(0, 69.0);
		bh.consume(collection.contains(78.0));
		collection.remove(41.0);
		bh.consume(collection.indexOf(198.0));
		collection.remove(72.0);
		collection.add(90, 58.0);
		bh.consume(collection.contains(197.0));
		bh.consume(collection.indexOf(5.0));
		bh.consume(collection.remove(188));
		bh.consume(collection.addAll(java.util.Arrays.asList(42.0,29.0,105.0,171.0,137.0,156.0,67.0,59.0)));
		bh.consume(collection.remove(134));
		bh.consume(collection.addAll(89, java.util.Arrays.asList(183.0,92.0,63.0)));
		bh.consume(collection.set(190, 157.0));
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.remove(60));
		bh.consume(collection.get(142));
		bh.consume(collection.indexOf(71.0));
		bh.consume(collection.set(165, 150.0));
		collection.remove(85.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(132.0,37.0,101.0)));
		bh.consume(collection.contains(139.0));
		bh.consume(collection.remove(184));
		collection.remove(102.0);
		collection.add(0, 53.0);
		bh.consume(collection.contains(15.0));
		collection.add(125.0);
		collection.remove(170.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,9.0,95.0,194.0,79.0,159.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(169.0,198.0,189.0)));
		bh.consume(collection.lastIndexOf(191.0));
		bh.consume(collection.contains(34.0));
		bh.consume(collection.set(48, 101.0));
		bh.consume(collection.contains(128.0));
		bh.consume(collection.remove(36));
		bh.consume(collection.contains(151.0));
		bh.consume(collection.contains(52.0));
		bh.consume(collection.set(39, 130.0));
		bh.consume(collection.remove(147));
		bh.consume(collection.contains(57.0));
		bh.consume(collection.remove(72));
		bh.consume(collection.contains(2.0));
		bh.consume(collection.set(197, 187.0));
		bh.consume(collection.set(20, 113.0));
		bh.consume(collection.indexOf(44.0));
		bh.consume(collection.addAll(96, java.util.Arrays.asList(133.0,186.0,21.0,139.0,63.0)));
		bh.consume(collection.addAll(42, java.util.Arrays.asList(82.0,177.0,162.0,98.0,171.0,95.0,25.0,181.0,142.0)));
		bh.consume(collection.lastIndexOf(138.0));
		bh.consume(collection.indexOf(197.0));
		bh.consume(collection.contains(112.0));
		bh.consume(collection.lastIndexOf(132.0));
		bh.consume(collection.set(146, 200.0));
		bh.consume(collection.lastIndexOf(154.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(21.0,146.0,93.0,59.0,168.0)));
		bh.consume(collection.contains(147.0));
		bh.consume(collection.addAll(186, java.util.Arrays.asList(107.0,32.0,32.0)));
		bh.consume(collection.lastIndexOf(76.0));
		bh.consume(collection.get(183));
		bh.consume(collection.indexOf(176.0));
		bh.consume(collection.indexOf(145.0));
		bh.consume(collection.indexOf(40.0));
		bh.consume(collection.set(72, 115.0));
		bh.consume(collection.get(47));
		bh.consume(collection.remove(94));
		bh.consume(collection.contains(95.0));
		bh.consume(collection.set(93, 198.0));
		bh.consume(collection.remove(126));
		collection.add(120, 102.0);
		bh.consume(collection.contains(121.0));
		bh.consume(collection.addAll(139, java.util.Arrays.asList(76.0,90.0,33.0,28.0)));
		collection.remove(123.0);
		bh.consume(collection.addAll(171, java.util.Arrays.asList(190.0,29.0,10.0,152.0,121.0,3.0)));
		collection.remove(4.0);
		collection.add(91, 98.0);
		bh.consume(collection.set(129, 148.0));
		bh.consume(collection.lastIndexOf(7.0));
		bh.consume(collection.contains(68.0));
		collection.remove(101.0);
		bh.consume(collection.contains(78.0));
		collection.add(97, 90.0);
		collection.add(0, 52.0);
		bh.consume(collection.contains(145.0));
		collection.add(171.0);
		bh.consume(collection.get(196));
		bh.consume(collection.remove(126));
		collection.add(0, 139.0);
		bh.consume(collection.set(64, 81.0));
		bh.consume(collection.contains(28.0));
		bh.consume(collection.contains(154.0));
		collection.remove(9.0);
		bh.consume(collection.indexOf(107.0));
		bh.consume(collection.indexOf(196.0));
		bh.consume(collection.contains(147.0));
		bh.consume(collection.set(44, 76.0));
		bh.consume(collection.addAll(59, java.util.Arrays.asList(134.0,13.0,78.0,189.0,188.0,43.0,92.0,141.0,4.0)));
		bh.consume(collection.addAll(11, java.util.Arrays.asList(163.0,150.0,170.0,20.0,93.0,125.0,90.0,163.0,30.0)));
		collection.add(0, 111.0);
		bh.consume(collection.remove(4));
		bh.consume(collection.addAll(java.util.Arrays.asList(157.0,155.0,149.0,97.0)));
		bh.consume(collection.set(164, 173.0));
		collection.remove(147.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(43.0,64.0,84.0,108.0,43.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(136.0,194.0,132.0,32.0,11.0,138.0)));
		bh.consume(collection.set(18, 123.0));
		bh.consume(collection.remove(154));
		collection.remove(57.0);
		bh.consume(collection.set(46, 199.0));
		collection.add(0, 49.0);
		collection.remove(63.0);
		bh.consume(collection.contains(135.0));
		bh.consume(collection.set(65, 120.0));
		collection.remove(162.0);
		collection.add(71, 55.0);
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.remove(89));
		bh.consume(collection.contains(91.0));
		bh.consume(collection.contains(166.0));
		bh.consume(collection.contains(200.0));
		collection.remove(94.0);
		collection.add(94, 82.0);
		bh.consume(collection.set(137, 160.0));
		collection.add(62.0);
		bh.consume(collection.set(25, 86.0));
		collection.add(173.0);
		bh.consume(collection.remove(160));
		bh.consume(collection.remove(195));
		bh.consume(collection.remove(27));
		collection.remove(75.0);
		bh.consume(collection.addAll(199, java.util.Arrays.asList(3.0,71.0,52.0,163.0,47.0)));
		bh.consume(collection.remove(175));
		bh.consume(collection.remove(7));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,138.0,68.0,187.0)));
		bh.consume(collection.remove(34));
		bh.consume(collection.addAll(9, java.util.Arrays.asList(111.0,136.0,37.0,188.0,33.0,159.0,143.0)));
		collection.remove(199.0);
		bh.consume(collection.indexOf(195.0));
		collection.add(0, 198.0);
		bh.consume(collection.remove(47));
		bh.consume(collection.contains(140.0));
		collection.add(163, 169.0);
		bh.consume(collection.indexOf(174.0));
		bh.consume(collection.lastIndexOf(6.0));
		bh.consume(collection.set(147, 111.0));
		bh.consume(collection.remove(146));
		bh.consume(collection.set(1, 59.0));
		bh.consume(collection.set(65, 189.0));
		bh.consume(collection.remove(59));
		collection.remove(20.0);
		bh.consume(collection.addAll(80, java.util.Arrays.asList(164.0,61.0,138.0,185.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(13.0,19.0,164.0,142.0,49.0,73.0)));
		bh.consume(collection.indexOf(41.0));
		collection.add(0, 87.0);
		collection.add(119, 71.0);
		bh.consume(collection.contains(197.0));
		collection.add(3, 131.0);
		bh.consume(collection.addAll(168, java.util.Arrays.asList(50.0,153.0,74.0,109.0,184.0,8.0,190.0)));
		bh.consume(collection.remove(67));
		collection.add(0, 35.0);
		bh.consume(collection.contains(47.0));
		bh.consume(collection.set(43, 112.0));
		bh.consume(collection.set(150, 112.0));
		bh.consume(collection.set(114, 99.0));
		bh.consume(collection.remove(177));
		bh.consume(collection.contains(9.0));
		bh.consume(collection.indexOf(137.0));
		collection.add(169, 57.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(34.0,192.0,111.0)));
		bh.consume(collection.addAll(131, java.util.Arrays.asList(77.0,88.0,21.0)));
		bh.consume(collection.contains(1.0));
		collection.add(131, 156.0);
		bh.consume(collection.set(59, 172.0));
		bh.consume(collection.get(17));
		collection.add(5, 29.0);
		bh.consume(collection.contains(25.0));
		bh.consume(collection.set(186, 27.0));
		bh.consume(collection.contains(6.0));
		bh.consume(collection.contains(6.0));
		collection.add(0, 56.0);
		bh.consume(collection.set(94, 48.0));
		collection.add(52, 56.0);
		collection.add(0, 120.0);
		bh.consume(collection.indexOf(179.0));
		bh.consume(collection.remove(12));
		bh.consume(collection.indexOf(146.0));
		bh.consume(collection.addAll(74, java.util.Arrays.asList(25.0,162.0,132.0)));
		bh.consume(collection.lastIndexOf(63.0));
		bh.consume(collection.contains(159.0));
		bh.consume(collection.set(174, 169.0));
		collection.add(0, 39.0);
		bh.consume(collection.contains(137.0));
		bh.consume(collection.set(122, 150.0));
		collection.add(0, 183.0);
		bh.consume(collection.set(52, 123.0));
		bh.consume(collection.set(10, 37.0));
		collection.remove(59.0);
		bh.consume(collection.indexOf(56.0));
		bh.consume(collection.contains(66.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(132.0,189.0,38.0,123.0,42.0,130.0)));
		bh.consume(collection.lastIndexOf(14.0));
		bh.consume(collection.indexOf(21.0));
		bh.consume(collection.set(89, 27.0));
		bh.consume(collection.contains(195.0));
		bh.consume(collection.indexOf(84.0));
		collection.remove(193.0);
		bh.consume(collection.indexOf(185.0));
		bh.consume(collection.remove(78));
		bh.consume(collection.set(130, 193.0));
		bh.consume(collection.set(192, 73.0));
		collection.remove(183.0);
		bh.consume(collection.get(181));
		collection.remove(96.0);
		collection.add(0, 13.0);
		bh.consume(collection.contains(4.0));
		bh.consume(collection.indexOf(65.0));
		bh.consume(collection.addAll(39, java.util.Arrays.asList(146.0,160.0,49.0,111.0,115.0)));
		bh.consume(collection.set(130, 144.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(39.0,182.0,180.0,107.0,159.0,103.0,16.0,70.0)));
		bh.consume(collection.remove(16));
		bh.consume(collection.set(124, 88.0));
		bh.consume(collection.indexOf(141.0));
		bh.consume(collection.contains(179.0));
		bh.consume(collection.remove(42));
		bh.consume(collection.set(145, 74.0));
		bh.consume(collection.set(92, 79.0));
		bh.consume(collection.indexOf(1.0));
		collection.add(0, 32.0);
		bh.consume(collection.lastIndexOf(200.0));
		collection.add(3, 98.0);
		collection.add(0, 139.0);
		bh.consume(collection.contains(147.0));
		bh.consume(collection.get(159));
		bh.consume(collection.lastIndexOf(139.0));
		bh.consume(collection.addAll(160, java.util.Arrays.asList(106.0,71.0,190.0,21.0,189.0)));
		bh.consume(collection.indexOf(89.0));
		collection.add(139.0);
		bh.consume(collection.set(44, 161.0));
		collection.add(120.0);
		bh.consume(collection.contains(111.0));
		bh.consume(collection.contains(89.0));
		bh.consume(collection.set(70, 55.0));
		bh.consume(collection.contains(3.0));
		bh.consume(collection.addAll(51, java.util.Arrays.asList(11.0,153.0,191.0)));
		bh.consume(collection.contains(45.0));
		bh.consume(collection.addAll(65, java.util.Arrays.asList(122.0,91.0,75.0,5.0,41.0,96.0,161.0,45.0,148.0)));
		bh.consume(collection.indexOf(28.0));
		bh.consume(collection.addAll(27, java.util.Arrays.asList(144.0,53.0,66.0,97.0)));
		collection.add(0, 10.0);
		collection.add(0, 107.0);
		bh.consume(collection.set(111, 149.0));
		bh.consume(collection.indexOf(186.0));
		collection.add(0, 114.0);
		bh.consume(collection.remove(38));
		bh.consume(collection.addAll(java.util.Arrays.asList(179.0,113.0,193.0,100.0)));
		collection.add(74, 195.0);
		collection.add(0, 149.0);
		collection.add(0, 180.0);
		bh.consume(collection.indexOf(151.0));
		bh.consume(collection.set(99, 19.0));
		bh.consume(collection.contains(17.0));
		collection.add(0, 32.0);
		collection.add(0, 73.0);
		bh.consume(collection.contains(98.0));
		bh.consume(collection.addAll(18, java.util.Arrays.asList(45.0,111.0,122.0,147.0,46.0,136.0)));
		collection.remove(128.0);
		collection.remove(27.0);
		bh.consume(collection.set(89, 24.0));
		bh.consume(collection.set(12, 157.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(172.0,64.0,190.0,72.0,84.0,145.0,184.0,174.0)));
		bh.consume(collection.lastIndexOf(57.0));
		bh.consume(collection.set(3, 160.0));
		bh.consume(collection.get(7));
		bh.consume(collection.remove(195));
		bh.consume(collection.set(140, 65.0));
		bh.consume(collection.addAll(31, java.util.Arrays.asList(126.0,54.0,62.0,65.0,62.0,33.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(103.0,161.0,109.0,200.0,129.0,189.0,78.0)));
		bh.consume(collection.contains(3.0));
		bh.consume(collection.contains(131.0));
		bh.consume(collection.set(34, 78.0));
		bh.consume(collection.lastIndexOf(55.0));
		bh.consume(collection.remove(124));
		bh.consume(collection.remove(60));
		bh.consume(collection.remove(130));
		collection.add(40.0);
		bh.consume(collection.remove(71));
		bh.consume(collection.addAll(148, java.util.Arrays.asList(85.0,154.0,170.0)));
		bh.consume(collection.contains(163.0));
		bh.consume(collection.contains(154.0));
		bh.consume(collection.contains(196.0));
		collection.add(166.0);
		bh.consume(collection.remove(155));
		bh.consume(collection.addAll(java.util.Arrays.asList(83.0,78.0,64.0,186.0,138.0,33.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(61.0,90.0,187.0,133.0,107.0)));
		bh.consume(collection.remove(184));
		bh.consume(collection.addAll(java.util.Arrays.asList(73.0,9.0,104.0,76.0)));
		bh.consume(collection.set(77, 91.0));
		collection.add(11.0);
		collection.add(130, 94.0);
		bh.consume(collection.set(7, 142.0));
		bh.consume(collection.set(51, 32.0));
		bh.consume(collection.remove(140));
		collection.add(13.0);
		bh.consume(collection.set(107, 73.0));
		collection.remove(128.0);
		collection.add(122.0);
		bh.consume(collection.set(169, 171.0));
		collection.add(86, 173.0);
		bh.consume(collection.remove(197));
		bh.consume(collection.lastIndexOf(193.0));
		collection.add(0, 41.0);
		bh.consume(collection.addAll(108, java.util.Arrays.asList(180.0,49.0,179.0,35.0,8.0,87.0,43.0,81.0)));
		bh.consume(collection.set(143, 34.0));
		bh.consume(collection.remove(35));
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,47.0,7.0,49.0)));
		bh.consume(collection.set(158, 121.0));
		collection.add(83, 85.0);
		collection.remove(27.0);
		bh.consume(collection.remove(118));
		collection.remove(1.0);
		bh.consume(collection.contains(125.0));
		collection.remove(12.0);
		collection.add(174, 71.0);
		bh.consume(collection.contains(66.0));
		collection.add(120, 21.0);
		bh.consume(collection.contains(172.0));
		bh.consume(collection.contains(119.0));
		collection.remove(72.0);
		bh.consume(collection.contains(70.0));
		bh.consume(collection.contains(80.0));
		collection.remove(7.0);
		bh.consume(collection.indexOf(17.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,183.0,89.0)));
		collection.remove(163.0);
		collection.remove(189.0);
		bh.consume(collection.set(107, 182.0));
		bh.consume(collection.set(171, 92.0));
		bh.consume(collection.set(62, 120.0));
		bh.consume(collection.remove(132));
		bh.consume(collection.addAll(16, java.util.Arrays.asList(46.0,48.0,195.0,83.0,10.0,159.0,87.0)));
		bh.consume(collection.contains(192.0));
		bh.consume(collection.contains(121.0));
		bh.consume(collection.contains(25.0));
		collection.add(0, 54.0);
		bh.consume(collection.addAll(126, java.util.Arrays.asList(62.0,154.0,141.0,98.0)));
		bh.consume(collection.contains(152.0));
		bh.consume(collection.contains(162.0));
		bh.consume(collection.indexOf(2.0));
		bh.consume(collection.indexOf(138.0));
		bh.consume(collection.contains(26.0));
		collection.add(0, 103.0);
		bh.consume(collection.indexOf(191.0));
		bh.consume(collection.addAll(49, java.util.Arrays.asList(195.0,84.0,165.0,128.0,65.0)));
		collection.add(0, 193.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(153.0,90.0,150.0,40.0)));
		collection.remove(181.0);
		collection.add(188, 3.0);
		collection.remove(108.0);
		bh.consume(collection.remove(83));
		bh.consume(collection.contains(46.0));
		collection.add(87, 104.0);
		collection.remove(183.0);
		bh.consume(collection.contains(10.0));
		bh.consume(collection.addAll(22, java.util.Arrays.asList(125.0,173.0,126.0)));
		bh.consume(collection.remove(141));
		bh.consume(collection.addAll(java.util.Arrays.asList(173.0,92.0,50.0,196.0,102.0)));
		bh.consume(collection.addAll(186, java.util.Arrays.asList(65.0,102.0,61.0,55.0,80.0,98.0)));
		bh.consume(collection.set(123, 172.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(99.0,30.0,89.0,188.0,81.0,68.0,9.0,130.0,141.0)));
		bh.consume(collection.remove(155));
		collection.remove(160.0);
		collection.remove(58.0);
		bh.consume(collection.remove(56));
		bh.consume(collection.set(59, 176.0));
		collection.add(0, 179.0);
	}
}
