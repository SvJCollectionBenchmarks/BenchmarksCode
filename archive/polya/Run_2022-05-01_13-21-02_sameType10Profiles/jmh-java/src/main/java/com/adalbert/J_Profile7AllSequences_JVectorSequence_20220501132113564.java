package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile7AllSequences_JVectorSequence_20220501132113564 {
	java.util.Vector<Double> collection = new java.util.Vector<>();
	@Setup(Level.Invocation)
	public void setupJVectorSequence() {
		collection = new java.util.Vector<>();
		collection.add(9.0);
		collection.add(166.0);
		collection.add(10.0);
		collection.add(66.0);
		collection.add(148.0);
		collection.add(100.0);
		collection.add(22.0);
		collection.add(183.0);
		collection.add(130.0);
		collection.add(156.0);
		collection.add(111.0);
		collection.add(96.0);
		collection.add(42.0);
		collection.add(159.0);
		collection.add(117.0);
		collection.add(87.0);
		collection.add(41.0);
		collection.add(200.0);
		collection.add(83.0);
		collection.add(91.0);
		collection.add(142.0);
		collection.add(121.0);
		collection.add(125.0);
		collection.add(92.0);
		collection.add(166.0);
		collection.add(17.0);
		collection.add(168.0);
		collection.add(30.0);
		collection.add(34.0);
		collection.add(63.0);
		collection.add(82.0);
		collection.add(23.0);
		collection.add(127.0);
		collection.add(28.0);
		collection.add(123.0);
		collection.add(56.0);
		collection.add(148.0);
		collection.add(108.0);
		collection.add(58.0);
		collection.add(50.0);
		collection.add(131.0);
		collection.add(25.0);
		collection.add(117.0);
		collection.add(32.0);
		collection.add(163.0);
		collection.add(49.0);
		collection.add(107.0);
		collection.add(139.0);
		collection.add(40.0);
		collection.add(130.0);
		collection.add(132.0);
		collection.add(60.0);
		collection.add(34.0);
		collection.add(151.0);
		collection.add(16.0);
		collection.add(12.0);
		collection.add(13.0);
		collection.add(8.0);
		collection.add(94.0);
		collection.add(4.0);
		collection.add(23.0);
		collection.add(121.0);
		collection.add(149.0);
		collection.add(58.0);
		collection.add(73.0);
		collection.add(105.0);
		collection.add(108.0);
		collection.add(41.0);
		collection.add(101.0);
		collection.add(150.0);
		collection.add(51.0);
		collection.add(66.0);
		collection.add(137.0);
		collection.add(185.0);
		collection.add(35.0);
		collection.add(53.0);
		collection.add(59.0);
		collection.add(132.0);
		collection.add(66.0);
		collection.add(182.0);
		collection.add(95.0);
		collection.add(149.0);
		collection.add(3.0);
		collection.add(55.0);
		collection.add(69.0);
		collection.add(133.0);
		collection.add(30.0);
		collection.add(48.0);
		collection.add(146.0);
		collection.add(10.0);
		collection.add(173.0);
		collection.add(21.0);
		collection.add(133.0);
		collection.add(190.0);
		collection.add(166.0);
		collection.add(94.0);
		collection.add(28.0);
		collection.add(54.0);
		collection.add(151.0);
		collection.add(41.0);
		collection.add(90.0);
		collection.add(92.0);
		collection.add(188.0);
		collection.add(46.0);
		collection.add(63.0);
		collection.add(81.0);
		collection.add(70.0);
		collection.add(22.0);
		collection.add(134.0);
		collection.add(144.0);
		collection.add(19.0);
		collection.add(157.0);
		collection.add(38.0);
		collection.add(177.0);
		collection.add(144.0);
		collection.add(151.0);
		collection.add(99.0);
		collection.add(164.0);
		collection.add(200.0);
		collection.add(51.0);
		collection.add(74.0);
		collection.add(134.0);
		collection.add(101.0);
		collection.add(68.0);
		collection.add(50.0);
		collection.add(58.0);
		collection.add(159.0);
		collection.add(147.0);
		collection.add(50.0);
		collection.add(180.0);
		collection.add(155.0);
		collection.add(91.0);
		collection.add(191.0);
		collection.add(154.0);
		collection.add(119.0);
		collection.add(7.0);
		collection.add(28.0);
		collection.add(137.0);
		collection.add(38.0);
		collection.add(25.0);
		collection.add(131.0);
		collection.add(107.0);
		collection.add(141.0);
		collection.add(78.0);
		collection.add(106.0);
		collection.add(180.0);
		collection.add(82.0);
		collection.add(19.0);
		collection.add(138.0);
		collection.add(106.0);
		collection.add(181.0);
		collection.add(80.0);
		collection.add(173.0);
		collection.add(174.0);
		collection.add(125.0);
		collection.add(143.0);
		collection.add(118.0);
		collection.add(166.0);
		collection.add(188.0);
		collection.add(143.0);
		collection.add(188.0);
		collection.add(148.0);
		collection.add(191.0);
		collection.add(139.0);
		collection.add(62.0);
		collection.add(136.0);
		collection.add(54.0);
		collection.add(15.0);
		collection.add(49.0);
		collection.add(77.0);
		collection.add(33.0);
		collection.add(16.0);
		collection.add(150.0);
		collection.add(171.0);
		collection.add(73.0);
		collection.add(161.0);
		collection.add(157.0);
		collection.add(87.0);
		collection.add(176.0);
		collection.add(98.0);
		collection.add(50.0);
		collection.add(88.0);
		collection.add(173.0);
		collection.add(39.0);
		collection.add(172.0);
		collection.add(71.0);
		collection.add(160.0);
		collection.add(76.0);
		collection.add(28.0);
		collection.add(77.0);
		collection.add(161.0);
		collection.add(26.0);
		collection.add(92.0);
		collection.add(77.0);
		collection.add(196.0);
		collection.add(140.0);
		collection.add(62.0);
		collection.add(198.0);
		collection.add(44.0);
		collection.add(181.0);
		collection.add(116.0);
		collection.add(111.0);
		collection.add(95.0);
		collection.add(44.0);
		collection.add(90.0);
		collection.add(175.0);
		collection.add(83.0);
		collection.add(84.0);
		collection.add(71.0);
		collection.add(168.0);
		collection.add(88.0);
		collection.add(65.0);
		collection.add(117.0);
		collection.add(86.0);
		collection.add(175.0);
		collection.add(126.0);
		collection.add(191.0);
		collection.add(111.0);
		collection.add(176.0);
		collection.add(138.0);
		collection.add(80.0);
		collection.add(146.0);
		collection.add(172.0);
		collection.add(196.0);
		collection.add(132.0);
		collection.add(65.0);
		collection.add(6.0);
		collection.add(118.0);
		collection.add(116.0);
		collection.add(70.0);
		collection.add(4.0);
		collection.add(74.0);
		collection.add(138.0);
		collection.add(46.0);
		collection.add(103.0);
		collection.add(55.0);
		collection.add(37.0);
		collection.add(61.0);
		collection.add(148.0);
		collection.add(59.0);
		collection.add(182.0);
		collection.add(169.0);
		collection.add(13.0);
		collection.add(173.0);
		collection.add(155.0);
		collection.add(153.0);
		collection.add(157.0);
		collection.add(62.0);
		collection.add(44.0);
		collection.add(16.0);
		collection.add(124.0);
		collection.add(187.0);
		collection.add(7.0);
		collection.add(13.0);
		collection.add(138.0);
		collection.add(109.0);
		collection.add(16.0);
		collection.add(67.0);
		collection.add(31.0);
		collection.add(120.0);
		collection.add(33.0);
		collection.add(130.0);
		collection.add(155.0);
		collection.add(3.0);
		collection.add(99.0);
		collection.add(93.0);
		collection.add(75.0);
		collection.add(69.0);
		collection.add(159.0);
		collection.add(165.0);
		collection.add(19.0);
		collection.add(158.0);
		collection.add(26.0);
		collection.add(191.0);
		collection.add(85.0);
		collection.add(164.0);
		collection.add(62.0);
		collection.add(170.0);
		collection.add(90.0);
		collection.add(86.0);
		collection.add(193.0);
		collection.add(95.0);
		collection.add(83.0);
		collection.add(61.0);
		collection.add(23.0);
		collection.add(3.0);
		collection.add(145.0);
		collection.add(28.0);
		collection.add(123.0);
		collection.add(143.0);
		collection.add(38.0);
		collection.add(28.0);
		collection.add(134.0);
		collection.add(149.0);
		collection.add(127.0);
		collection.add(7.0);
		collection.add(47.0);
		collection.add(184.0);
		collection.add(43.0);
		collection.add(72.0);
		collection.add(107.0);
		collection.add(70.0);
		collection.add(124.0);
		collection.add(125.0);
		collection.add(9.0);
		collection.add(76.0);
		collection.add(18.0);
		collection.add(138.0);
		collection.add(115.0);
		collection.add(103.0);
		collection.add(124.0);
		collection.add(176.0);
		collection.add(84.0);
		collection.add(200.0);
		collection.add(96.0);
		collection.add(149.0);
		collection.add(71.0);
		collection.add(23.0);
		collection.add(164.0);
		collection.add(91.0);
		collection.add(186.0);
		collection.add(68.0);
		collection.add(40.0);
		collection.add(36.0);
		collection.add(169.0);
		collection.add(117.0);
		collection.add(29.0);
		collection.add(99.0);
		collection.add(143.0);
		collection.add(181.0);
		collection.add(70.0);
		collection.add(83.0);
		collection.add(148.0);
		collection.add(54.0);
		collection.add(96.0);
		collection.add(98.0);
		collection.add(98.0);
		collection.add(175.0);
		collection.add(82.0);
		collection.add(120.0);
		collection.add(58.0);
		collection.add(129.0);
		collection.add(13.0);
		collection.add(3.0);
		collection.add(127.0);
		collection.add(192.0);
		collection.add(165.0);
		collection.add(190.0);
		collection.add(41.0);
		collection.add(39.0);
		collection.add(124.0);
		collection.add(105.0);
		collection.add(141.0);
		collection.add(159.0);
		collection.add(38.0);
		collection.add(161.0);
		collection.add(3.0);
		collection.add(111.0);
		collection.add(71.0);
		collection.add(154.0);
		collection.add(92.0);
		collection.add(189.0);
		collection.add(162.0);
		collection.add(42.0);
		collection.add(120.0);
		collection.add(71.0);
		collection.add(124.0);
		collection.add(113.0);
		collection.add(101.0);
		collection.add(195.0);
		collection.add(57.0);
		collection.add(139.0);
		collection.add(17.0);
		collection.add(8.0);
		collection.add(134.0);
		collection.add(2.0);
		collection.add(5.0);
		collection.add(85.0);
		collection.add(143.0);
		collection.add(31.0);
		collection.add(85.0);
		collection.add(110.0);
		collection.add(21.0);
		collection.add(117.0);
		collection.add(17.0);
		collection.add(4.0);
		collection.add(38.0);
		collection.add(94.0);
		collection.add(153.0);
		collection.add(103.0);
		collection.add(137.0);
		collection.add(100.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(176.0);
		collection.add(53.0);
		collection.add(122.0);
		collection.add(47.0);
		collection.add(176.0);
		collection.add(145.0);
		collection.add(153.0);
		collection.add(110.0);
		collection.add(6.0);
		collection.add(148.0);
		collection.add(51.0);
		collection.add(23.0);
		collection.add(71.0);
		collection.add(184.0);
		collection.add(39.0);
		collection.add(190.0);
		collection.add(125.0);
		collection.add(128.0);
		collection.add(118.0);
		collection.add(166.0);
		collection.add(55.0);
		collection.add(108.0);
		collection.add(7.0);
		collection.add(141.0);
		collection.add(124.0);
		collection.add(20.0);
		collection.add(70.0);
		collection.add(37.0);
		collection.add(113.0);
		collection.add(61.0);
		collection.add(117.0);
		collection.add(152.0);
		collection.add(178.0);
		collection.add(12.0);
		collection.add(3.0);
		collection.add(60.0);
		collection.add(14.0);
		collection.add(30.0);
		collection.add(167.0);
		collection.add(168.0);
		collection.add(9.0);
		collection.add(92.0);
		collection.add(1.0);
		collection.add(121.0);
		collection.add(168.0);
		collection.add(159.0);
		collection.add(32.0);
		collection.add(161.0);
		collection.add(109.0);
		collection.add(118.0);
		collection.add(116.0);
		collection.add(181.0);
		collection.add(163.0);
		collection.add(123.0);
		collection.add(163.0);
		collection.add(61.0);
		collection.add(86.0);
		collection.add(159.0);
		collection.add(128.0);
		collection.add(70.0);
		collection.add(61.0);
		collection.add(15.0);
		collection.add(194.0);
		collection.add(104.0);
		collection.add(168.0);
		collection.add(73.0);
		collection.add(142.0);
		collection.add(36.0);
		collection.add(126.0);
		collection.add(129.0);
		collection.add(107.0);
		collection.add(16.0);
		collection.add(72.0);
		collection.add(151.0);
		collection.add(149.0);
		collection.add(139.0);
		collection.add(125.0);
		collection.add(75.0);
		collection.add(87.0);
		collection.add(21.0);
		collection.add(109.0);
		collection.add(148.0);
		collection.add(171.0);
		collection.add(169.0);
		collection.add(79.0);
		collection.add(198.0);
		collection.add(42.0);
		collection.add(29.0);
		collection.add(29.0);
		collection.add(16.0);
		collection.add(123.0);
		collection.add(63.0);
		collection.add(163.0);
		collection.add(176.0);
		collection.add(178.0);
		collection.add(164.0);
		collection.add(131.0);
		collection.add(20.0);
		collection.add(66.0);
		collection.add(82.0);
		collection.add(21.0);
		collection.add(176.0);
		collection.add(39.0);
		collection.add(170.0);
		collection.add(78.0);
		collection.add(167.0);
		collection.add(105.0);
		collection.add(48.0);
		collection.add(115.0);
		collection.add(1.0);
		collection.add(148.0);
		collection.add(69.0);
		collection.add(84.0);
		collection.add(25.0);
		collection.add(117.0);
		collection.add(38.0);
		collection.add(173.0);
		collection.add(172.0);
		collection.add(83.0);
		collection.add(25.0);
		collection.add(81.0);
		collection.add(169.0);
		collection.add(59.0);
		collection.add(30.0);
		collection.add(4.0);
		collection.add(164.0);
		collection.add(7.0);
		collection.add(46.0);
		collection.add(94.0);
		collection.add(44.0);
		collection.add(96.0);
		collection.add(154.0);
		collection.add(92.0);
		collection.add(35.0);
		collection.add(161.0);
		collection.add(79.0);
		collection.add(111.0);
		collection.add(85.0);
		collection.add(160.0);
		collection.add(85.0);
		collection.add(162.0);
		collection.add(154.0);
		collection.add(153.0);
		collection.add(95.0);
		collection.add(118.0);
		collection.add(35.0);
		collection.add(138.0);
		collection.add(18.0);
		collection.add(194.0);
		collection.add(103.0);
		collection.add(24.0);
		collection.add(90.0);
		collection.add(36.0);
		collection.add(176.0);
		collection.add(107.0);
		collection.add(77.0);
		collection.add(140.0);
		collection.add(66.0);
		collection.add(144.0);
		collection.add(12.0);
		collection.add(136.0);
		collection.add(140.0);
		collection.add(134.0);
		collection.add(131.0);
		collection.add(87.0);
		collection.add(134.0);
		collection.add(103.0);
		collection.add(53.0);
		collection.add(66.0);
		collection.add(8.0);
		collection.add(176.0);
		collection.add(163.0);
		collection.add(153.0);
		collection.add(106.0);
		collection.add(107.0);
		collection.add(28.0);
		collection.add(113.0);
		collection.add(58.0);
		collection.add(147.0);
		collection.add(200.0);
		collection.add(63.0);
		collection.add(37.0);
		collection.add(103.0);
		collection.add(49.0);
		collection.add(188.0);
		collection.add(149.0);
		collection.add(184.0);
		collection.add(130.0);
		collection.add(191.0);
		collection.add(96.0);
		collection.add(50.0);
		collection.add(30.0);
		collection.add(73.0);
		collection.add(58.0);
		collection.add(32.0);
		collection.add(59.0);
		collection.add(161.0);
		collection.add(72.0);
		collection.add(75.0);
		collection.add(167.0);
		collection.add(87.0);
		collection.add(111.0);
		collection.add(91.0);
		collection.add(34.0);
		collection.add(35.0);
		collection.add(190.0);
		collection.add(82.0);
		collection.add(157.0);
		collection.add(189.0);
		collection.add(152.0);
		collection.add(161.0);
		collection.add(35.0);
		collection.add(97.0);
		collection.add(73.0);
		collection.add(34.0);
		collection.add(31.0);
		collection.add(158.0);
		collection.add(118.0);
		collection.add(88.0);
		collection.add(157.0);
		collection.add(6.0);
		collection.add(119.0);
		collection.add(53.0);
		collection.add(79.0);
		collection.add(36.0);
		collection.add(138.0);
		collection.add(28.0);
		collection.add(80.0);
		collection.add(81.0);
		collection.add(106.0);
		collection.add(143.0);
		collection.add(154.0);
		collection.add(1.0);
		collection.add(163.0);
		collection.add(77.0);
		collection.add(200.0);
		collection.add(53.0);
		collection.add(150.0);
		collection.add(78.0);
		collection.add(149.0);
		collection.add(50.0);
		collection.add(86.0);
		collection.add(10.0);
		collection.add(102.0);
		collection.add(16.0);
		collection.add(29.0);
		collection.add(57.0);
		collection.add(9.0);
		collection.add(85.0);
		collection.add(133.0);
		collection.add(12.0);
		collection.add(27.0);
		collection.add(63.0);
		collection.add(33.0);
		collection.add(193.0);
		collection.add(132.0);
		collection.add(128.0);
		collection.add(98.0);
		collection.add(67.0);
		collection.add(147.0);
		collection.add(82.0);
		collection.add(111.0);
		collection.add(82.0);
		collection.add(117.0);
		collection.add(55.0);
		collection.add(146.0);
		collection.add(178.0);
		collection.add(40.0);
		collection.add(132.0);
		collection.add(159.0);
		collection.add(12.0);
		collection.add(6.0);
		collection.add(13.0);
		collection.add(76.0);
		collection.add(1.0);
		collection.add(11.0);
		collection.add(117.0);
		collection.add(179.0);
		collection.add(162.0);
		collection.add(67.0);
		collection.add(157.0);
		collection.add(24.0);
		collection.add(21.0);
		collection.add(127.0);
		collection.add(138.0);
		collection.add(97.0);
		collection.add(174.0);
		collection.add(139.0);
		collection.add(74.0);
		collection.add(147.0);
		collection.add(36.0);
		collection.add(88.0);
		collection.add(33.0);
		collection.add(81.0);
		collection.add(79.0);
		collection.add(62.0);
		collection.add(82.0);
		collection.add(68.0);
		collection.add(191.0);
		collection.add(34.0);
		collection.add(92.0);
		collection.add(137.0);
		collection.add(105.0);
		collection.add(82.0);
		collection.add(134.0);
		collection.add(160.0);
		collection.add(155.0);
		collection.add(194.0);
		collection.add(34.0);
		collection.add(154.0);
		collection.add(171.0);
		collection.add(118.0);
		collection.add(172.0);
		collection.add(54.0);
		collection.add(84.0);
		collection.add(139.0);
		collection.add(97.0);
		collection.add(200.0);
		collection.add(93.0);
		collection.add(172.0);
		collection.add(75.0);
		collection.add(100.0);
		collection.add(162.0);
		collection.add(124.0);
		collection.add(28.0);
		collection.add(164.0);
		collection.add(116.0);
		collection.add(14.0);
		collection.add(185.0);
		collection.add(87.0);
		collection.add(166.0);
		collection.add(18.0);
		collection.add(95.0);
		collection.add(30.0);
		collection.add(155.0);
		collection.add(48.0);
		collection.add(87.0);
		collection.add(26.0);
		collection.add(133.0);
		collection.add(62.0);
		collection.add(76.0);
		collection.add(99.0);
		collection.add(14.0);
		collection.add(53.0);
		collection.add(22.0);
		collection.add(113.0);
		collection.add(136.0);
		collection.add(87.0);
		collection.add(5.0);
		collection.add(110.0);
		collection.add(177.0);
		collection.add(107.0);
		collection.add(198.0);
		collection.add(9.0);
		collection.add(51.0);
		collection.add(134.0);
		collection.add(10.0);
		collection.add(196.0);
		collection.add(120.0);
		collection.add(153.0);
		collection.add(46.0);
		collection.add(1.0);
		collection.add(83.0);
		collection.add(173.0);
		collection.add(153.0);
		collection.add(112.0);
		collection.add(46.0);
		collection.add(7.0);
		collection.add(30.0);
		collection.add(94.0);
		collection.add(64.0);
		collection.add(88.0);
		collection.add(100.0);
		collection.add(182.0);
		collection.add(128.0);
		collection.add(84.0);
		collection.add(18.0);
		collection.add(79.0);
		collection.add(173.0);
		collection.add(2.0);
		collection.add(128.0);
		collection.add(143.0);
		collection.add(153.0);
		collection.add(94.0);
		collection.add(141.0);
		collection.add(51.0);
		collection.add(133.0);
		collection.add(183.0);
		collection.add(154.0);
		collection.add(174.0);
		collection.add(130.0);
		collection.add(137.0);
		collection.add(180.0);
		collection.add(138.0);
		collection.add(133.0);
		collection.add(54.0);
		collection.add(8.0);
		collection.add(71.0);
		collection.add(157.0);
		collection.add(146.0);
		collection.add(163.0);
		collection.add(141.0);
		collection.add(5.0);
		collection.add(161.0);
		collection.add(42.0);
		collection.add(154.0);
		collection.add(105.0);
		collection.add(58.0);
		collection.add(161.0);
		collection.add(18.0);
		collection.add(185.0);
		collection.add(140.0);
		collection.add(104.0);
		collection.add(160.0);
		collection.add(79.0);
		collection.add(118.0);
		collection.add(85.0);
		collection.add(195.0);
		collection.add(35.0);
		collection.add(72.0);
		collection.add(67.0);
		collection.add(186.0);
		collection.add(57.0);
		collection.add(165.0);
		collection.add(191.0);
		collection.add(180.0);
		collection.add(92.0);
		collection.add(3.0);
		collection.add(98.0);
		collection.add(47.0);
		collection.add(148.0);
		collection.add(137.0);
		collection.add(4.0);
		collection.add(114.0);
		collection.add(103.0);
		collection.add(83.0);
		collection.add(12.0);
		collection.add(35.0);
		collection.add(16.0);
		collection.add(90.0);
		collection.add(94.0);
		collection.add(48.0);
		collection.add(18.0);
		collection.add(143.0);
		collection.add(143.0);
		collection.add(179.0);
		collection.add(64.0);
		collection.add(57.0);
		collection.add(103.0);
		collection.add(188.0);
		collection.add(29.0);
		collection.add(171.0);
		collection.add(165.0);
		collection.add(57.0);
		collection.add(160.0);
		collection.add(106.0);
		collection.add(9.0);
		collection.add(139.0);
		collection.add(21.0);
		collection.add(150.0);
		collection.add(68.0);
		collection.add(123.0);
		collection.add(63.0);
		collection.add(101.0);
		collection.add(58.0);
		collection.add(91.0);
		collection.add(86.0);
		collection.add(152.0);
		collection.add(65.0);
		collection.add(150.0);
		collection.add(62.0);
		collection.add(138.0);
		collection.add(114.0);
		collection.add(170.0);
		collection.add(146.0);
		collection.add(82.0);
		collection.add(86.0);
		collection.add(19.0);
		collection.add(91.0);
		collection.add(148.0);
		collection.add(7.0);
		collection.add(177.0);
		collection.add(97.0);
		collection.add(60.0);
		collection.add(11.0);
		collection.add(161.0);
		collection.add(123.0);
		collection.add(156.0);
		collection.add(65.0);
		collection.add(11.0);
		collection.add(66.0);
		collection.add(36.0);
		collection.add(182.0);
		collection.add(95.0);
		collection.add(80.0);
		collection.add(149.0);
		collection.add(73.0);
		collection.add(35.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(198.0);
		collection.add(191.0);
		collection.add(137.0);
		collection.add(180.0);
		collection.add(26.0);
		collection.add(156.0);
		collection.add(66.0);
		collection.add(164.0);
		collection.add(68.0);
		collection.add(84.0);
		collection.add(20.0);
		collection.add(46.0);
		collection.add(193.0);
		collection.add(61.0);
		collection.add(162.0);
		collection.add(141.0);
		collection.add(146.0);
		collection.add(46.0);
		collection.add(173.0);
		collection.add(99.0);
		collection.add(76.0);
		collection.add(157.0);
		collection.add(165.0);
		collection.add(24.0);
		collection.add(95.0);
		collection.add(149.0);
		collection.add(92.0);
		collection.add(86.0);
		collection.add(121.0);
		collection.add(151.0);
		collection.add(183.0);
		collection.add(135.0);
		collection.add(46.0);
		collection.add(71.0);
		collection.add(93.0);
		collection.add(50.0);
		collection.add(105.0);
		collection.add(99.0);
		collection.add(114.0);
		collection.add(108.0);
		collection.add(198.0);
		collection.add(137.0);
		collection.add(129.0);
		collection.add(29.0);
		collection.add(194.0);
		collection.add(183.0);
		collection.add(23.0);
		collection.add(23.0);
		collection.add(71.0);
		collection.add(121.0);
		collection.add(120.0);
		collection.add(178.0);
		collection.add(58.0);
		collection.add(155.0);
		collection.add(125.0);
		collection.add(156.0);
		collection.add(192.0);
		collection.add(75.0);
		collection.add(159.0);
		collection.add(78.0);
		collection.add(193.0);
		collection.add(181.0);
		collection.add(34.0);
		collection.add(143.0);
		collection.add(115.0);
		collection.add(111.0);
		collection.add(116.0);
		collection.add(131.0);
		collection.add(175.0);
		collection.add(76.0);
		collection.add(126.0);
		collection.add(15.0);
		collection.add(31.0);
		collection.add(192.0);
		collection.add(54.0);
		collection.add(116.0);
		collection.add(46.0);
		collection.add(178.0);
		collection.add(88.0);
		collection.add(42.0);
		collection.add(13.0);
		collection.add(25.0);
		collection.add(43.0);
		collection.add(65.0);
		collection.add(190.0);
		collection.add(64.0);
		collection.add(186.0);
		collection.add(96.0);
		collection.add(153.0);
		collection.add(76.0);
		collection.add(74.0);
		collection.add(101.0);
		collection.add(188.0);
		collection.add(148.0);
		collection.add(200.0);
		collection.add(19.0);
		collection.add(22.0);
		collection.add(170.0);
		collection.add(111.0);
		collection.add(32.0);
		collection.add(163.0);
		collection.add(8.0);
		collection.add(35.0);
		collection.add(66.0);
		collection.add(156.0);
		collection.add(8.0);
		collection.add(82.0);
		collection.add(70.0);
		collection.add(109.0);
		collection.add(195.0);
		collection.add(171.0);
		collection.add(192.0);
		collection.add(177.0);
		collection.add(127.0);
		collection.add(29.0);
		collection.add(113.0);
		collection.add(23.0);
		collection.add(87.0);
		collection.add(156.0);
		collection.add(22.0);
		collection.add(103.0);
		collection.add(27.0);
		collection.add(134.0);
		collection.add(131.0);
		collection.add(21.0);
		collection.add(57.0);
		collection.add(167.0);
		collection.add(55.0);
		collection.add(151.0);
		collection.add(109.0);
		collection.add(45.0);
		collection.add(23.0);
		collection.add(55.0);
		collection.add(180.0);
		collection.add(102.0);
		collection.add(184.0);
		collection.add(119.0);
		collection.add(200.0);
		collection.add(73.0);
		collection.add(185.0);
		collection.add(34.0);
		collection.add(183.0);
		collection.add(185.0);
		collection.add(69.0);
		collection.add(26.0);
		collection.add(133.0);
		collection.add(188.0);
		collection.add(58.0);
		collection.add(14.0);
		collection.add(165.0);
		collection.add(84.0);
		collection.add(127.0);
		collection.add(74.0);
		collection.add(121.0);
		collection.add(45.0);
		collection.add(163.0);
		collection.add(61.0);
		collection.add(139.0);
		collection.add(95.0);
		collection.add(159.0);
		collection.add(189.0);
		collection.add(191.0);
		collection.add(160.0);
		collection.add(73.0);
		collection.add(102.0);
		collection.add(186.0);
		collection.add(34.0);
		collection.add(183.0);
		collection.add(173.0);
		collection.add(62.0);
		collection.add(195.0);
		collection.add(186.0);
		collection.add(197.0);
		collection.add(122.0);
		collection.add(143.0);
		collection.add(13.0);
		collection.add(80.0);
		collection.add(52.0);
		collection.add(40.0);
		collection.add(30.0);
		collection.add(178.0);
		collection.add(48.0);
		collection.add(136.0);
		collection.add(162.0);
		collection.add(102.0);
		collection.add(172.0);
		collection.add(76.0);
		collection.add(102.0);
		collection.add(10.0);
		collection.add(77.0);
		collection.add(9.0);
		collection.add(40.0);
		collection.add(13.0);
		collection.add(4.0);
		collection.add(27.0);
		collection.add(155.0);
		collection.add(70.0);
		collection.add(27.0);
		collection.add(167.0);
		collection.add(193.0);
		collection.add(59.0);
		collection.add(67.0);
		collection.add(140.0);
		collection.add(108.0);
		collection.add(59.0);
		collection.add(19.0);
		collection.add(69.0);
		collection.add(108.0);
		collection.add(112.0);
		collection.add(94.0);
		collection.add(148.0);
		collection.add(11.0);
		collection.add(187.0);
		collection.add(16.0);
		collection.add(171.0);
		collection.add(194.0);
		collection.add(157.0);
		collection.add(199.0);
		collection.add(184.0);
		collection.add(199.0);
		collection.add(85.0);
		collection.add(79.0);
		collection.add(60.0);
		collection.add(13.0);
		collection.add(153.0);
		collection.add(15.0);
		collection.add(171.0);
		collection.add(150.0);
		collection.add(144.0);
		collection.add(189.0);
		collection.add(141.0);
		collection.add(146.0);
		collection.add(29.0);
		collection.add(190.0);
		collection.add(144.0);
		collection.add(123.0);
		collection.add(155.0);
		collection.add(158.0);
		collection.add(139.0);
		collection.add(49.0);
		collection.add(146.0);
		collection.add(130.0);
		collection.add(32.0);
		collection.add(181.0);
		collection.add(2.0);
		collection.add(113.0);
		collection.add(139.0);
		collection.add(52.0);
		collection.add(44.0);
		collection.add(5.0);
		collection.add(48.0);
		collection.add(83.0);
		collection.add(138.0);
		collection.add(121.0);
		collection.add(86.0);
		collection.add(121.0);
		collection.add(29.0);
		collection.add(189.0);
		collection.add(92.0);
		collection.add(2.0);
		collection.add(179.0);
		collection.add(117.0);
		collection.add(88.0);
		collection.add(88.0);
		collection.add(12.0);
		collection.add(154.0);
		collection.add(64.0);
		collection.add(152.0);
		collection.add(88.0);
		collection.add(34.0);
		collection.add(129.0);
		collection.add(150.0);
		collection.add(12.0);
		collection.add(84.0);
		collection.add(27.0);
		collection.add(139.0);
		collection.add(157.0);
		collection.add(3.0);
		collection.add(77.0);
		collection.add(5.0);
		collection.add(185.0);
		collection.add(84.0);
		collection.add(16.0);
		collection.add(170.0);
		collection.add(188.0);
		collection.add(14.0);
		collection.add(111.0);
		collection.add(74.0);
		collection.add(46.0);
		collection.add(91.0);
		collection.add(97.0);
		collection.add(65.0);
		collection.add(181.0);
		collection.add(35.0);
		collection.add(111.0);
		collection.add(26.0);
		collection.add(130.0);
		collection.add(134.0);
		collection.add(196.0);
		collection.add(185.0);
		collection.add(149.0);
		collection.add(85.0);
		collection.add(36.0);
		collection.add(138.0);
		collection.add(73.0);
		collection.add(67.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JVectorSequence(Blackhole bh) {
		collection.add(199.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(188.0,140.0,10.0,137.0,74.0,69.0,130.0)));
		collection.add(184, 3.0);
		collection.add(0, 148.0);
		bh.consume(collection.indexOf(136.0));
		bh.consume(collection.addAll(132, java.util.Arrays.asList(155.0,44.0,80.0,147.0,118.0,135.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(61.0,162.0,145.0,92.0,188.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(163.0,101.0,160.0)));
		bh.consume(collection.contains(122.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,7.0,164.0,164.0,102.0,189.0)));
		bh.consume(collection.remove(171));
		bh.consume(collection.addAll(160, java.util.Arrays.asList(13.0,5.0,115.0)));
		collection.add(132, 189.0);
		bh.consume(collection.indexOf(166.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(179.0,158.0,150.0,130.0,9.0)));
		collection.add(0, 198.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(82.0,119.0,156.0,143.0,199.0)));
		bh.consume(collection.remove(161));
		bh.consume(collection.addAll(java.util.Arrays.asList(80.0,26.0,174.0,187.0,19.0,71.0,7.0)));
		bh.consume(collection.addAll(137, java.util.Arrays.asList(157.0,152.0,89.0,168.0,13.0,21.0,104.0,59.0,111.0)));
		bh.consume(collection.indexOf(54.0));
		bh.consume(collection.get(170));
		bh.consume(collection.contains(31.0));
		collection.add(0, 22.0);
		collection.add(0, 190.0);
		collection.remove(117.0);
		collection.add(0, 1.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(169.0,107.0,55.0,6.0,184.0)));
		bh.consume(collection.indexOf(130.0));
		collection.add(0, 175.0);
		collection.add(54, 6.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(40.0,101.0,187.0,3.0,133.0,48.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(88.0,195.0,40.0,77.0,33.0,180.0,54.0,120.0)));
		bh.consume(collection.remove(60));
		collection.add(76, 25.0);
		bh.consume(collection.addAll(183, java.util.Arrays.asList(26.0,91.0,80.0,68.0,47.0,131.0,91.0,92.0,200.0)));
		bh.consume(collection.addAll(32, java.util.Arrays.asList(94.0,138.0,196.0,130.0,57.0,87.0,49.0,115.0,129.0)));
		collection.add(0, 162.0);
		bh.consume(collection.indexOf(155.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(18.0,153.0,45.0,14.0,31.0,158.0,23.0,154.0,24.0)));
		bh.consume(collection.addAll(17, java.util.Arrays.asList(75.0,107.0,189.0,82.0)));
		bh.consume(collection.indexOf(138.0));
		bh.consume(collection.addAll(14, java.util.Arrays.asList(38.0,34.0,191.0,50.0,122.0,165.0,68.0,80.0,112.0)));
		bh.consume(collection.get(145));
		bh.consume(collection.remove(56));
		collection.add(0, 12.0);
		bh.consume(collection.indexOf(186.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(100.0,25.0,196.0,180.0,54.0)));
		collection.add(139, 199.0);
		bh.consume(collection.indexOf(37.0));
		bh.consume(collection.addAll(165, java.util.Arrays.asList(109.0,4.0,198.0,41.0,177.0,72.0,174.0,193.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(11.0,62.0,29.0,55.0,90.0,147.0,168.0,170.0,140.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(126.0,178.0,173.0,150.0,42.0,79.0,76.0,176.0,175.0)));
		bh.consume(collection.indexOf(112.0));
		collection.add(192, 137.0);
		collection.add(0, 64.0);
		bh.consume(collection.get(162));
		collection.add(0, 95.0);
		collection.add(0, 31.0);
		bh.consume(collection.indexOf(49.0));
		bh.consume(collection.contains(101.0));
		collection.add(59, 41.0);
		collection.add(6.0);
		bh.consume(collection.contains(186.0));
		collection.add(113.0);
		bh.consume(collection.indexOf(172.0));
		bh.consume(collection.lastIndexOf(71.0));
		bh.consume(collection.addAll(36, java.util.Arrays.asList(169.0,159.0,108.0)));
		collection.add(0, 93.0);
		bh.consume(collection.contains(64.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(140.0,199.0,189.0)));
		bh.consume(collection.get(162));
		bh.consume(collection.addAll(java.util.Arrays.asList(12.0,126.0,40.0,135.0,191.0)));
		bh.consume(collection.indexOf(144.0));
		collection.add(0, 100.0);
		bh.consume(collection.addAll(59, java.util.Arrays.asList(82.0,54.0,118.0,143.0)));
		bh.consume(collection.get(9));
		bh.consume(collection.contains(127.0));
		collection.add(0, 102.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(174.0,140.0,34.0,91.0,85.0,31.0,147.0)));
		bh.consume(collection.indexOf(34.0));
		bh.consume(collection.indexOf(164.0));
		bh.consume(collection.addAll(114, java.util.Arrays.asList(184.0,127.0,66.0,70.0)));
		bh.consume(collection.addAll(43, java.util.Arrays.asList(192.0,175.0,21.0,16.0,77.0,97.0)));
		bh.consume(collection.indexOf(64.0));
		bh.consume(collection.lastIndexOf(120.0));
		collection.remove(196.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(144.0,85.0,129.0)));
		bh.consume(collection.contains(54.0));
		collection.add(176.0);
		collection.remove(16.0);
		bh.consume(collection.indexOf(111.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(120.0,43.0,7.0)));
		collection.remove(191.0);
		bh.consume(collection.remove(171));
		bh.consume(collection.addAll(java.util.Arrays.asList(46.0,172.0,180.0,123.0,28.0,49.0,29.0)));
		bh.consume(collection.indexOf(141.0));
		bh.consume(collection.get(8));
		collection.add(74.0);
		collection.remove(153.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(170.0,92.0,8.0,109.0,71.0,137.0,17.0)));
		bh.consume(collection.contains(158.0));
		bh.consume(collection.indexOf(37.0));
		bh.consume(collection.remove(24));
		bh.consume(collection.remove(96));
		collection.remove(181.0);
		collection.add(73, 140.0);
		bh.consume(collection.lastIndexOf(70.0));
		bh.consume(collection.indexOf(47.0));
		bh.consume(collection.indexOf(15.0));
		bh.consume(collection.lastIndexOf(32.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,107.0,96.0,2.0,81.0,141.0,187.0,189.0,167.0)));
		collection.add(127.0);
		collection.add(0, 101.0);
		bh.consume(collection.get(179));
		collection.add(155, 196.0);
		bh.consume(collection.indexOf(108.0));
		collection.add(0, 178.0);
		bh.consume(collection.remove(180));
		bh.consume(collection.contains(158.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(149.0,164.0,65.0,75.0,102.0,34.0)));
		bh.consume(collection.indexOf(156.0));
		bh.consume(collection.lastIndexOf(123.0));
		collection.add(46.0);
		bh.consume(collection.addAll(118, java.util.Arrays.asList(190.0,167.0,58.0,80.0)));
		collection.add(18, 147.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(113.0,81.0,26.0,11.0,164.0,149.0,190.0,192.0,173.0)));
		bh.consume(collection.get(90));
		bh.consume(collection.remove(166));
		collection.add(71.0);
		bh.consume(collection.indexOf(198.0));
		bh.consume(collection.indexOf(57.0));
		bh.consume(collection.remove(64));
		collection.add(191.0);
		bh.consume(collection.contains(134.0));
		collection.add(0, 62.0);
		collection.add(0, 22.0);
		bh.consume(collection.remove(93));
		bh.consume(collection.remove(106));
		collection.add(148.0);
		bh.consume(collection.get(139));
		bh.consume(collection.remove(24));
		bh.consume(collection.addAll(java.util.Arrays.asList(130.0,34.0,110.0,58.0,177.0,20.0,103.0,149.0,112.0)));
		collection.remove(35.0);
		collection.add(40, 131.0);
		collection.add(0, 112.0);
		bh.consume(collection.contains(198.0));
		collection.remove(134.0);
		bh.consume(collection.indexOf(189.0));
		collection.remove(3.0);
		bh.consume(collection.remove(180));
		bh.consume(collection.addAll(java.util.Arrays.asList(162.0,183.0,32.0,179.0,185.0,99.0,112.0,149.0,88.0)));
		collection.add(0, 107.0);
		bh.consume(collection.get(163));
		bh.consume(collection.indexOf(71.0));
		bh.consume(collection.addAll(103, java.util.Arrays.asList(110.0,49.0,19.0,1.0,39.0,53.0,116.0,141.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(134.0,74.0,179.0,158.0,40.0,158.0,128.0)));
		bh.consume(collection.indexOf(128.0));
		bh.consume(collection.get(17));
		collection.add(173, 83.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(199.0,160.0,182.0)));
		bh.consume(collection.remove(125));
		bh.consume(collection.addAll(java.util.Arrays.asList(20.0,189.0,188.0,109.0)));
		collection.add(40.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(133.0,25.0,200.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(140.0,9.0,147.0,179.0,80.0,190.0)));
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.addAll(175, java.util.Arrays.asList(150.0,196.0,185.0,84.0)));
		bh.consume(collection.indexOf(124.0));
		bh.consume(collection.remove(18));
		bh.consume(collection.addAll(118, java.util.Arrays.asList(119.0,13.0,113.0)));
		bh.consume(collection.indexOf(178.0));
		bh.consume(collection.remove(30));
		collection.add(183, 184.0);
		bh.consume(collection.remove(168));
		bh.consume(collection.indexOf(184.0));
		bh.consume(collection.remove(78));
		collection.add(168.0);
		bh.consume(collection.addAll(42, java.util.Arrays.asList(193.0,108.0,176.0,59.0,73.0,125.0,115.0,79.0,32.0)));
		bh.consume(collection.indexOf(114.0));
		bh.consume(collection.indexOf(88.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(147.0,97.0,129.0,150.0,51.0,6.0,129.0)));
		bh.consume(collection.contains(55.0));
		collection.add(123.0);
		bh.consume(collection.addAll(182, java.util.Arrays.asList(12.0,67.0,60.0)));
		collection.add(31.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(97.0,81.0,100.0,88.0,7.0,53.0,122.0,55.0,162.0)));
		bh.consume(collection.indexOf(144.0));
		bh.consume(collection.lastIndexOf(108.0));
		bh.consume(collection.lastIndexOf(183.0));
		bh.consume(collection.contains(98.0));
		collection.add(39.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(154.0,69.0,191.0)));
		bh.consume(collection.contains(187.0));
		collection.remove(39.0);
		bh.consume(collection.remove(37));
		bh.consume(collection.addAll(5, java.util.Arrays.asList(119.0,51.0,114.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,179.0,109.0)));
		bh.consume(collection.get(192));
		collection.add(108, 200.0);
		collection.add(0, 6.0);
		collection.add(129.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(2.0,128.0,190.0,152.0)));
		bh.consume(collection.addAll(180, java.util.Arrays.asList(140.0,76.0,102.0,107.0,19.0,63.0,35.0,64.0,110.0)));
		bh.consume(collection.indexOf(64.0));
		collection.add(0, 196.0);
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.indexOf(194.0));
		collection.add(172.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(190.0,138.0,59.0,115.0,187.0,189.0,21.0,91.0,71.0)));
		bh.consume(collection.indexOf(44.0));
		collection.add(58, 26.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(52.0,141.0,167.0,153.0,127.0,147.0,26.0,117.0,37.0)));
		bh.consume(collection.indexOf(168.0));
		bh.consume(collection.addAll(1, java.util.Arrays.asList(15.0,106.0,85.0,136.0,152.0,31.0,98.0)));
		bh.consume(collection.indexOf(156.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,15.0,87.0,85.0,115.0,61.0)));
		bh.consume(collection.indexOf(180.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(144.0,76.0,188.0)));
		collection.add(0, 124.0);
		bh.consume(collection.addAll(41, java.util.Arrays.asList(137.0,85.0,43.0,107.0)));
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.remove(105));
		bh.consume(collection.contains(135.0));
		bh.consume(collection.indexOf(104.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(137.0,146.0,96.0,78.0,106.0,199.0,183.0)));
		collection.add(174, 139.0);
		bh.consume(collection.indexOf(58.0));
		bh.consume(collection.indexOf(168.0));
		bh.consume(collection.addAll(199, java.util.Arrays.asList(91.0,82.0,41.0)));
		bh.consume(collection.indexOf(67.0));
		collection.add(139.0);
		collection.add(52.0);
		collection.remove(44.0);
		bh.consume(collection.contains(56.0));
		bh.consume(collection.indexOf(17.0));
		collection.add(0, 164.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(85.0,13.0,196.0)));
		bh.consume(collection.remove(195));
		bh.consume(collection.addAll(55, java.util.Arrays.asList(164.0,15.0,147.0,82.0,103.0,179.0,42.0)));
		bh.consume(collection.indexOf(24.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(24.0,146.0,74.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(101.0,117.0,130.0,83.0,96.0,175.0,31.0,1.0)));
		collection.add(22, 36.0);
		collection.add(143.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(30.0,84.0,177.0,150.0)));
		collection.add(133, 3.0);
		bh.consume(collection.indexOf(104.0));
		collection.add(189, 188.0);
		bh.consume(collection.indexOf(110.0));
		bh.consume(collection.remove(21));
		bh.consume(collection.indexOf(44.0));
		collection.add(72, 97.0);
		bh.consume(collection.contains(179.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(176.0,15.0,158.0,115.0,190.0,51.0,51.0,169.0)));
		collection.add(16.0);
		collection.add(0, 132.0);
		collection.add(15.0);
		collection.add(0, 168.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,130.0,31.0,128.0,169.0,113.0,192.0,122.0,69.0)));
		collection.add(188.0);
		bh.consume(collection.indexOf(193.0));
		collection.add(161, 135.0);
		collection.add(60, 59.0);
		bh.consume(collection.contains(79.0));
		bh.consume(collection.addAll(183, java.util.Arrays.asList(49.0,188.0,145.0,51.0)));
		bh.consume(collection.addAll(85, java.util.Arrays.asList(131.0,18.0,146.0,101.0,80.0,177.0,40.0,177.0)));
		bh.consume(collection.addAll(55, java.util.Arrays.asList(152.0,9.0,85.0)));
		bh.consume(collection.addAll(132, java.util.Arrays.asList(67.0,61.0,27.0,40.0)));
		bh.consume(collection.indexOf(75.0));
		collection.add(0, 105.0);
		bh.consume(collection.remove(61));
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,5.0,123.0,167.0,2.0,106.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(106.0,66.0,5.0,80.0,112.0,25.0,121.0,50.0)));
		bh.consume(collection.indexOf(120.0));
		bh.consume(collection.indexOf(67.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(196.0,133.0,171.0,13.0,88.0,109.0,141.0)));
		bh.consume(collection.remove(166));
		bh.consume(collection.contains(19.0));
		collection.add(164, 175.0);
		bh.consume(collection.indexOf(10.0));
		bh.consume(collection.remove(81));
		bh.consume(collection.addAll(175, java.util.Arrays.asList(121.0,76.0,147.0,40.0,86.0,108.0,75.0,80.0,37.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(123.0,86.0,49.0,64.0,148.0)));
		collection.add(0, 128.0);
		bh.consume(collection.indexOf(194.0));
		bh.consume(collection.addAll(31, java.util.Arrays.asList(63.0,86.0,19.0,197.0,45.0,98.0,17.0,5.0,153.0)));
		bh.consume(collection.indexOf(63.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(149.0,117.0,66.0,101.0,17.0,10.0,31.0,131.0,175.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(132.0,178.0,99.0)));
		collection.add(158.0);
		bh.consume(collection.indexOf(41.0));
		bh.consume(collection.contains(101.0));
		collection.add(57, 185.0);
		bh.consume(collection.get(129));
		collection.remove(127.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(80.0,32.0,10.0,141.0,167.0,168.0,29.0,129.0,182.0)));
		bh.consume(collection.addAll(144, java.util.Arrays.asList(180.0,69.0,60.0,6.0,59.0,17.0,103.0,9.0,33.0)));
		collection.add(0, 73.0);
		bh.consume(collection.indexOf(18.0));
		bh.consume(collection.indexOf(182.0));
		bh.consume(collection.addAll(146, java.util.Arrays.asList(194.0,10.0,54.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(43.0,70.0,86.0)));
		collection.add(0, 43.0);
		bh.consume(collection.remove(19));
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,68.0,67.0,179.0,91.0)));
		collection.add(0, 97.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(172.0,200.0,18.0)));
		bh.consume(collection.indexOf(21.0));
		bh.consume(collection.contains(139.0));
		collection.add(0, 92.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(91.0,103.0,152.0,111.0,118.0,15.0,185.0)));
		bh.consume(collection.contains(42.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(142.0,97.0,109.0,49.0,157.0,127.0,78.0)));
		bh.consume(collection.get(69));
		bh.consume(collection.addAll(java.util.Arrays.asList(80.0,49.0,58.0,5.0,151.0,158.0,12.0,158.0)));
		collection.add(0, 133.0);
		collection.add(115, 97.0);
		collection.remove(2.0);
		bh.consume(collection.indexOf(87.0));
		collection.add(0, 25.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(169.0,96.0,141.0,167.0,113.0)));
		bh.consume(collection.indexOf(51.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(82.0,30.0,15.0,45.0,36.0,38.0,89.0)));
		bh.consume(collection.indexOf(176.0));
		bh.consume(collection.lastIndexOf(85.0));
		bh.consume(collection.indexOf(158.0));
		bh.consume(collection.contains(47.0));
		bh.consume(collection.indexOf(193.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(73.0,86.0,101.0,102.0,105.0,58.0,105.0)));
		bh.consume(collection.get(5));
		bh.consume(collection.addAll(117, java.util.Arrays.asList(10.0,9.0,52.0,41.0,137.0,121.0,146.0,123.0)));
		bh.consume(collection.remove(12));
		bh.consume(collection.addAll(java.util.Arrays.asList(109.0,13.0,2.0,55.0,154.0,64.0,142.0,62.0,65.0)));
		bh.consume(collection.remove(157));
		bh.consume(collection.indexOf(186.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(30.0,128.0,169.0,81.0,111.0,158.0,136.0,35.0,57.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(1.0,106.0,114.0,169.0,60.0,48.0,6.0,64.0)));
		bh.consume(collection.indexOf(156.0));
		collection.remove(92.0);
		bh.consume(collection.addAll(37, java.util.Arrays.asList(87.0,26.0,39.0,32.0,60.0,143.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(171.0,71.0,66.0,198.0,146.0,187.0,74.0)));
		bh.consume(collection.indexOf(149.0));
		bh.consume(collection.get(157));
		bh.consume(collection.addAll(java.util.Arrays.asList(16.0,36.0,56.0)));
		bh.consume(collection.indexOf(191.0));
		bh.consume(collection.indexOf(106.0));
		bh.consume(collection.addAll(197, java.util.Arrays.asList(67.0,150.0,20.0)));
		collection.add(16, 145.0);
		collection.add(178, 92.0);
		bh.consume(collection.indexOf(18.0));
		collection.add(0, 171.0);
		bh.consume(collection.addAll(126, java.util.Arrays.asList(193.0,25.0,153.0,21.0,103.0,168.0,144.0,47.0,45.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(173.0,140.0,37.0)));
		collection.add(165, 187.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,58.0,80.0,190.0,106.0,28.0,181.0,181.0,81.0)));
		bh.consume(collection.addAll(153, java.util.Arrays.asList(103.0,157.0,173.0,16.0,76.0,108.0,60.0,73.0,59.0)));
		bh.consume(collection.indexOf(126.0));
		bh.consume(collection.indexOf(73.0));
		collection.add(28.0);
		collection.add(0, 168.0);
		bh.consume(collection.indexOf(38.0));
		bh.consume(collection.contains(178.0));
		bh.consume(collection.indexOf(25.0));
		bh.consume(collection.indexOf(6.0));
		collection.add(37.0);
		collection.add(59, 177.0);
		collection.add(71, 158.0);
		collection.add(0, 96.0);
		bh.consume(collection.indexOf(164.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(1.0,115.0,92.0,150.0,103.0,93.0,105.0)));
		bh.consume(collection.contains(174.0));
		bh.consume(collection.contains(195.0));
		bh.consume(collection.contains(194.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(118.0,135.0,7.0)));
		bh.consume(collection.remove(116));
		bh.consume(collection.addAll(java.util.Arrays.asList(163.0,53.0,135.0,73.0)));
		bh.consume(collection.contains(13.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(182.0,54.0,122.0,95.0,115.0)));
		bh.consume(collection.remove(171));
		bh.consume(collection.contains(46.0));
		collection.add(110, 164.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(191.0,195.0,34.0)));
		bh.consume(collection.contains(155.0));
		collection.add(45.0);
		bh.consume(collection.indexOf(24.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(103.0,135.0,48.0,50.0)));
		collection.add(0, 28.0);
		collection.add(106.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(4.0,78.0,12.0,25.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(117.0,191.0,127.0,70.0)));
		bh.consume(collection.addAll(68, java.util.Arrays.asList(166.0,59.0,136.0,10.0,88.0,109.0,172.0,19.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(15.0,154.0,30.0,144.0,133.0,184.0,43.0,67.0)));
		bh.consume(collection.get(89));
		bh.consume(collection.addAll(java.util.Arrays.asList(39.0,189.0,165.0,166.0,125.0,26.0,148.0,62.0,160.0)));
		bh.consume(collection.indexOf(80.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(65.0,63.0,196.0,79.0,91.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(196.0,69.0,34.0,133.0)));
		collection.add(86, 126.0);
		bh.consume(collection.contains(185.0));
		bh.consume(collection.get(146));
		bh.consume(collection.contains(44.0));
		collection.remove(121.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(47.0,75.0,134.0,74.0,103.0,185.0,13.0,110.0)));
		bh.consume(collection.contains(147.0));
		bh.consume(collection.addAll(95, java.util.Arrays.asList(25.0,74.0,134.0,47.0,10.0,22.0,137.0)));
		bh.consume(collection.contains(196.0));
		bh.consume(collection.remove(176));
		bh.consume(collection.indexOf(38.0));
		collection.add(163.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(116.0,42.0,173.0,58.0,65.0,191.0,154.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,196.0,199.0,184.0,106.0)));
		collection.add(0, 37.0);
		bh.consume(collection.indexOf(43.0));
		bh.consume(collection.contains(157.0));
		bh.consume(collection.indexOf(170.0));
		bh.consume(collection.indexOf(109.0));
		bh.consume(collection.contains(81.0));
		collection.add(150, 74.0);
		collection.add(0, 28.0);
		collection.add(102, 52.0);
		collection.add(0, 34.0);
		bh.consume(collection.get(197));
		bh.consume(collection.addAll(java.util.Arrays.asList(155.0,91.0,199.0,78.0,197.0,97.0,8.0,128.0)));
		bh.consume(collection.contains(102.0));
		bh.consume(collection.addAll(4, java.util.Arrays.asList(16.0,159.0,193.0,177.0,133.0,99.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(161.0,42.0,190.0,125.0,112.0,60.0,129.0,89.0,89.0)));
		collection.add(86, 157.0);
		bh.consume(collection.get(39));
		collection.add(187, 90.0);
		collection.add(0, 96.0);
		collection.add(0, 109.0);
		bh.consume(collection.contains(73.0));
		bh.consume(collection.remove(13));
		bh.consume(collection.addAll(java.util.Arrays.asList(77.0,155.0,54.0)));
		bh.consume(collection.get(74));
		collection.remove(184.0);
		bh.consume(collection.get(113));
		bh.consume(collection.addAll(java.util.Arrays.asList(199.0,177.0,120.0,34.0,127.0,29.0,190.0,193.0,76.0)));
		collection.add(102, 73.0);
		collection.add(164.0);
		collection.add(0, 169.0);
		bh.consume(collection.contains(11.0));
		bh.consume(collection.contains(5.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(67.0,157.0,197.0,182.0,198.0,134.0,122.0,72.0)));
		bh.consume(collection.remove(81));
		bh.consume(collection.contains(179.0));
		bh.consume(collection.addAll(77, java.util.Arrays.asList(148.0,199.0,41.0,161.0,74.0,149.0,122.0,28.0,6.0)));
		collection.add(95.0);
		bh.consume(collection.indexOf(60.0));
		collection.add(44, 48.0);
		bh.consume(collection.addAll(33, java.util.Arrays.asList(115.0,172.0,73.0,78.0,14.0,102.0,115.0,126.0,166.0)));
		collection.add(86, 21.0);
		collection.add(0, 123.0);
		collection.add(172.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(59.0,181.0,199.0,61.0)));
		collection.add(0, 103.0);
		bh.consume(collection.indexOf(157.0));
		bh.consume(collection.indexOf(52.0));
		bh.consume(collection.indexOf(65.0));
		bh.consume(collection.remove(188));
		collection.add(60, 155.0);
		bh.consume(collection.addAll(118, java.util.Arrays.asList(7.0,174.0,188.0)));
		bh.consume(collection.indexOf(114.0));
		bh.consume(collection.addAll(171, java.util.Arrays.asList(24.0,47.0,38.0)));
		bh.consume(collection.get(190));
		bh.consume(collection.addAll(java.util.Arrays.asList(4.0,193.0,38.0,116.0,66.0,28.0,136.0,125.0)));
		collection.add(0, 114.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(57.0,173.0,65.0,57.0)));
		bh.consume(collection.indexOf(130.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(106.0,172.0,74.0,195.0,29.0,91.0,8.0,165.0,25.0)));
		collection.add(45, 42.0);
		collection.add(0, 64.0);
		collection.add(0, 168.0);
		bh.consume(collection.addAll(180, java.util.Arrays.asList(114.0,131.0,133.0)));
		bh.consume(collection.remove(75));
		bh.consume(collection.addAll(172, java.util.Arrays.asList(93.0,163.0,29.0,59.0,66.0,17.0,36.0,96.0)));
		collection.add(67, 126.0);
		bh.consume(collection.addAll(196, java.util.Arrays.asList(130.0,18.0,55.0,48.0,18.0,32.0,74.0,98.0,37.0)));
		bh.consume(collection.indexOf(172.0));
		bh.consume(collection.indexOf(108.0));
		bh.consume(collection.remove(24));
		bh.consume(collection.remove(106));
		bh.consume(collection.remove(55));
		collection.add(0, 127.0);
		bh.consume(collection.indexOf(145.0));
		collection.add(0, 35.0);
		bh.consume(collection.indexOf(114.0));
		bh.consume(collection.addAll(147, java.util.Arrays.asList(133.0,17.0,161.0,139.0,131.0,49.0)));
		collection.add(0, 94.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(148.0,7.0,84.0,102.0,162.0,112.0)));
		bh.consume(collection.addAll(163, java.util.Arrays.asList(61.0,28.0,85.0,67.0,144.0)));
		collection.add(0, 26.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,100.0,135.0,138.0,147.0,154.0,115.0,129.0,71.0)));
		bh.consume(collection.addAll(101, java.util.Arrays.asList(62.0,22.0,163.0,198.0,138.0)));
		bh.consume(collection.contains(52.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(171.0,198.0,112.0,19.0)));
		bh.consume(collection.remove(8));
		collection.add(138, 150.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(148.0,39.0,111.0,148.0,169.0,14.0)));
	}
}
