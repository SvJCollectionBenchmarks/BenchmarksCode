package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile0AllSequences_JLinkedSequence_20220501132109310 {
	java.util.LinkedList<Double> collection = new java.util.LinkedList<>();
	@Setup(Level.Invocation)
	public void setupJLinkedSequence() {
		collection = new java.util.LinkedList<>();
		collection.add(164.0);
		collection.add(4.0);
		collection.add(38.0);
		collection.add(32.0);
		collection.add(10.0);
		collection.add(85.0);
		collection.add(18.0);
		collection.add(188.0);
		collection.add(187.0);
		collection.add(53.0);
		collection.add(187.0);
		collection.add(24.0);
		collection.add(52.0);
		collection.add(171.0);
		collection.add(17.0);
		collection.add(123.0);
		collection.add(73.0);
		collection.add(143.0);
		collection.add(193.0);
		collection.add(106.0);
		collection.add(174.0);
		collection.add(133.0);
		collection.add(52.0);
		collection.add(151.0);
		collection.add(175.0);
		collection.add(127.0);
		collection.add(196.0);
		collection.add(175.0);
		collection.add(174.0);
		collection.add(25.0);
		collection.add(72.0);
		collection.add(104.0);
		collection.add(31.0);
		collection.add(146.0);
		collection.add(140.0);
		collection.add(7.0);
		collection.add(199.0);
		collection.add(168.0);
		collection.add(76.0);
		collection.add(186.0);
		collection.add(171.0);
		collection.add(20.0);
		collection.add(155.0);
		collection.add(197.0);
		collection.add(22.0);
		collection.add(73.0);
		collection.add(43.0);
		collection.add(71.0);
		collection.add(13.0);
		collection.add(43.0);
		collection.add(26.0);
		collection.add(166.0);
		collection.add(199.0);
		collection.add(42.0);
		collection.add(72.0);
		collection.add(18.0);
		collection.add(25.0);
		collection.add(93.0);
		collection.add(9.0);
		collection.add(147.0);
		collection.add(188.0);
		collection.add(138.0);
		collection.add(181.0);
		collection.add(121.0);
		collection.add(158.0);
		collection.add(59.0);
		collection.add(180.0);
		collection.add(84.0);
		collection.add(180.0);
		collection.add(155.0);
		collection.add(64.0);
		collection.add(129.0);
		collection.add(178.0);
		collection.add(33.0);
		collection.add(184.0);
		collection.add(84.0);
		collection.add(177.0);
		collection.add(16.0);
		collection.add(13.0);
		collection.add(93.0);
		collection.add(118.0);
		collection.add(189.0);
		collection.add(66.0);
		collection.add(3.0);
		collection.add(174.0);
		collection.add(113.0);
		collection.add(179.0);
		collection.add(150.0);
		collection.add(57.0);
		collection.add(47.0);
		collection.add(10.0);
		collection.add(146.0);
		collection.add(146.0);
		collection.add(123.0);
		collection.add(173.0);
		collection.add(5.0);
		collection.add(16.0);
		collection.add(174.0);
		collection.add(98.0);
		collection.add(50.0);
		collection.add(75.0);
		collection.add(13.0);
		collection.add(65.0);
		collection.add(124.0);
		collection.add(94.0);
		collection.add(16.0);
		collection.add(87.0);
		collection.add(15.0);
		collection.add(59.0);
		collection.add(37.0);
		collection.add(52.0);
		collection.add(120.0);
		collection.add(71.0);
		collection.add(58.0);
		collection.add(60.0);
		collection.add(102.0);
		collection.add(165.0);
		collection.add(67.0);
		collection.add(177.0);
		collection.add(193.0);
		collection.add(44.0);
		collection.add(44.0);
		collection.add(58.0);
		collection.add(56.0);
		collection.add(85.0);
		collection.add(29.0);
		collection.add(55.0);
		collection.add(11.0);
		collection.add(111.0);
		collection.add(27.0);
		collection.add(168.0);
		collection.add(8.0);
		collection.add(186.0);
		collection.add(123.0);
		collection.add(57.0);
		collection.add(166.0);
		collection.add(30.0);
		collection.add(60.0);
		collection.add(182.0);
		collection.add(68.0);
		collection.add(8.0);
		collection.add(1.0);
		collection.add(121.0);
		collection.add(166.0);
		collection.add(47.0);
		collection.add(118.0);
		collection.add(48.0);
		collection.add(62.0);
		collection.add(197.0);
		collection.add(41.0);
		collection.add(114.0);
		collection.add(96.0);
		collection.add(93.0);
		collection.add(144.0);
		collection.add(37.0);
		collection.add(184.0);
		collection.add(189.0);
		collection.add(24.0);
		collection.add(144.0);
		collection.add(30.0);
		collection.add(133.0);
		collection.add(49.0);
		collection.add(155.0);
		collection.add(80.0);
		collection.add(152.0);
		collection.add(22.0);
		collection.add(78.0);
		collection.add(192.0);
		collection.add(56.0);
		collection.add(192.0);
		collection.add(56.0);
		collection.add(99.0);
		collection.add(108.0);
		collection.add(23.0);
		collection.add(96.0);
		collection.add(95.0);
		collection.add(6.0);
		collection.add(124.0);
		collection.add(24.0);
		collection.add(105.0);
		collection.add(106.0);
		collection.add(6.0);
		collection.add(165.0);
		collection.add(14.0);
		collection.add(146.0);
		collection.add(183.0);
		collection.add(164.0);
		collection.add(73.0);
		collection.add(181.0);
		collection.add(197.0);
		collection.add(93.0);
		collection.add(162.0);
		collection.add(70.0);
		collection.add(55.0);
		collection.add(66.0);
		collection.add(33.0);
		collection.add(71.0);
		collection.add(8.0);
		collection.add(200.0);
		collection.add(64.0);
		collection.add(83.0);
		collection.add(56.0);
		collection.add(84.0);
		collection.add(86.0);
		collection.add(99.0);
		collection.add(32.0);
		collection.add(33.0);
		collection.add(116.0);
		collection.add(39.0);
		collection.add(122.0);
		collection.add(29.0);
		collection.add(171.0);
		collection.add(84.0);
		collection.add(81.0);
		collection.add(165.0);
		collection.add(43.0);
		collection.add(155.0);
		collection.add(147.0);
		collection.add(174.0);
		collection.add(33.0);
		collection.add(106.0);
		collection.add(49.0);
		collection.add(149.0);
		collection.add(8.0);
		collection.add(20.0);
		collection.add(146.0);
		collection.add(94.0);
		collection.add(107.0);
		collection.add(175.0);
		collection.add(151.0);
		collection.add(97.0);
		collection.add(179.0);
		collection.add(33.0);
		collection.add(149.0);
		collection.add(162.0);
		collection.add(115.0);
		collection.add(35.0);
		collection.add(142.0);
		collection.add(48.0);
		collection.add(86.0);
		collection.add(157.0);
		collection.add(198.0);
		collection.add(107.0);
		collection.add(109.0);
		collection.add(14.0);
		collection.add(85.0);
		collection.add(60.0);
		collection.add(35.0);
		collection.add(129.0);
		collection.add(21.0);
		collection.add(139.0);
		collection.add(13.0);
		collection.add(139.0);
		collection.add(31.0);
		collection.add(127.0);
		collection.add(160.0);
		collection.add(158.0);
		collection.add(87.0);
		collection.add(39.0);
		collection.add(44.0);
		collection.add(52.0);
		collection.add(150.0);
		collection.add(195.0);
		collection.add(111.0);
		collection.add(56.0);
		collection.add(169.0);
		collection.add(10.0);
		collection.add(118.0);
		collection.add(109.0);
		collection.add(2.0);
		collection.add(73.0);
		collection.add(32.0);
		collection.add(10.0);
		collection.add(121.0);
		collection.add(81.0);
		collection.add(30.0);
		collection.add(23.0);
		collection.add(169.0);
		collection.add(169.0);
		collection.add(97.0);
		collection.add(98.0);
		collection.add(61.0);
		collection.add(8.0);
		collection.add(169.0);
		collection.add(65.0);
		collection.add(134.0);
		collection.add(176.0);
		collection.add(68.0);
		collection.add(23.0);
		collection.add(198.0);
		collection.add(39.0);
		collection.add(88.0);
		collection.add(166.0);
		collection.add(49.0);
		collection.add(81.0);
		collection.add(133.0);
		collection.add(51.0);
		collection.add(139.0);
		collection.add(132.0);
		collection.add(128.0);
		collection.add(69.0);
		collection.add(175.0);
		collection.add(13.0);
		collection.add(75.0);
		collection.add(46.0);
		collection.add(182.0);
		collection.add(85.0);
		collection.add(132.0);
		collection.add(79.0);
		collection.add(27.0);
		collection.add(189.0);
		collection.add(184.0);
		collection.add(116.0);
		collection.add(155.0);
		collection.add(146.0);
		collection.add(143.0);
		collection.add(62.0);
		collection.add(156.0);
		collection.add(31.0);
		collection.add(67.0);
		collection.add(34.0);
		collection.add(119.0);
		collection.add(174.0);
		collection.add(89.0);
		collection.add(17.0);
		collection.add(54.0);
		collection.add(8.0);
		collection.add(142.0);
		collection.add(92.0);
		collection.add(94.0);
		collection.add(95.0);
		collection.add(114.0);
		collection.add(154.0);
		collection.add(57.0);
		collection.add(185.0);
		collection.add(60.0);
		collection.add(34.0);
		collection.add(58.0);
		collection.add(67.0);
		collection.add(125.0);
		collection.add(22.0);
		collection.add(156.0);
		collection.add(138.0);
		collection.add(106.0);
		collection.add(149.0);
		collection.add(146.0);
		collection.add(64.0);
		collection.add(5.0);
		collection.add(126.0);
		collection.add(41.0);
		collection.add(164.0);
		collection.add(102.0);
		collection.add(186.0);
		collection.add(82.0);
		collection.add(22.0);
		collection.add(87.0);
		collection.add(162.0);
		collection.add(2.0);
		collection.add(5.0);
		collection.add(171.0);
		collection.add(98.0);
		collection.add(159.0);
		collection.add(13.0);
		collection.add(73.0);
		collection.add(84.0);
		collection.add(126.0);
		collection.add(156.0);
		collection.add(200.0);
		collection.add(173.0);
		collection.add(116.0);
		collection.add(190.0);
		collection.add(113.0);
		collection.add(15.0);
		collection.add(128.0);
		collection.add(107.0);
		collection.add(10.0);
		collection.add(14.0);
		collection.add(46.0);
		collection.add(92.0);
		collection.add(177.0);
		collection.add(132.0);
		collection.add(39.0);
		collection.add(193.0);
		collection.add(129.0);
		collection.add(16.0);
		collection.add(197.0);
		collection.add(4.0);
		collection.add(83.0);
		collection.add(22.0);
		collection.add(31.0);
		collection.add(45.0);
		collection.add(144.0);
		collection.add(182.0);
		collection.add(46.0);
		collection.add(138.0);
		collection.add(51.0);
		collection.add(196.0);
		collection.add(18.0);
		collection.add(153.0);
		collection.add(55.0);
		collection.add(161.0);
		collection.add(146.0);
		collection.add(165.0);
		collection.add(4.0);
		collection.add(128.0);
		collection.add(191.0);
		collection.add(46.0);
		collection.add(30.0);
		collection.add(19.0);
		collection.add(131.0);
		collection.add(54.0);
		collection.add(104.0);
		collection.add(78.0);
		collection.add(96.0);
		collection.add(17.0);
		collection.add(192.0);
		collection.add(102.0);
		collection.add(107.0);
		collection.add(46.0);
		collection.add(8.0);
		collection.add(141.0);
		collection.add(110.0);
		collection.add(180.0);
		collection.add(168.0);
		collection.add(18.0);
		collection.add(13.0);
		collection.add(119.0);
		collection.add(72.0);
		collection.add(146.0);
		collection.add(164.0);
		collection.add(89.0);
		collection.add(193.0);
		collection.add(18.0);
		collection.add(48.0);
		collection.add(185.0);
		collection.add(155.0);
		collection.add(97.0);
		collection.add(161.0);
		collection.add(82.0);
		collection.add(172.0);
		collection.add(139.0);
		collection.add(198.0);
		collection.add(63.0);
		collection.add(80.0);
		collection.add(175.0);
		collection.add(92.0);
		collection.add(125.0);
		collection.add(87.0);
		collection.add(25.0);
		collection.add(48.0);
		collection.add(165.0);
		collection.add(80.0);
		collection.add(161.0);
		collection.add(104.0);
		collection.add(177.0);
		collection.add(76.0);
		collection.add(21.0);
		collection.add(86.0);
		collection.add(16.0);
		collection.add(65.0);
		collection.add(123.0);
		collection.add(60.0);
		collection.add(128.0);
		collection.add(92.0);
		collection.add(11.0);
		collection.add(7.0);
		collection.add(71.0);
		collection.add(195.0);
		collection.add(177.0);
		collection.add(172.0);
		collection.add(46.0);
		collection.add(119.0);
		collection.add(7.0);
		collection.add(24.0);
		collection.add(11.0);
		collection.add(173.0);
		collection.add(128.0);
		collection.add(96.0);
		collection.add(172.0);
		collection.add(154.0);
		collection.add(135.0);
		collection.add(184.0);
		collection.add(126.0);
		collection.add(92.0);
		collection.add(94.0);
		collection.add(147.0);
		collection.add(36.0);
		collection.add(73.0);
		collection.add(154.0);
		collection.add(92.0);
		collection.add(112.0);
		collection.add(186.0);
		collection.add(34.0);
		collection.add(111.0);
		collection.add(109.0);
		collection.add(124.0);
		collection.add(197.0);
		collection.add(94.0);
		collection.add(79.0);
		collection.add(192.0);
		collection.add(58.0);
		collection.add(63.0);
		collection.add(148.0);
		collection.add(46.0);
		collection.add(160.0);
		collection.add(86.0);
		collection.add(140.0);
		collection.add(4.0);
		collection.add(114.0);
		collection.add(26.0);
		collection.add(17.0);
		collection.add(174.0);
		collection.add(59.0);
		collection.add(175.0);
		collection.add(95.0);
		collection.add(50.0);
		collection.add(28.0);
		collection.add(17.0);
		collection.add(109.0);
		collection.add(64.0);
		collection.add(108.0);
		collection.add(200.0);
		collection.add(117.0);
		collection.add(41.0);
		collection.add(97.0);
		collection.add(186.0);
		collection.add(192.0);
		collection.add(16.0);
		collection.add(58.0);
		collection.add(106.0);
		collection.add(39.0);
		collection.add(196.0);
		collection.add(54.0);
		collection.add(23.0);
		collection.add(57.0);
		collection.add(183.0);
		collection.add(16.0);
		collection.add(41.0);
		collection.add(74.0);
		collection.add(93.0);
		collection.add(41.0);
		collection.add(47.0);
		collection.add(124.0);
		collection.add(189.0);
		collection.add(138.0);
		collection.add(199.0);
		collection.add(150.0);
		collection.add(142.0);
		collection.add(104.0);
		collection.add(119.0);
		collection.add(32.0);
		collection.add(61.0);
		collection.add(43.0);
		collection.add(10.0);
		collection.add(65.0);
		collection.add(191.0);
		collection.add(132.0);
		collection.add(110.0);
		collection.add(53.0);
		collection.add(13.0);
		collection.add(68.0);
		collection.add(156.0);
		collection.add(83.0);
		collection.add(153.0);
		collection.add(70.0);
		collection.add(146.0);
		collection.add(57.0);
		collection.add(68.0);
		collection.add(150.0);
		collection.add(124.0);
		collection.add(21.0);
		collection.add(196.0);
		collection.add(167.0);
		collection.add(102.0);
		collection.add(9.0);
		collection.add(20.0);
		collection.add(2.0);
		collection.add(115.0);
		collection.add(53.0);
		collection.add(118.0);
		collection.add(5.0);
		collection.add(65.0);
		collection.add(31.0);
		collection.add(139.0);
		collection.add(194.0);
		collection.add(197.0);
		collection.add(155.0);
		collection.add(106.0);
		collection.add(134.0);
		collection.add(171.0);
		collection.add(142.0);
		collection.add(6.0);
		collection.add(23.0);
		collection.add(42.0);
		collection.add(148.0);
		collection.add(34.0);
		collection.add(191.0);
		collection.add(197.0);
		collection.add(41.0);
		collection.add(87.0);
		collection.add(80.0);
		collection.add(20.0);
		collection.add(119.0);
		collection.add(127.0);
		collection.add(169.0);
		collection.add(60.0);
		collection.add(136.0);
		collection.add(150.0);
		collection.add(72.0);
		collection.add(198.0);
		collection.add(156.0);
		collection.add(154.0);
		collection.add(28.0);
		collection.add(146.0);
		collection.add(47.0);
		collection.add(88.0);
		collection.add(148.0);
		collection.add(61.0);
		collection.add(199.0);
		collection.add(109.0);
		collection.add(91.0);
		collection.add(69.0);
		collection.add(69.0);
		collection.add(96.0);
		collection.add(10.0);
		collection.add(95.0);
		collection.add(159.0);
		collection.add(67.0);
		collection.add(46.0);
		collection.add(21.0);
		collection.add(147.0);
		collection.add(148.0);
		collection.add(132.0);
		collection.add(134.0);
		collection.add(168.0);
		collection.add(166.0);
		collection.add(178.0);
		collection.add(70.0);
		collection.add(37.0);
		collection.add(167.0);
		collection.add(98.0);
		collection.add(6.0);
		collection.add(4.0);
		collection.add(143.0);
		collection.add(179.0);
		collection.add(162.0);
		collection.add(114.0);
		collection.add(187.0);
		collection.add(4.0);
		collection.add(104.0);
		collection.add(83.0);
		collection.add(195.0);
		collection.add(40.0);
		collection.add(100.0);
		collection.add(55.0);
		collection.add(138.0);
		collection.add(107.0);
		collection.add(30.0);
		collection.add(73.0);
		collection.add(33.0);
		collection.add(53.0);
		collection.add(92.0);
		collection.add(70.0);
		collection.add(113.0);
		collection.add(69.0);
		collection.add(190.0);
		collection.add(27.0);
		collection.add(11.0);
		collection.add(77.0);
		collection.add(193.0);
		collection.add(49.0);
		collection.add(18.0);
		collection.add(37.0);
		collection.add(40.0);
		collection.add(189.0);
		collection.add(4.0);
		collection.add(17.0);
		collection.add(84.0);
		collection.add(18.0);
		collection.add(191.0);
		collection.add(137.0);
		collection.add(104.0);
		collection.add(40.0);
		collection.add(82.0);
		collection.add(144.0);
		collection.add(194.0);
		collection.add(14.0);
		collection.add(94.0);
		collection.add(124.0);
		collection.add(189.0);
		collection.add(128.0);
		collection.add(67.0);
		collection.add(73.0);
		collection.add(45.0);
		collection.add(199.0);
		collection.add(144.0);
		collection.add(63.0);
		collection.add(169.0);
		collection.add(66.0);
		collection.add(25.0);
		collection.add(33.0);
		collection.add(129.0);
		collection.add(197.0);
		collection.add(65.0);
		collection.add(55.0);
		collection.add(123.0);
		collection.add(92.0);
		collection.add(99.0);
		collection.add(117.0);
		collection.add(23.0);
		collection.add(35.0);
		collection.add(126.0);
		collection.add(37.0);
		collection.add(134.0);
		collection.add(8.0);
		collection.add(138.0);
		collection.add(95.0);
		collection.add(65.0);
		collection.add(79.0);
		collection.add(144.0);
		collection.add(109.0);
		collection.add(144.0);
		collection.add(180.0);
		collection.add(23.0);
		collection.add(88.0);
		collection.add(200.0);
		collection.add(4.0);
		collection.add(187.0);
		collection.add(27.0);
		collection.add(74.0);
		collection.add(52.0);
		collection.add(40.0);
		collection.add(74.0);
		collection.add(152.0);
		collection.add(23.0);
		collection.add(150.0);
		collection.add(146.0);
		collection.add(83.0);
		collection.add(89.0);
		collection.add(168.0);
		collection.add(51.0);
		collection.add(109.0);
		collection.add(25.0);
		collection.add(184.0);
		collection.add(31.0);
		collection.add(104.0);
		collection.add(139.0);
		collection.add(114.0);
		collection.add(20.0);
		collection.add(24.0);
		collection.add(43.0);
		collection.add(100.0);
		collection.add(91.0);
		collection.add(52.0);
		collection.add(198.0);
		collection.add(144.0);
		collection.add(44.0);
		collection.add(149.0);
		collection.add(114.0);
		collection.add(61.0);
		collection.add(134.0);
		collection.add(127.0);
		collection.add(92.0);
		collection.add(29.0);
		collection.add(128.0);
		collection.add(2.0);
		collection.add(119.0);
		collection.add(119.0);
		collection.add(129.0);
		collection.add(65.0);
		collection.add(149.0);
		collection.add(110.0);
		collection.add(139.0);
		collection.add(127.0);
		collection.add(55.0);
		collection.add(133.0);
		collection.add(78.0);
		collection.add(87.0);
		collection.add(111.0);
		collection.add(167.0);
		collection.add(162.0);
		collection.add(142.0);
		collection.add(93.0);
		collection.add(155.0);
		collection.add(60.0);
		collection.add(87.0);
		collection.add(7.0);
		collection.add(97.0);
		collection.add(132.0);
		collection.add(164.0);
		collection.add(103.0);
		collection.add(124.0);
		collection.add(155.0);
		collection.add(95.0);
		collection.add(169.0);
		collection.add(114.0);
		collection.add(158.0);
		collection.add(7.0);
		collection.add(4.0);
		collection.add(78.0);
		collection.add(131.0);
		collection.add(157.0);
		collection.add(86.0);
		collection.add(48.0);
		collection.add(65.0);
		collection.add(94.0);
		collection.add(169.0);
		collection.add(183.0);
		collection.add(49.0);
		collection.add(23.0);
		collection.add(44.0);
		collection.add(167.0);
		collection.add(150.0);
		collection.add(34.0);
		collection.add(143.0);
		collection.add(83.0);
		collection.add(97.0);
		collection.add(175.0);
		collection.add(190.0);
		collection.add(17.0);
		collection.add(119.0);
		collection.add(74.0);
		collection.add(75.0);
		collection.add(172.0);
		collection.add(54.0);
		collection.add(83.0);
		collection.add(90.0);
		collection.add(109.0);
		collection.add(175.0);
		collection.add(119.0);
		collection.add(92.0);
		collection.add(2.0);
		collection.add(122.0);
		collection.add(1.0);
		collection.add(103.0);
		collection.add(62.0);
		collection.add(62.0);
		collection.add(130.0);
		collection.add(137.0);
		collection.add(33.0);
		collection.add(198.0);
		collection.add(195.0);
		collection.add(198.0);
		collection.add(104.0);
		collection.add(182.0);
		collection.add(91.0);
		collection.add(142.0);
		collection.add(116.0);
		collection.add(130.0);
		collection.add(53.0);
		collection.add(19.0);
		collection.add(195.0);
		collection.add(78.0);
		collection.add(135.0);
		collection.add(18.0);
		collection.add(137.0);
		collection.add(96.0);
		collection.add(135.0);
		collection.add(148.0);
		collection.add(149.0);
		collection.add(9.0);
		collection.add(114.0);
		collection.add(73.0);
		collection.add(89.0);
		collection.add(142.0);
		collection.add(152.0);
		collection.add(104.0);
		collection.add(128.0);
		collection.add(164.0);
		collection.add(25.0);
		collection.add(148.0);
		collection.add(168.0);
		collection.add(138.0);
		collection.add(179.0);
		collection.add(183.0);
		collection.add(32.0);
		collection.add(75.0);
		collection.add(51.0);
		collection.add(128.0);
		collection.add(192.0);
		collection.add(36.0);
		collection.add(104.0);
		collection.add(82.0);
		collection.add(104.0);
		collection.add(198.0);
		collection.add(116.0);
		collection.add(37.0);
		collection.add(193.0);
		collection.add(177.0);
		collection.add(104.0);
		collection.add(68.0);
		collection.add(28.0);
		collection.add(43.0);
		collection.add(150.0);
		collection.add(176.0);
		collection.add(72.0);
		collection.add(133.0);
		collection.add(89.0);
		collection.add(171.0);
		collection.add(4.0);
		collection.add(143.0);
		collection.add(176.0);
		collection.add(159.0);
		collection.add(82.0);
		collection.add(34.0);
		collection.add(106.0);
		collection.add(124.0);
		collection.add(46.0);
		collection.add(22.0);
		collection.add(94.0);
		collection.add(187.0);
		collection.add(196.0);
		collection.add(84.0);
		collection.add(7.0);
		collection.add(60.0);
		collection.add(168.0);
		collection.add(75.0);
		collection.add(3.0);
		collection.add(48.0);
		collection.add(83.0);
		collection.add(128.0);
		collection.add(166.0);
		collection.add(14.0);
		collection.add(46.0);
		collection.add(91.0);
		collection.add(123.0);
		collection.add(200.0);
		collection.add(154.0);
		collection.add(99.0);
		collection.add(127.0);
		collection.add(194.0);
		collection.add(120.0);
		collection.add(57.0);
		collection.add(68.0);
		collection.add(157.0);
		collection.add(49.0);
		collection.add(124.0);
		collection.add(149.0);
		collection.add(161.0);
		collection.add(63.0);
		collection.add(9.0);
		collection.add(69.0);
		collection.add(34.0);
		collection.add(158.0);
		collection.add(56.0);
		collection.add(193.0);
		collection.add(7.0);
		collection.add(135.0);
		collection.add(18.0);
		collection.add(62.0);
		collection.add(142.0);
		collection.add(196.0);
		collection.add(54.0);
		collection.add(51.0);
		collection.add(148.0);
		collection.add(93.0);
		collection.add(40.0);
		collection.add(25.0);
		collection.add(93.0);
		collection.add(21.0);
		collection.add(143.0);
		collection.add(134.0);
		collection.add(195.0);
		collection.add(16.0);
		collection.add(26.0);
		collection.add(6.0);
		collection.add(50.0);
		collection.add(84.0);
		collection.add(145.0);
		collection.add(151.0);
		collection.add(109.0);
		collection.add(57.0);
		collection.add(18.0);
		collection.add(45.0);
		collection.add(48.0);
		collection.add(102.0);
		collection.add(21.0);
		collection.add(62.0);
		collection.add(178.0);
		collection.add(198.0);
		collection.add(182.0);
		collection.add(63.0);
		collection.add(91.0);
		collection.add(135.0);
		collection.add(112.0);
		collection.add(45.0);
		collection.add(145.0);
		collection.add(15.0);
		collection.add(156.0);
		collection.add(156.0);
		collection.add(139.0);
		collection.add(24.0);
		collection.add(90.0);
		collection.add(70.0);
		collection.add(191.0);
		collection.add(5.0);
		collection.add(85.0);
		collection.add(199.0);
		collection.add(66.0);
		collection.add(104.0);
		collection.add(32.0);
		collection.add(49.0);
		collection.add(65.0);
		collection.add(113.0);
		collection.add(156.0);
		collection.add(97.0);
		collection.add(15.0);
		collection.add(46.0);
		collection.add(171.0);
		collection.add(22.0);
		collection.add(125.0);
		collection.add(68.0);
		collection.add(3.0);
		collection.add(195.0);
		collection.add(154.0);
		collection.add(80.0);
		collection.add(73.0);
		collection.add(13.0);
		collection.add(167.0);
		collection.add(168.0);
		collection.add(144.0);
		collection.add(200.0);
		collection.add(24.0);
		collection.add(151.0);
		collection.add(84.0);
		collection.add(146.0);
		collection.add(97.0);
		collection.add(83.0);
		collection.add(65.0);
		collection.add(27.0);
		collection.add(78.0);
		collection.add(85.0);
		collection.add(137.0);
		collection.add(132.0);
		collection.add(77.0);
		collection.add(192.0);
		collection.add(163.0);
		collection.add(106.0);
		collection.add(183.0);
		collection.add(30.0);
		collection.add(98.0);
		collection.add(60.0);
		collection.add(70.0);
		collection.add(125.0);
		collection.add(5.0);
		collection.add(147.0);
		collection.add(106.0);
		collection.add(105.0);
		collection.add(102.0);
		collection.add(118.0);
		collection.add(123.0);
		collection.add(47.0);
		collection.add(161.0);
		collection.add(24.0);
		collection.add(29.0);
		collection.add(44.0);
		collection.add(113.0);
		collection.add(147.0);
		collection.add(43.0);
		collection.add(4.0);
		collection.add(177.0);
		collection.add(119.0);
		collection.add(67.0);
		collection.add(49.0);
		collection.add(33.0);
		collection.add(115.0);
		collection.add(92.0);
		collection.add(97.0);
		collection.add(17.0);
		collection.add(139.0);
		collection.add(11.0);
		collection.add(175.0);
		collection.add(3.0);
		collection.add(7.0);
		collection.add(109.0);
		collection.add(79.0);
		collection.add(110.0);
		collection.add(200.0);
		collection.add(159.0);
		collection.add(144.0);
		collection.add(127.0);
		collection.add(153.0);
		collection.add(23.0);
		collection.add(12.0);
		collection.add(41.0);
		collection.add(108.0);
		collection.add(97.0);
		collection.add(95.0);
		collection.add(18.0);
		collection.add(77.0);
		collection.add(85.0);
		collection.add(119.0);
		collection.add(173.0);
		collection.add(73.0);
		collection.add(129.0);
		collection.add(61.0);
		collection.add(187.0);
		collection.add(133.0);
		collection.add(49.0);
		collection.add(102.0);
		collection.add(55.0);
		collection.add(171.0);
		collection.add(83.0);
		collection.add(57.0);
		collection.add(168.0);
		collection.add(66.0);
		collection.add(124.0);
		collection.add(152.0);
		collection.add(30.0);
		collection.add(6.0);
		collection.add(185.0);
		collection.add(5.0);
		collection.add(69.0);
		collection.add(168.0);
		collection.add(10.0);
		collection.add(177.0);
		collection.add(141.0);
		collection.add(193.0);
		collection.add(66.0);
		collection.add(49.0);
		collection.add(76.0);
		collection.add(85.0);
		collection.add(144.0);
		collection.add(32.0);
		collection.add(23.0);
		collection.add(102.0);
		collection.add(103.0);
		collection.add(19.0);
		collection.add(187.0);
		collection.add(125.0);
		collection.add(128.0);
		collection.add(80.0);
		collection.add(173.0);
		collection.add(73.0);
		collection.add(134.0);
		collection.add(140.0);
		collection.add(200.0);
		collection.add(44.0);
		collection.add(125.0);
		collection.add(17.0);
		collection.add(118.0);
		collection.add(22.0);
		collection.add(21.0);
		collection.add(79.0);
		collection.add(94.0);
		collection.add(7.0);
		collection.add(155.0);
		collection.add(79.0);
		collection.add(68.0);
		collection.add(46.0);
		collection.add(153.0);
		collection.add(92.0);
		collection.add(124.0);
		collection.add(159.0);
		collection.add(59.0);
		collection.add(92.0);
		collection.add(48.0);
		collection.add(118.0);
		collection.add(29.0);
		collection.add(74.0);
		collection.add(25.0);
		collection.add(26.0);
		collection.add(24.0);
		collection.add(63.0);
		collection.add(168.0);
		collection.add(35.0);
		collection.add(65.0);
		collection.add(186.0);
		collection.add(32.0);
		collection.add(20.0);
		collection.add(162.0);
		collection.add(141.0);
		collection.add(183.0);
		collection.add(52.0);
		collection.add(142.0);
		collection.add(150.0);
		collection.add(151.0);
		collection.add(30.0);
		collection.add(94.0);
		collection.add(116.0);
		collection.add(71.0);
		collection.add(88.0);
		collection.add(110.0);
		collection.add(3.0);
		collection.add(1.0);
		collection.add(113.0);
		collection.add(76.0);
		collection.add(121.0);
		collection.add(4.0);
		collection.add(163.0);
		collection.add(152.0);
		collection.add(69.0);
		collection.add(64.0);
		collection.add(119.0);
		collection.add(185.0);
		collection.add(107.0);
		collection.add(150.0);
		collection.add(68.0);
		collection.add(136.0);
		collection.add(194.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=1,iterations=10)
	public void JLinkedSequence(Blackhole bh) {
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,62.0,120.0,48.0,93.0)));
		collection.addFirst(173.0);
		bh.consume(collection.contains(137.0));
		collection.add(101, 3.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(66.0,10.0,90.0,189.0,135.0,14.0,141.0,35.0,2.0)));
		bh.consume(collection.addAll(59, java.util.Arrays.asList(128.0,17.0,166.0)));
		bh.consume(collection.get(46));
		collection.add(119, 163.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(8.0,150.0,83.0,102.0,137.0,120.0,26.0,160.0,20.0)));
		collection.addFirst(63.0);
		bh.consume(collection.get(155));
		collection.remove(96.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,136.0,91.0)));
		collection.add(166, 197.0);
		collection.addFirst(189.0);
		bh.consume(collection.contains(22.0));
		collection.addLast(58.0);
		bh.consume(collection.remove(136));
		bh.consume(collection.lastIndexOf(128.0));
		bh.consume(collection.indexOf(158.0));
		collection.addFirst(99.0);
		bh.consume(collection.contains(37.0));
		bh.consume(collection.remove(44));
		bh.consume(collection.contains(30.0));
		bh.consume(collection.addAll(185, java.util.Arrays.asList(183.0,83.0,51.0)));
		bh.consume(collection.remove(30));
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,146.0,119.0,46.0,79.0,173.0)));
		bh.consume(collection.lastIndexOf(186.0));
		collection.addFirst(125.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(150.0,135.0,38.0,156.0,62.0,40.0,199.0,178.0,116.0)));
		bh.consume(collection.addAll(37, java.util.Arrays.asList(180.0,178.0,151.0,50.0,33.0,50.0,46.0,14.0,196.0)));
		bh.consume(collection.contains(127.0));
		collection.addFirst(48.0);
		bh.consume(collection.lastIndexOf(36.0));
		bh.consume(collection.set(157, 76.0));
		collection.addFirst(33.0);
		collection.addFirst(153.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(122.0,8.0,130.0,106.0,4.0,115.0)));
		bh.consume(collection.remove(10));
		bh.consume(collection.lastIndexOf(49.0));
		collection.addLast(68.0);
		collection.add(47, 163.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(168.0,136.0,109.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(7.0,164.0,166.0,59.0,26.0)));
		collection.add(28, 78.0);
		bh.consume(collection.lastIndexOf(22.0));
		bh.consume(collection.contains(71.0));
		collection.add(39, 4.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(102.0,79.0,86.0,198.0,41.0,188.0)));
		collection.addFirst(37.0);
		bh.consume(collection.lastIndexOf(152.0));
		bh.consume(collection.set(10, 32.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(148.0,36.0,141.0,67.0,71.0,13.0,11.0,58.0,84.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(128.0,189.0,188.0,12.0,148.0)));
		bh.consume(collection.addAll(49, java.util.Arrays.asList(175.0,82.0,51.0,130.0,97.0,13.0,36.0,2.0,129.0)));
		collection.addFirst(60.0);
		collection.addFirst(41.0);
		collection.add(156, 92.0);
		collection.add(114, 9.0);
		bh.consume(collection.get(146));
		bh.consume(collection.indexOf(113.0));
		bh.consume(collection.indexOf(128.0));
		bh.consume(collection.get(76));
		bh.consume(collection.indexOf(196.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,14.0,22.0,40.0,117.0,72.0,122.0,21.0)));
		bh.consume(collection.get(46));
		bh.consume(collection.indexOf(27.0));
		bh.consume(collection.remove(100));
		bh.consume(collection.indexOf(26.0));
		bh.consume(collection.get(174));
		collection.add(84, 147.0);
		bh.consume(collection.addAll(103, java.util.Arrays.asList(155.0,104.0,87.0,73.0,157.0)));
		collection.addFirst(194.0);
		bh.consume(collection.contains(66.0));
		collection.addFirst(112.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(148.0,68.0,110.0,60.0,199.0,41.0,82.0)));
		bh.consume(collection.lastIndexOf(45.0));
		bh.consume(collection.remove(155));
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,47.0,145.0)));
		collection.add(66, 122.0);
		bh.consume(collection.get(137));
		bh.consume(collection.set(90, 173.0));
		bh.consume(collection.lastIndexOf(149.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(89.0,106.0,45.0,156.0,167.0,69.0,146.0)));
		collection.addLast(127.0);
		bh.consume(collection.indexOf(118.0));
		collection.addLast(163.0);
		bh.consume(collection.get(83));
		collection.addFirst(155.0);
		collection.add(88, 51.0);
		bh.consume(collection.lastIndexOf(102.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(46.0,122.0,2.0,172.0,67.0,87.0,12.0)));
		collection.addLast(116.0);
		bh.consume(collection.addAll(147, java.util.Arrays.asList(33.0,162.0,46.0)));
		bh.consume(collection.set(116, 61.0));
		collection.add(13, 177.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(28.0,125.0,74.0,82.0,29.0,106.0,110.0,85.0)));
		bh.consume(collection.get(154));
		collection.addLast(126.0);
		bh.consume(collection.addAll(156, java.util.Arrays.asList(47.0,64.0,156.0,95.0,178.0,86.0,82.0,126.0)));
		bh.consume(collection.contains(63.0));
		bh.consume(collection.contains(91.0));
		bh.consume(collection.addAll(166, java.util.Arrays.asList(130.0,4.0,149.0,166.0,129.0)));
		bh.consume(collection.get(139));
		collection.remove(2.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(127.0,161.0,118.0,95.0,89.0,90.0,2.0,97.0)));
		bh.consume(collection.remove(4));
		collection.addLast(124.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,77.0,28.0)));
		bh.consume(collection.contains(168.0));
		bh.consume(collection.addAll(141, java.util.Arrays.asList(161.0,144.0,125.0,52.0,93.0,38.0)));
		collection.addLast(129.0);
		bh.consume(collection.set(134, 98.0));
		collection.addFirst(166.0);
		collection.add(10, 129.0);
		bh.consume(collection.addAll(123, java.util.Arrays.asList(60.0,169.0,49.0,169.0,106.0,111.0,3.0)));
		bh.consume(collection.remove(107));
		bh.consume(collection.get(22));
		collection.addFirst(159.0);
		bh.consume(collection.addAll(71, java.util.Arrays.asList(31.0,40.0,12.0,177.0,24.0)));
		bh.consume(collection.lastIndexOf(160.0));
		bh.consume(collection.contains(73.0));
		bh.consume(collection.get(87));
		bh.consume(collection.addAll(java.util.Arrays.asList(19.0,130.0,37.0,19.0,31.0,111.0)));
		bh.consume(collection.get(189));
		bh.consume(collection.set(165, 73.0));
		collection.add(86, 143.0);
		collection.add(98, 75.0);
		bh.consume(collection.contains(153.0));
		bh.consume(collection.indexOf(42.0));
		bh.consume(collection.remove(97));
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(37.0,16.0,79.0,137.0,153.0,81.0,19.0,200.0,114.0)));
		collection.addLast(81.0);
		collection.add(41, 48.0);
		bh.consume(collection.indexOf(37.0));
		bh.consume(collection.set(159, 163.0));
		bh.consume(collection.lastIndexOf(81.0));
		collection.addFirst(39.0);
		bh.consume(collection.set(181, 121.0));
		bh.consume(collection.get(174));
		bh.consume(collection.get(183));
		collection.add(42, 116.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(193.0,51.0,5.0,160.0,111.0,27.0,97.0,27.0)));
		collection.addFirst(33.0);
		bh.consume(collection.lastIndexOf(43.0));
		bh.consume(collection.contains(69.0));
		bh.consume(collection.contains(200.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(116.0,107.0,72.0,9.0)));
		collection.add(111, 19.0);
		bh.consume(collection.remove(49));
		bh.consume(collection.get(94));
		bh.consume(collection.get(54));
		bh.consume(collection.addAll(java.util.Arrays.asList(58.0,173.0,80.0,66.0,199.0,47.0,43.0,75.0)));
		collection.addLast(139.0);
		collection.addFirst(178.0);
		collection.add(129, 38.0);
		bh.consume(collection.remove(196));
		bh.consume(collection.addAll(java.util.Arrays.asList(22.0,61.0,150.0,110.0,28.0,1.0,110.0,178.0)));
		bh.consume(collection.indexOf(113.0));
		bh.consume(collection.get(110));
		bh.consume(collection.addAll(159, java.util.Arrays.asList(129.0,60.0,183.0,71.0,4.0,150.0,9.0,134.0,12.0)));
		collection.add(18, 194.0);
		collection.addLast(49.0);
		bh.consume(collection.get(182));
		bh.consume(collection.addAll(11, java.util.Arrays.asList(189.0,152.0,54.0)));
		bh.consume(collection.indexOf(77.0));
		bh.consume(collection.lastIndexOf(65.0));
		collection.addFirst(30.0);
		bh.consume(collection.set(16, 106.0));
		bh.consume(collection.addAll(14, java.util.Arrays.asList(73.0,137.0,48.0,4.0,82.0,155.0,151.0)));
		collection.addLast(109.0);
		collection.addFirst(140.0);
		bh.consume(collection.addAll(108, java.util.Arrays.asList(121.0,100.0,124.0,91.0)));
		collection.add(56, 135.0);
		bh.consume(collection.set(72, 48.0));
		bh.consume(collection.remove(189));
		bh.consume(collection.contains(106.0));
		collection.addFirst(40.0);
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.addAll(75, java.util.Arrays.asList(14.0,162.0,26.0,58.0,101.0,59.0,148.0,22.0)));
		bh.consume(collection.get(127));
		collection.add(29, 6.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(177.0,79.0,51.0,68.0,50.0)));
		collection.addFirst(55.0);
		bh.consume(collection.indexOf(16.0));
		bh.consume(collection.remove(128));
		bh.consume(collection.get(36));
		bh.consume(collection.lastIndexOf(10.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,145.0,37.0)));
		bh.consume(collection.addAll(9, java.util.Arrays.asList(103.0,139.0,169.0,15.0,166.0,79.0,199.0)));
		bh.consume(collection.contains(78.0));
		bh.consume(collection.remove(16));
		collection.addLast(187.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(82.0,91.0,51.0,155.0,33.0,32.0)));
		bh.consume(collection.indexOf(162.0));
		collection.addFirst(96.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(105.0,68.0,106.0)));
		bh.consume(collection.remove(104));
		collection.addFirst(200.0);
		bh.consume(collection.remove(42));
		collection.remove(90.0);
		bh.consume(collection.contains(38.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(190.0,94.0,83.0)));
		bh.consume(collection.get(5));
		collection.addLast(69.0);
		collection.addFirst(26.0);
		collection.addLast(138.0);
		bh.consume(collection.contains(55.0));
		bh.consume(collection.contains(132.0));
		bh.consume(collection.indexOf(104.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(130.0,98.0,141.0,134.0,185.0,56.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(192.0,137.0,191.0,91.0,134.0,190.0)));
		bh.consume(collection.contains(48.0));
		bh.consume(collection.set(76, 195.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(62.0,174.0,59.0,184.0,87.0,9.0,111.0,32.0,74.0)));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(22.0,54.0,83.0,79.0,68.0,115.0)));
		bh.consume(collection.get(133));
		bh.consume(collection.contains(2.0));
		bh.consume(collection.set(42, 12.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(177.0,144.0,153.0,1.0,184.0,191.0,84.0,134.0)));
		bh.consume(collection.get(175));
		bh.consume(collection.get(190));
		collection.remove(47.0);
		bh.consume(collection.contains(6.0));
		bh.consume(collection.get(68));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,107.0,182.0,83.0,135.0,11.0,55.0,124.0)));
		bh.consume(collection.indexOf(123.0));
		bh.consume(collection.addAll(141, java.util.Arrays.asList(165.0,180.0,149.0,19.0,173.0,30.0,52.0,50.0)));
		collection.addFirst(66.0);
		bh.consume(collection.get(134));
		collection.addFirst(170.0);
		collection.remove(58.0);
		bh.consume(collection.indexOf(94.0));
		bh.consume(collection.contains(4.0));
		bh.consume(collection.indexOf(167.0));
		collection.addFirst(116.0);
		collection.addFirst(75.0);
		bh.consume(collection.indexOf(144.0));
		bh.consume(collection.addAll(178, java.util.Arrays.asList(155.0,84.0,94.0,158.0,53.0,62.0)));
		bh.consume(collection.contains(111.0));
		bh.consume(collection.contains(98.0));
		bh.consume(collection.indexOf(57.0));
		bh.consume(collection.remove(137));
		bh.consume(collection.addAll(1, java.util.Arrays.asList(61.0,159.0,108.0,68.0)));
		collection.addFirst(8.0);
		bh.consume(collection.get(18));
		collection.add(196, 65.0);
		bh.consume(collection.remove(85));
		bh.consume(collection.addAll(java.util.Arrays.asList(8.0,104.0,142.0)));
		bh.consume(collection.lastIndexOf(155.0));
		bh.consume(collection.get(164));
		collection.addFirst(163.0);
		bh.consume(collection.remove(198));
		bh.consume(collection.set(195, 20.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(96.0,57.0,101.0,181.0,118.0,157.0,153.0,194.0,114.0)));
		collection.add(114, 132.0);
		bh.consume(collection.set(51, 152.0));
		bh.consume(collection.remove(114));
		collection.addFirst(151.0);
		collection.addFirst(142.0);
		collection.add(114, 76.0);
		collection.addLast(64.0);
		collection.addFirst(87.0);
		bh.consume(collection.contains(79.0));
		bh.consume(collection.contains(180.0));
		collection.add(141, 5.0);
		bh.consume(collection.indexOf(139.0));
		collection.addFirst(146.0);
		collection.addFirst(48.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,37.0,110.0,155.0,53.0,175.0,128.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(184.0,167.0,180.0,170.0,126.0)));
		bh.consume(collection.addAll(96, java.util.Arrays.asList(86.0,117.0,140.0,116.0)));
		bh.consume(collection.addAll(88, java.util.Arrays.asList(178.0,48.0,103.0,176.0,100.0,153.0,7.0,64.0)));
		bh.consume(collection.indexOf(76.0));
		collection.addLast(29.0);
		bh.consume(collection.contains(143.0));
		bh.consume(collection.get(47));
		collection.addLast(39.0);
		bh.consume(collection.contains(43.0));
		bh.consume(collection.addAll(173, java.util.Arrays.asList(60.0,134.0,107.0,27.0,144.0)));
		bh.consume(collection.get(61));
		bh.consume(collection.lastIndexOf(66.0));
		bh.consume(collection.addAll(141, java.util.Arrays.asList(56.0,65.0,153.0,55.0,102.0,82.0)));
		collection.remove(88.0);
		collection.addFirst(54.0);
		collection.addLast(184.0);
		bh.consume(collection.lastIndexOf(127.0));
		bh.consume(collection.remove(85));
		bh.consume(collection.contains(98.0));
		collection.add(127, 132.0);
		collection.addFirst(78.0);
		collection.addFirst(99.0);
		collection.addLast(154.0);
		bh.consume(collection.lastIndexOf(15.0));
		bh.consume(collection.remove(136));
		bh.consume(collection.contains(73.0));
		bh.consume(collection.addAll(14, java.util.Arrays.asList(107.0,169.0,47.0,22.0,65.0,80.0,146.0)));
		bh.consume(collection.get(176));
		bh.consume(collection.lastIndexOf(184.0));
		bh.consume(collection.indexOf(132.0));
		bh.consume(collection.get(30));
		bh.consume(collection.remove(102));
		bh.consume(collection.indexOf(21.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(176.0,72.0,83.0,158.0,14.0,52.0,36.0)));
		bh.consume(collection.lastIndexOf(89.0));
		collection.addLast(176.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(43.0,126.0,11.0)));
		collection.addFirst(163.0);
		bh.consume(collection.get(84));
		bh.consume(collection.remove(182));
		bh.consume(collection.get(109));
		bh.consume(collection.get(186));
		bh.consume(collection.set(115, 144.0));
		collection.add(9, 159.0);
		collection.addFirst(13.0);
		bh.consume(collection.get(125));
		collection.addLast(104.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(140.0,137.0,105.0,44.0,164.0)));
		collection.addFirst(15.0);
		bh.consume(collection.lastIndexOf(55.0));
		collection.addFirst(119.0);
		collection.addLast(85.0);
		collection.remove(61.0);
		bh.consume(collection.addAll(169, java.util.Arrays.asList(131.0,113.0,74.0,134.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(80.0,77.0,198.0)));
		bh.consume(collection.remove(98));
		bh.consume(collection.addAll(java.util.Arrays.asList(166.0,45.0,145.0,198.0,22.0,142.0,128.0,119.0)));
		collection.remove(162.0);
		collection.addFirst(96.0);
		bh.consume(collection.remove(54));
		bh.consume(collection.contains(195.0));
		collection.add(67, 101.0);
		bh.consume(collection.indexOf(51.0));
		collection.addLast(74.0);
		bh.consume(collection.lastIndexOf(75.0));
		bh.consume(collection.lastIndexOf(77.0));
		bh.consume(collection.get(93));
		collection.addFirst(155.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,29.0,179.0,7.0,195.0,165.0,162.0,165.0,111.0)));
		bh.consume(collection.indexOf(102.0));
		bh.consume(collection.lastIndexOf(15.0));
		bh.consume(collection.remove(192));
		bh.consume(collection.addAll(java.util.Arrays.asList(170.0,122.0,106.0,116.0)));
		collection.addFirst(56.0);
		bh.consume(collection.get(54));
		bh.consume(collection.remove(70));
		bh.consume(collection.set(145, 3.0));
		bh.consume(collection.contains(77.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(59.0,32.0,23.0,81.0,122.0)));
		collection.add(35, 134.0);
		collection.addLast(133.0);
		collection.addFirst(73.0);
		bh.consume(collection.remove(57));
		bh.consume(collection.remove(41));
		bh.consume(collection.get(21));
		collection.add(132, 4.0);
		collection.addFirst(149.0);
		bh.consume(collection.addAll(57, java.util.Arrays.asList(35.0,43.0,102.0,138.0,55.0,24.0,50.0,152.0,4.0)));
		bh.consume(collection.remove(198));
		bh.consume(collection.addAll(53, java.util.Arrays.asList(93.0,180.0,113.0,94.0,133.0)));
		collection.addLast(38.0);
		bh.consume(collection.addAll(136, java.util.Arrays.asList(32.0,150.0,150.0,13.0)));
		bh.consume(collection.get(41));
		bh.consume(collection.addAll(java.util.Arrays.asList(132.0,173.0,55.0,1.0)));
		bh.consume(collection.get(27));
		bh.consume(collection.get(30));
		collection.add(172, 88.0);
		collection.add(84, 149.0);
		bh.consume(collection.remove(160));
		bh.consume(collection.addAll(java.util.Arrays.asList(19.0,35.0,72.0,7.0,85.0,112.0,181.0,43.0)));
		bh.consume(collection.lastIndexOf(48.0));
		bh.consume(collection.addAll(42, java.util.Arrays.asList(58.0,124.0,116.0,13.0,69.0,51.0,72.0,95.0)));
		collection.addFirst(163.0);
		collection.add(189, 33.0);
		collection.add(15, 70.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(71.0,38.0,17.0,117.0,50.0)));
		bh.consume(collection.addAll(188, java.util.Arrays.asList(165.0,150.0,67.0,161.0,124.0,82.0,62.0)));
		collection.addLast(130.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(54.0,20.0,168.0,161.0,193.0,103.0,139.0,67.0,61.0)));
		bh.consume(collection.set(64, 189.0));
		collection.addFirst(53.0);
		bh.consume(collection.contains(93.0));
		bh.consume(collection.set(171, 125.0));
		bh.consume(collection.contains(42.0));
		bh.consume(collection.contains(87.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(152.0,64.0,159.0,62.0,57.0,7.0,146.0,138.0,91.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(73.0,187.0,138.0,105.0,162.0,148.0,125.0,88.0,191.0)));
		bh.consume(collection.contains(173.0));
		bh.consume(collection.get(141));
		bh.consume(collection.get(79));
		bh.consume(collection.lastIndexOf(166.0));
		collection.add(181, 165.0);
		bh.consume(collection.remove(68));
		bh.consume(collection.addAll(java.util.Arrays.asList(123.0,129.0,131.0,80.0,108.0,133.0)));
		bh.consume(collection.get(75));
		bh.consume(collection.get(160));
		bh.consume(collection.remove(164));
		collection.add(154, 133.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,127.0,55.0)));
		collection.addFirst(121.0);
		collection.addFirst(16.0);
		collection.addLast(4.0);
		collection.addFirst(118.0);
		collection.add(17, 62.0);
		bh.consume(collection.remove(164));
		bh.consume(collection.remove(132));
		bh.consume(collection.contains(180.0));
		collection.addLast(69.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(64.0,94.0,101.0,34.0,137.0,45.0,135.0,195.0,40.0)));
		bh.consume(collection.addAll(135, java.util.Arrays.asList(50.0,148.0,181.0,60.0,15.0,89.0,109.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(34.0,169.0,139.0,142.0,5.0,37.0,171.0,189.0)));
		bh.consume(collection.contains(25.0));
		bh.consume(collection.lastIndexOf(56.0));
		collection.add(158, 8.0);
		collection.addFirst(94.0);
		bh.consume(collection.get(39));
		collection.add(4, 123.0);
		collection.addFirst(11.0);
		collection.addFirst(101.0);
		collection.addFirst(154.0);
		collection.addFirst(23.0);
		bh.consume(collection.get(171));
		bh.consume(collection.get(20));
		collection.addFirst(76.0);
		bh.consume(collection.remove(88));
		bh.consume(collection.indexOf(125.0));
		bh.consume(collection.get(89));
		collection.add(80, 68.0);
		collection.addFirst(6.0);
		collection.addFirst(14.0);
		bh.consume(collection.get(93));
		bh.consume(collection.addAll(java.util.Arrays.asList(88.0,109.0,24.0,137.0,187.0,95.0)));
		bh.consume(collection.contains(92.0));
		bh.consume(collection.lastIndexOf(25.0));
		bh.consume(collection.contains(194.0));
		bh.consume(collection.remove(96));
		collection.add(192, 149.0);
		bh.consume(collection.lastIndexOf(102.0));
		collection.addFirst(195.0);
		bh.consume(collection.lastIndexOf(184.0));
		collection.addLast(28.0);
		collection.add(186, 134.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(180.0,187.0,64.0,134.0,49.0,43.0,34.0,110.0)));
		collection.addFirst(176.0);
		bh.consume(collection.remove(76));
		collection.addFirst(92.0);
		bh.consume(collection.get(63));
		bh.consume(collection.contains(115.0));
		collection.addLast(155.0);
		bh.consume(collection.lastIndexOf(17.0));
		bh.consume(collection.remove(75));
		bh.consume(collection.contains(45.0));
		collection.add(136, 71.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(142.0,7.0,101.0,43.0,72.0,179.0,163.0,14.0,151.0)));
		collection.add(104, 192.0);
		bh.consume(collection.get(110));
		collection.add(131, 186.0);
		bh.consume(collection.indexOf(156.0));
		bh.consume(collection.get(172));
		collection.addFirst(106.0);
		collection.addFirst(133.0);
		collection.add(91, 163.0);
		collection.addFirst(196.0);
		bh.consume(collection.get(107));
		bh.consume(collection.get(53));
		bh.consume(collection.indexOf(17.0));
		collection.addFirst(103.0);
		collection.addFirst(192.0);
		bh.consume(collection.contains(49.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(54.0,40.0,70.0,87.0)));
		bh.consume(collection.lastIndexOf(149.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(111.0,168.0,34.0,176.0)));
		bh.consume(collection.get(161));
		bh.consume(collection.addAll(87, java.util.Arrays.asList(48.0,111.0,169.0,15.0)));
		collection.addFirst(22.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(170.0,158.0,147.0,137.0,90.0,44.0)));
		collection.add(22, 155.0);
		bh.consume(collection.indexOf(115.0));
		bh.consume(collection.addAll(109, java.util.Arrays.asList(154.0,162.0,32.0,93.0,97.0,142.0,133.0)));
		collection.add(69, 197.0);
		bh.consume(collection.contains(44.0));
		bh.consume(collection.contains(45.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(36.0,165.0,113.0,55.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(97.0,60.0,188.0,90.0,139.0,136.0)));
		bh.consume(collection.contains(62.0));
		bh.consume(collection.contains(181.0));
		bh.consume(collection.indexOf(7.0));
		collection.add(30, 19.0);
		bh.consume(collection.indexOf(131.0));
		collection.addFirst(163.0);
		bh.consume(collection.get(158));
		collection.addFirst(136.0);
		collection.addFirst(172.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(159.0,196.0,46.0,151.0,174.0)));
		collection.addFirst(168.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(198.0,196.0,8.0,149.0,14.0,50.0,144.0)));
		collection.addFirst(80.0);
		collection.addLast(162.0);
		bh.consume(collection.contains(36.0));
	}
}
