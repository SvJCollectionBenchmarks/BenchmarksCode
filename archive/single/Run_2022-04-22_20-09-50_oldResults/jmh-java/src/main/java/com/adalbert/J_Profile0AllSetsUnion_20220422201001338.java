package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile0AllSetsUnion_20220422201001338 {
	java.util.HashSet<Double> collection = new java.util.HashSet<>();
	@Setup(Level.Invocation)
	public void setupJHashSet() {
		collection = new java.util.HashSet<>();
		collection.add(79.0);
		collection.add(122.0);
		collection.add(132.0);
		collection.add(81.0);
		collection.add(38.0);
		collection.add(106.0);
		collection.add(197.0);
		collection.add(34.0);
		collection.add(196.0);
		collection.add(191.0);
		collection.add(87.0);
		collection.add(43.0);
		collection.add(75.0);
		collection.add(2.0);
		collection.add(183.0);
		collection.add(160.0);
		collection.add(127.0);
		collection.add(57.0);
		collection.add(88.0);
		collection.add(68.0);
		collection.add(50.0);
		collection.add(109.0);
		collection.add(48.0);
		collection.add(2.0);
		collection.add(36.0);
		collection.add(105.0);
		collection.add(101.0);
		collection.add(101.0);
		collection.add(61.0);
		collection.add(39.0);
		collection.add(37.0);
		collection.add(180.0);
		collection.add(36.0);
		collection.add(115.0);
		collection.add(16.0);
		collection.add(9.0);
		collection.add(51.0);
		collection.add(199.0);
		collection.add(105.0);
		collection.add(48.0);
		collection.add(149.0);
		collection.add(146.0);
		collection.add(133.0);
		collection.add(22.0);
		collection.add(123.0);
		collection.add(53.0);
		collection.add(72.0);
		collection.add(172.0);
		collection.add(161.0);
		collection.add(90.0);
		collection.add(61.0);
		collection.add(77.0);
		collection.add(154.0);
		collection.add(56.0);
		collection.add(160.0);
		collection.add(71.0);
		collection.add(30.0);
		collection.add(166.0);
		collection.add(147.0);
		collection.add(56.0);
		collection.add(112.0);
		collection.add(54.0);
		collection.add(83.0);
		collection.add(74.0);
		collection.add(140.0);
		collection.add(98.0);
		collection.add(198.0);
		collection.add(135.0);
		collection.add(126.0);
		collection.add(122.0);
		collection.add(94.0);
		collection.add(130.0);
		collection.add(14.0);
		collection.add(181.0);
		collection.add(156.0);
		collection.add(155.0);
		collection.add(150.0);
		collection.add(135.0);
		collection.add(143.0);
		collection.add(105.0);
		collection.add(176.0);
		collection.add(96.0);
		collection.add(102.0);
		collection.add(14.0);
		collection.add(112.0);
		collection.add(137.0);
		collection.add(180.0);
		collection.add(102.0);
		collection.add(170.0);
		collection.add(55.0);
		collection.add(93.0);
		collection.add(134.0);
		collection.add(41.0);
		collection.add(5.0);
		collection.add(191.0);
		collection.add(159.0);
		collection.add(57.0);
		collection.add(36.0);
		collection.add(189.0);
		collection.add(100.0);
		collection.add(48.0);
		collection.add(174.0);
		collection.add(25.0);
		collection.add(158.0);
		collection.add(123.0);
		collection.add(57.0);
		collection.add(181.0);
		collection.add(125.0);
		collection.add(16.0);
		collection.add(136.0);
		collection.add(75.0);
		collection.add(15.0);
		collection.add(79.0);
		collection.add(97.0);
		collection.add(191.0);
		collection.add(29.0);
		collection.add(32.0);
		collection.add(132.0);
		collection.add(89.0);
		collection.add(94.0);
		collection.add(179.0);
		collection.add(18.0);
		collection.add(86.0);
		collection.add(30.0);
		collection.add(32.0);
		collection.add(136.0);
		collection.add(117.0);
		collection.add(140.0);
		collection.add(83.0);
		collection.add(84.0);
		collection.add(157.0);
		collection.add(17.0);
		collection.add(128.0);
		collection.add(143.0);
		collection.add(167.0);
		collection.add(25.0);
		collection.add(12.0);
		collection.add(52.0);
		collection.add(165.0);
		collection.add(60.0);
		collection.add(169.0);
		collection.add(13.0);
		collection.add(183.0);
		collection.add(25.0);
		collection.add(162.0);
		collection.add(182.0);
		collection.add(15.0);
		collection.add(89.0);
		collection.add(89.0);
		collection.add(14.0);
		collection.add(166.0);
		collection.add(118.0);
		collection.add(133.0);
		collection.add(87.0);
		collection.add(21.0);
		collection.add(17.0);
		collection.add(148.0);
		collection.add(137.0);
		collection.add(184.0);
		collection.add(155.0);
		collection.add(135.0);
		collection.add(39.0);
		collection.add(44.0);
		collection.add(128.0);
		collection.add(7.0);
		collection.add(158.0);
		collection.add(165.0);
		collection.add(48.0);
		collection.add(82.0);
		collection.add(187.0);
		collection.add(183.0);
		collection.add(135.0);
		collection.add(104.0);
		collection.add(159.0);
		collection.add(55.0);
		collection.add(47.0);
		collection.add(49.0);
		collection.add(77.0);
		collection.add(131.0);
		collection.add(101.0);
		collection.add(136.0);
		collection.add(80.0);
		collection.add(43.0);
		collection.add(137.0);
		collection.add(181.0);
		collection.add(34.0);
		collection.add(168.0);
		collection.add(49.0);
		collection.add(168.0);
		collection.add(28.0);
		collection.add(86.0);
		collection.add(88.0);
		collection.add(118.0);
		collection.add(47.0);
		collection.add(146.0);
		collection.add(68.0);
		collection.add(130.0);
		collection.add(146.0);
		collection.add(33.0);
		collection.add(58.0);
		collection.add(43.0);
		collection.add(88.0);
		collection.add(155.0);
		collection.add(61.0);
		collection.add(44.0);
		collection.add(46.0);
		collection.add(169.0);
		collection.add(55.0);
		collection.add(5.0);
		collection.add(33.0);
		collection.add(26.0);
		collection.add(129.0);
		collection.add(185.0);
		collection.add(90.0);
		collection.add(35.0);
		collection.add(166.0);
		collection.add(102.0);
		collection.add(73.0);
		collection.add(132.0);
		collection.add(25.0);
		collection.add(9.0);
		collection.add(19.0);
		collection.add(29.0);
		collection.add(137.0);
		collection.add(59.0);
		collection.add(23.0);
		collection.add(153.0);
		collection.add(96.0);
		collection.add(128.0);
		collection.add(85.0);
		collection.add(91.0);
		collection.add(97.0);
		collection.add(130.0);
		collection.add(25.0);
		collection.add(197.0);
		collection.add(69.0);
		collection.add(24.0);
		collection.add(33.0);
		collection.add(89.0);
		collection.add(18.0);
		collection.add(7.0);
		collection.add(9.0);
		collection.add(184.0);
		collection.add(117.0);
		collection.add(162.0);
		collection.add(200.0);
		collection.add(65.0);
		collection.add(92.0);
		collection.add(150.0);
		collection.add(138.0);
		collection.add(158.0);
		collection.add(147.0);
		collection.add(122.0);
		collection.add(51.0);
		collection.add(37.0);
		collection.add(149.0);
		collection.add(50.0);
		collection.add(77.0);
		collection.add(170.0);
		collection.add(70.0);
		collection.add(85.0);
		collection.add(1.0);
		collection.add(24.0);
		collection.add(10.0);
		collection.add(23.0);
		collection.add(80.0);
		collection.add(194.0);
		collection.add(28.0);
		collection.add(67.0);
		collection.add(153.0);
		collection.add(11.0);
		collection.add(83.0);
		collection.add(185.0);
		collection.add(148.0);
		collection.add(81.0);
		collection.add(33.0);
		collection.add(118.0);
		collection.add(183.0);
		collection.add(76.0);
		collection.add(17.0);
		collection.add(186.0);
		collection.add(185.0);
		collection.add(70.0);
		collection.add(7.0);
		collection.add(52.0);
		collection.add(105.0);
		collection.add(122.0);
		collection.add(67.0);
		collection.add(137.0);
		collection.add(67.0);
		collection.add(140.0);
		collection.add(8.0);
		collection.add(52.0);
		collection.add(37.0);
		collection.add(73.0);
		collection.add(62.0);
		collection.add(198.0);
		collection.add(63.0);
		collection.add(26.0);
		collection.add(163.0);
		collection.add(112.0);
		collection.add(157.0);
		collection.add(61.0);
		collection.add(172.0);
		collection.add(131.0);
		collection.add(86.0);
		collection.add(167.0);
		collection.add(39.0);
		collection.add(189.0);
		collection.add(81.0);
		collection.add(161.0);
		collection.add(149.0);
		collection.add(147.0);
		collection.add(169.0);
		collection.add(2.0);
		collection.add(116.0);
		collection.add(176.0);
		collection.add(113.0);
		collection.add(141.0);
		collection.add(105.0);
		collection.add(10.0);
		collection.add(159.0);
		collection.add(1.0);
		collection.add(58.0);
		collection.add(119.0);
		collection.add(19.0);
		collection.add(73.0);
		collection.add(152.0);
		collection.add(196.0);
		collection.add(19.0);
		collection.add(33.0);
		collection.add(133.0);
		collection.add(134.0);
		collection.add(180.0);
		collection.add(16.0);
		collection.add(95.0);
		collection.add(24.0);
		collection.add(53.0);
		collection.add(45.0);
		collection.add(165.0);
		collection.add(55.0);
		collection.add(77.0);
		collection.add(122.0);
		collection.add(39.0);
		collection.add(33.0);
		collection.add(193.0);
		collection.add(101.0);
		collection.add(121.0);
		collection.add(149.0);
		collection.add(14.0);
		collection.add(165.0);
		collection.add(165.0);
		collection.add(81.0);
		collection.add(131.0);
		collection.add(72.0);
		collection.add(131.0);
		collection.add(179.0);
		collection.add(60.0);
		collection.add(123.0);
		collection.add(126.0);
		collection.add(45.0);
		collection.add(162.0);
		collection.add(180.0);
		collection.add(25.0);
		collection.add(114.0);
		collection.add(102.0);
		collection.add(114.0);
		collection.add(82.0);
		collection.add(193.0);
		collection.add(4.0);
		collection.add(34.0);
		collection.add(64.0);
		collection.add(199.0);
		collection.add(142.0);
		collection.add(25.0);
		collection.add(29.0);
		collection.add(23.0);
		collection.add(76.0);
		collection.add(159.0);
		collection.add(102.0);
		collection.add(64.0);
		collection.add(18.0);
		collection.add(82.0);
		collection.add(165.0);
		collection.add(169.0);
		collection.add(65.0);
		collection.add(45.0);
		collection.add(120.0);
		collection.add(7.0);
		collection.add(188.0);
		collection.add(78.0);
		collection.add(95.0);
		collection.add(179.0);
		collection.add(121.0);
		collection.add(62.0);
		collection.add(140.0);
		collection.add(132.0);
		collection.add(110.0);
		collection.add(131.0);
		collection.add(105.0);
		collection.add(50.0);
		collection.add(53.0);
		collection.add(4.0);
		collection.add(162.0);
		collection.add(108.0);
		collection.add(111.0);
		collection.add(192.0);
		collection.add(90.0);
		collection.add(4.0);
		collection.add(161.0);
		collection.add(119.0);
		collection.add(60.0);
		collection.add(10.0);
		collection.add(103.0);
		collection.add(72.0);
		collection.add(169.0);
		collection.add(8.0);
		collection.add(84.0);
		collection.add(17.0);
		collection.add(16.0);
		collection.add(97.0);
		collection.add(167.0);
		collection.add(21.0);
		collection.add(131.0);
		collection.add(142.0);
		collection.add(151.0);
		collection.add(91.0);
		collection.add(125.0);
		collection.add(190.0);
		collection.add(179.0);
		collection.add(77.0);
		collection.add(88.0);
		collection.add(126.0);
		collection.add(155.0);
		collection.add(132.0);
		collection.add(137.0);
		collection.add(142.0);
		collection.add(65.0);
		collection.add(9.0);
		collection.add(100.0);
		collection.add(58.0);
		collection.add(28.0);
		collection.add(13.0);
		collection.add(101.0);
		collection.add(43.0);
		collection.add(114.0);
		collection.add(44.0);
		collection.add(148.0);
		collection.add(70.0);
		collection.add(61.0);
		collection.add(22.0);
		collection.add(96.0);
		collection.add(32.0);
		collection.add(190.0);
		collection.add(57.0);
		collection.add(115.0);
		collection.add(9.0);
		collection.add(148.0);
		collection.add(191.0);
		collection.add(121.0);
		collection.add(194.0);
		collection.add(107.0);
		collection.add(33.0);
		collection.add(159.0);
		collection.add(22.0);
		collection.add(168.0);
		collection.add(64.0);
		collection.add(8.0);
		collection.add(200.0);
		collection.add(112.0);
		collection.add(95.0);
		collection.add(70.0);
		collection.add(156.0);
		collection.add(49.0);
		collection.add(64.0);
		collection.add(37.0);
		collection.add(134.0);
		collection.add(179.0);
		collection.add(109.0);
		collection.add(167.0);
		collection.add(117.0);
		collection.add(184.0);
		collection.add(33.0);
		collection.add(114.0);
		collection.add(177.0);
		collection.add(80.0);
		collection.add(184.0);
		collection.add(46.0);
		collection.add(69.0);
		collection.add(115.0);
		collection.add(11.0);
		collection.add(176.0);
		collection.add(81.0);
		collection.add(153.0);
		collection.add(112.0);
		collection.add(131.0);
		collection.add(184.0);
		collection.add(147.0);
		collection.add(73.0);
		collection.add(118.0);
		collection.add(49.0);
		collection.add(181.0);
		collection.add(93.0);
		collection.add(35.0);
		collection.add(101.0);
		collection.add(6.0);
		collection.add(93.0);
		collection.add(185.0);
		collection.add(61.0);
		collection.add(133.0);
		collection.add(20.0);
		collection.add(172.0);
		collection.add(6.0);
		collection.add(14.0);
		collection.add(81.0);
		collection.add(146.0);
		collection.add(24.0);
		collection.add(101.0);
		collection.add(89.0);
		collection.add(185.0);
		collection.add(200.0);
		collection.add(26.0);
		collection.add(191.0);
		collection.add(151.0);
		collection.add(46.0);
		collection.add(103.0);
		collection.add(87.0);
		collection.add(72.0);
		collection.add(18.0);
		collection.add(140.0);
		collection.add(193.0);
		collection.add(59.0);
		collection.add(69.0);
		collection.add(12.0);
		collection.add(179.0);
		collection.add(137.0);
		collection.add(136.0);
		collection.add(49.0);
		collection.add(196.0);
		collection.add(26.0);
		collection.add(81.0);
		collection.add(118.0);
		collection.add(9.0);
		collection.add(97.0);
		collection.add(159.0);
		collection.add(123.0);
		collection.add(86.0);
		collection.add(171.0);
		collection.add(62.0);
		collection.add(22.0);
		collection.add(172.0);
		collection.add(103.0);
		collection.add(42.0);
		collection.add(70.0);
		collection.add(163.0);
		collection.add(61.0);
		collection.add(49.0);
		collection.add(3.0);
		collection.add(23.0);
		collection.add(15.0);
		collection.add(57.0);
		collection.add(190.0);
		collection.add(88.0);
		collection.add(54.0);
		collection.add(65.0);
		collection.add(19.0);
		collection.add(194.0);
		collection.add(86.0);
		collection.add(147.0);
		collection.add(61.0);
		collection.add(141.0);
		collection.add(125.0);
		collection.add(83.0);
		collection.add(195.0);
		collection.add(194.0);
		collection.add(154.0);
		collection.add(96.0);
		collection.add(60.0);
		collection.add(130.0);
		collection.add(166.0);
		collection.add(130.0);
		collection.add(193.0);
		collection.add(153.0);
		collection.add(101.0);
		collection.add(89.0);
		collection.add(153.0);
		collection.add(120.0);
		collection.add(9.0);
		collection.add(125.0);
		collection.add(108.0);
		collection.add(116.0);
		collection.add(136.0);
		collection.add(2.0);
		collection.add(141.0);
		collection.add(115.0);
		collection.add(117.0);
		collection.add(13.0);
		collection.add(146.0);
		collection.add(85.0);
		collection.add(120.0);
		collection.add(145.0);
		collection.add(74.0);
		collection.add(80.0);
		collection.add(199.0);
		collection.add(21.0);
		collection.add(17.0);
		collection.add(169.0);
		collection.add(166.0);
		collection.add(101.0);
		collection.add(145.0);
		collection.add(113.0);
		collection.add(43.0);
		collection.add(109.0);
		collection.add(35.0);
		collection.add(147.0);
		collection.add(193.0);
		collection.add(114.0);
		collection.add(119.0);
		collection.add(169.0);
		collection.add(144.0);
		collection.add(87.0);
		collection.add(138.0);
		collection.add(60.0);
		collection.add(55.0);
		collection.add(162.0);
		collection.add(124.0);
		collection.add(107.0);
		collection.add(4.0);
		collection.add(66.0);
		collection.add(45.0);
		collection.add(82.0);
		collection.add(63.0);
		collection.add(7.0);
		collection.add(77.0);
		collection.add(169.0);
		collection.add(89.0);
		collection.add(119.0);
		collection.add(165.0);
		collection.add(109.0);
		collection.add(40.0);
		collection.add(99.0);
		collection.add(70.0);
		collection.add(181.0);
		collection.add(31.0);
		collection.add(145.0);
		collection.add(92.0);
		collection.add(163.0);
		collection.add(4.0);
		collection.add(173.0);
		collection.add(160.0);
		collection.add(1.0);
		collection.add(84.0);
		collection.add(97.0);
		collection.add(193.0);
		collection.add(186.0);
		collection.add(81.0);
		collection.add(76.0);
		collection.add(102.0);
		collection.add(191.0);
		collection.add(177.0);
		collection.add(57.0);
		collection.add(130.0);
		collection.add(179.0);
		collection.add(167.0);
		collection.add(143.0);
		collection.add(46.0);
		collection.add(145.0);
		collection.add(174.0);
		collection.add(84.0);
		collection.add(90.0);
		collection.add(175.0);
		collection.add(3.0);
		collection.add(97.0);
		collection.add(44.0);
		collection.add(175.0);
		collection.add(115.0);
		collection.add(115.0);
		collection.add(5.0);
		collection.add(100.0);
		collection.add(196.0);
		collection.add(27.0);
		collection.add(174.0);
		collection.add(41.0);
		collection.add(76.0);
		collection.add(11.0);
		collection.add(166.0);
		collection.add(184.0);
		collection.add(176.0);
		collection.add(133.0);
		collection.add(63.0);
		collection.add(32.0);
		collection.add(65.0);
		collection.add(91.0);
		collection.add(175.0);
		collection.add(195.0);
		collection.add(191.0);
		collection.add(33.0);
		collection.add(7.0);
		collection.add(56.0);
		collection.add(147.0);
		collection.add(123.0);
		collection.add(119.0);
		collection.add(90.0);
		collection.add(113.0);
		collection.add(197.0);
		collection.add(149.0);
		collection.add(58.0);
		collection.add(105.0);
		collection.add(56.0);
		collection.add(92.0);
		collection.add(143.0);
		collection.add(169.0);
		collection.add(44.0);
		collection.add(81.0);
		collection.add(179.0);
		collection.add(179.0);
		collection.add(149.0);
		collection.add(150.0);
		collection.add(183.0);
		collection.add(151.0);
		collection.add(127.0);
		collection.add(45.0);
		collection.add(71.0);
		collection.add(108.0);
		collection.add(68.0);
		collection.add(79.0);
		collection.add(163.0);
		collection.add(123.0);
		collection.add(195.0);
		collection.add(114.0);
		collection.add(60.0);
		collection.add(89.0);
		collection.add(115.0);
		collection.add(180.0);
		collection.add(12.0);
		collection.add(24.0);
		collection.add(140.0);
		collection.add(119.0);
		collection.add(86.0);
		collection.add(127.0);
		collection.add(169.0);
		collection.add(130.0);
		collection.add(34.0);
		collection.add(17.0);
		collection.add(100.0);
		collection.add(183.0);
		collection.add(154.0);
		collection.add(192.0);
		collection.add(38.0);
		collection.add(155.0);
		collection.add(12.0);
		collection.add(166.0);
		collection.add(171.0);
		collection.add(106.0);
		collection.add(4.0);
		collection.add(161.0);
		collection.add(111.0);
		collection.add(8.0);
		collection.add(104.0);
		collection.add(9.0);
		collection.add(199.0);
		collection.add(11.0);
		collection.add(167.0);
		collection.add(176.0);
		collection.add(55.0);
		collection.add(188.0);
		collection.add(15.0);
		collection.add(53.0);
		collection.add(80.0);
		collection.add(94.0);
		collection.add(86.0);
		collection.add(81.0);
		collection.add(118.0);
		collection.add(88.0);
		collection.add(107.0);
		collection.add(71.0);
		collection.add(42.0);
		collection.add(81.0);
		collection.add(43.0);
		collection.add(38.0);
		collection.add(125.0);
		collection.add(30.0);
		collection.add(110.0);
		collection.add(192.0);
		collection.add(133.0);
		collection.add(87.0);
		collection.add(108.0);
		collection.add(199.0);
		collection.add(36.0);
		collection.add(118.0);
		collection.add(146.0);
		collection.add(114.0);
		collection.add(109.0);
		collection.add(68.0);
		collection.add(173.0);
		collection.add(2.0);
		collection.add(27.0);
		collection.add(82.0);
		collection.add(174.0);
		collection.add(150.0);
		collection.add(9.0);
		collection.add(22.0);
		collection.add(40.0);
		collection.add(31.0);
		collection.add(165.0);
		collection.add(92.0);
		collection.add(44.0);
		collection.add(55.0);
		collection.add(79.0);
		collection.add(108.0);
		collection.add(99.0);
		collection.add(63.0);
		collection.add(147.0);
		collection.add(93.0);
		collection.add(112.0);
		collection.add(156.0);
		collection.add(77.0);
		collection.add(79.0);
		collection.add(124.0);
		collection.add(18.0);
		collection.add(151.0);
		collection.add(95.0);
		collection.add(28.0);
		collection.add(7.0);
		collection.add(64.0);
		collection.add(123.0);
		collection.add(44.0);
		collection.add(117.0);
		collection.add(55.0);
		collection.add(106.0);
		collection.add(157.0);
		collection.add(39.0);
		collection.add(104.0);
		collection.add(148.0);
		collection.add(100.0);
		collection.add(160.0);
		collection.add(164.0);
		collection.add(137.0);
		collection.add(162.0);
		collection.add(71.0);
		collection.add(171.0);
		collection.add(125.0);
		collection.add(21.0);
		collection.add(188.0);
		collection.add(117.0);
		collection.add(93.0);
		collection.add(88.0);
		collection.add(64.0);
		collection.add(22.0);
		collection.add(125.0);
		collection.add(92.0);
		collection.add(68.0);
		collection.add(154.0);
		collection.add(95.0);
		collection.add(58.0);
		collection.add(128.0);
		collection.add(17.0);
		collection.add(32.0);
		collection.add(162.0);
		collection.add(171.0);
		collection.add(18.0);
		collection.add(79.0);
		collection.add(156.0);
		collection.add(189.0);
		collection.add(12.0);
		collection.add(42.0);
		collection.add(97.0);
		collection.add(122.0);
		collection.add(107.0);
		collection.add(30.0);
		collection.add(123.0);
		collection.add(105.0);
		collection.add(5.0);
		collection.add(78.0);
		collection.add(161.0);
		collection.add(156.0);
		collection.add(46.0);
		collection.add(60.0);
		collection.add(18.0);
		collection.add(90.0);
		collection.add(120.0);
		collection.add(6.0);
		collection.add(58.0);
		collection.add(126.0);
		collection.add(139.0);
		collection.add(131.0);
		collection.add(44.0);
		collection.add(36.0);
		collection.add(46.0);
		collection.add(168.0);
		collection.add(103.0);
		collection.add(71.0);
		collection.add(41.0);
		collection.add(1.0);
		collection.add(200.0);
		collection.add(167.0);
		collection.add(165.0);
		collection.add(12.0);
		collection.add(31.0);
		collection.add(121.0);
		collection.add(40.0);
		collection.add(173.0);
		collection.add(12.0);
		collection.add(30.0);
		collection.add(120.0);
		collection.add(196.0);
		collection.add(75.0);
		collection.add(157.0);
		collection.add(108.0);
		collection.add(37.0);
		collection.add(131.0);
		collection.add(73.0);
		collection.add(60.0);
		collection.add(44.0);
		collection.add(51.0);
		collection.add(12.0);
		collection.add(33.0);
		collection.add(7.0);
		collection.add(58.0);
		collection.add(155.0);
		collection.add(168.0);
		collection.add(130.0);
		collection.add(68.0);
		collection.add(131.0);
		collection.add(191.0);
		collection.add(105.0);
		collection.add(8.0);
		collection.add(170.0);
		collection.add(23.0);
		collection.add(105.0);
		collection.add(156.0);
		collection.add(194.0);
		collection.add(124.0);
		collection.add(70.0);
		collection.add(37.0);
		collection.add(174.0);
		collection.add(60.0);
		collection.add(92.0);
		collection.add(59.0);
		collection.add(128.0);
		collection.add(110.0);
		collection.add(20.0);
		collection.add(200.0);
		collection.add(85.0);
		collection.add(14.0);
		collection.add(130.0);
		collection.add(129.0);
		collection.add(118.0);
		collection.add(40.0);
		collection.add(199.0);
		collection.add(45.0);
		collection.add(20.0);
		collection.add(72.0);
		collection.add(110.0);
		collection.add(92.0);
		collection.add(38.0);
		collection.add(187.0);
		collection.add(24.0);
		collection.add(80.0);
		collection.add(31.0);
		collection.add(71.0);
		collection.add(137.0);
		collection.add(13.0);
		collection.add(4.0);
		collection.add(173.0);
		collection.add(167.0);
		collection.add(111.0);
		collection.add(110.0);
		collection.add(144.0);
		collection.add(166.0);
		collection.add(120.0);
		collection.add(36.0);
		collection.add(142.0);
		collection.add(120.0);
		collection.add(156.0);
		collection.add(27.0);
		collection.add(17.0);
		collection.add(123.0);
		collection.add(9.0);
		collection.add(59.0);
		collection.add(94.0);
		collection.add(4.0);
		collection.add(153.0);
		collection.add(163.0);
		collection.add(138.0);
		collection.add(54.0);
		collection.add(156.0);
		collection.add(127.0);
		collection.add(190.0);
		collection.add(180.0);
		collection.add(104.0);
		collection.add(32.0);
		collection.add(193.0);
		collection.add(120.0);
		collection.add(41.0);
		collection.add(184.0);
		collection.add(52.0);
		collection.add(100.0);
		collection.add(29.0);
		collection.add(59.0);
		collection.add(14.0);
		collection.add(63.0);
		collection.add(155.0);
		collection.add(89.0);
		collection.add(69.0);
		collection.add(11.0);
		collection.add(139.0);
		collection.add(98.0);
		collection.add(136.0);
		collection.add(148.0);
		collection.add(123.0);
		collection.add(93.0);
		collection.add(112.0);
		collection.add(9.0);
		collection.add(94.0);
		collection.add(32.0);
		collection.add(80.0);
		collection.add(19.0);
		collection.add(65.0);
		collection.add(147.0);
		collection.add(198.0);
		collection.add(180.0);
		collection.add(61.0);
		collection.add(80.0);
		collection.add(151.0);
		collection.add(108.0);
		collection.add(136.0);
		collection.add(123.0);
		collection.add(58.0);
		collection.add(152.0);
		collection.add(178.0);
		collection.add(178.0);
		collection.add(120.0);
		collection.add(149.0);
		collection.add(36.0);
		collection.add(97.0);
		collection.add(47.0);
		collection.add(154.0);
		collection.add(121.0);
		collection.add(144.0);
		collection.add(159.0);
		collection.add(189.0);
		collection.add(42.0);
		collection.add(160.0);
		collection.add(112.0);
		collection.add(185.0);
		collection.add(83.0);
		collection.add(96.0);
		collection.add(182.0);
		collection.add(185.0);
		collection.add(85.0);
		collection.add(115.0);
		collection.add(93.0);
		collection.add(182.0);
		collection.add(64.0);
		collection.add(150.0);
		collection.add(162.0);
		collection.add(81.0);
		collection.add(196.0);
		collection.add(94.0);
		collection.add(1.0);
		collection.add(146.0);
		collection.add(168.0);
		collection.add(2.0);
		collection.add(24.0);
		collection.add(8.0);
		collection.add(166.0);
		collection.add(26.0);
		collection.add(71.0);
		collection.add(8.0);
		collection.add(137.0);
		collection.add(138.0);
		collection.add(10.0);
		collection.add(112.0);
		collection.add(96.0);
		collection.add(182.0);
		collection.add(73.0);
		collection.add(157.0);
		collection.add(186.0);
		collection.add(134.0);
		collection.add(73.0);
		collection.add(86.0);
		collection.add(95.0);
		collection.add(35.0);
		collection.add(30.0);
		collection.add(52.0);
		collection.add(157.0);
		collection.add(68.0);
		collection.add(162.0);
		collection.add(118.0);
		collection.add(104.0);
		collection.add(160.0);
		collection.add(180.0);
		collection.add(137.0);
		collection.add(122.0);
		collection.add(9.0);
		collection.add(19.0);
		collection.add(133.0);
		collection.add(121.0);
		collection.add(46.0);
		collection.add(200.0);
		collection.add(141.0);
		collection.add(43.0);
		collection.add(94.0);
		collection.add(154.0);
		collection.add(184.0);
		collection.add(95.0);
		collection.add(109.0);
		collection.add(129.0);
		collection.add(151.0);
		collection.add(183.0);
		collection.add(73.0);
		collection.add(180.0);
		collection.add(186.0);
		collection.add(75.0);
		collection.add(129.0);
		collection.add(130.0);
		collection.add(110.0);
		collection.add(84.0);
		collection.add(65.0);
		collection.add(139.0);
		collection.add(76.0);
		collection.add(76.0);
		collection.add(130.0);
		collection.add(92.0);
		collection.add(7.0);
		collection.add(127.0);
		collection.add(106.0);
		collection.add(33.0);
		collection.add(78.0);
		collection.add(180.0);
		collection.add(142.0);
		collection.add(60.0);
		collection.add(158.0);
		collection.add(136.0);
		collection.add(14.0);
		collection.add(200.0);
		collection.add(81.0);
		collection.add(75.0);
		collection.add(114.0);
		collection.add(142.0);
		collection.add(99.0);
		collection.add(80.0);
		collection.add(27.0);
		collection.add(40.0);
		collection.add(88.0);
		collection.add(137.0);
		collection.add(197.0);
		collection.add(96.0);
		collection.add(152.0);
		collection.add(85.0);
		collection.add(84.0);
		collection.add(10.0);
		collection.add(107.0);
		collection.add(177.0);
		collection.add(113.0);
		collection.add(129.0);
		collection.add(44.0);
		collection.add(14.0);
		collection.add(178.0);
		collection.add(157.0);
		collection.add(57.0);
		collection.add(198.0);
		collection.add(190.0);
		collection.add(74.0);
		collection.add(144.0);
		collection.add(92.0);
		collection.add(27.0);
		collection.add(190.0);
		collection.add(60.0);
		collection.add(146.0);
		collection.add(66.0);
		collection.add(74.0);
		collection.add(161.0);
		collection.add(133.0);
		collection.add(70.0);
		collection.add(5.0);
		collection.add(176.0);
		collection.add(7.0);
		collection.add(13.0);
		collection.add(164.0);
		collection.add(77.0);
		collection.add(9.0);
		collection.add(197.0);
		collection.add(82.0);
		collection.add(157.0);
		collection.add(183.0);
		collection.add(126.0);
		collection.add(181.0);
		collection.add(85.0);
		collection.add(122.0);
		collection.add(114.0);
		collection.add(83.0);
		collection.add(146.0);
		collection.add(117.0);
		collection.add(49.0);
		collection.add(173.0);
		collection.add(115.0);
		collection.add(114.0);
		collection.add(2.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=30)
	public void JHashSet(Blackhole bh) {
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(164.0,56.0,69.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,37.0,176.0,180.0,100.0,85.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,52.0,76.0,6.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,148.0,79.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(101.0,34.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,189.0,106.0,181.0,16.0,55.0,88.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,153.0,180.0,56.0,136.0,6.0,77.0,130.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,63.0,190.0,89.0,114.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(4.0,69.0,27.0,137.0,174.0,134.0,78.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,162.0,48.0,160.0,167.0,2.0,154.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,89.0,113.0,146.0,136.0,69.0,39.0,161.0,112.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(104.0,31.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(54.0,2.0,196.0,151.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(92.0,103.0,64.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(106.0,77.0,165.0,181.0,102.0,132.0,7.0,24.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,15.0,10.0,148.0,71.0,156.0,62.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(19.0,92.0,104.0,118.0,168.0,159.0,15.0,198.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,42.0,115.0,85.0,54.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,109.0,127.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(40.0,13.0,28.0,73.0,2.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,114.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,29.0,185.0,165.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,93.0,26.0,88.0,6.0,31.0,150.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,28.0,21.0,93.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,70.0,167.0,95.0,3.0,15.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,149.0,98.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,110.0,125.0,100.0,120.0,19.0,115.0,137.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,140.0,21.0,40.0,80.0,24.0,35.0,6.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,81.0,163.0,30.0,161.0,89.0,24.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,152.0,43.0,68.0,65.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,43.0,115.0,146.0,132.0,116.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,166.0,18.0,189.0,59.0,128.0,195.0,173.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,130.0,158.0,68.0,187.0,138.0,65.0,18.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,125.0,83.0,82.0,39.0,25.0,18.0,45.0,126.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,143.0,191.0,69.0,147.0,181.0,187.0,113.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(5.0,134.0,20.0,29.0,111.0,59.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,144.0,54.0,179.0,116.0,191.0,115.0,90.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,4.0,18.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,71.0,103.0,60.0,55.0,17.0,190.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,128.0,57.0,15.0,158.0,174.0,178.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,81.0,85.0,105.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,77.0,177.0,73.0,38.0,66.0,149.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(37.0,40.0,54.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,39.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,59.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,13.0,11.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,164.0,8.0,172.0,29.0,21.0,124.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,176.0,171.0,52.0,176.0,119.0,109.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,134.0,99.0,27.0,48.0,109.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,177.0,41.0,28.0,195.0,138.0,107.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,76.0,168.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,103.0,21.0,27.0,148.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,86.0,2.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,146.0,87.0,165.0,96.0,156.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,188.0,56.0,138.0,57.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,44.0,46.0,112.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,146.0,3.0,118.0,32.0,99.0,195.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,49.0,49.0,52.0,174.0,115.0,63.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,79.0,160.0,11.0,150.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,142.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,79.0,115.0,133.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,23.0,87.0,30.0,96.0,53.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,62.0,31.0,54.0,93.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,172.0,65.0,89.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,9.0,194.0,12.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,83.0,17.0,189.0,58.0,96.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,5.0,15.0,174.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,3.0,92.0,183.0,60.0,96.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,32.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,95.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,83.0,134.0,156.0,119.0,108.0,143.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(26.0,14.0,45.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,9.0,4.0,166.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,90.0,116.0,139.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,14.0,4.0,155.0,182.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(69.0,61.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,152.0,40.0,107.0,153.0,170.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,72.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,152.0,174.0,97.0,138.0,71.0,90.0,170.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,91.0,194.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,174.0,134.0,17.0,16.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,190.0,185.0,103.0,117.0,125.0,176.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(146.0,144.0,137.0,59.0,48.0,21.0,117.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,79.0,32.0,18.0,82.0,72.0,55.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,197.0,30.0,40.0,179.0,195.0,119.0,131.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,164.0,71.0,168.0,71.0,32.0,44.0,144.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,167.0,11.0,95.0,56.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(62.0,155.0,165.0,130.0,24.0,82.0,38.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(135.0,138.0,133.0,158.0,172.0,131.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,146.0,175.0,112.0,140.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,117.0,155.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,42.0,66.0,175.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,1.0,87.0,2.0,58.0,83.0,42.0,16.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,188.0,43.0,190.0,45.0,184.0,71.0,90.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,19.0,162.0,146.0,113.0,70.0,192.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,111.0,29.0,11.0,67.0,77.0,83.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,139.0,104.0,43.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,60.0,184.0,34.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,171.0,181.0,141.0,101.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(34.0,145.0,114.0,92.0,167.0,89.0,188.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,27.0,65.0,43.0,29.0,25.0,141.0,134.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,115.0,186.0,28.0,143.0,91.0,131.0,53.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(21.0,181.0,34.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,89.0,130.0,48.0,165.0,52.0,175.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,67.0,96.0,90.0,59.0,96.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,156.0,62.0,15.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(102.0,100.0,99.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,59.0,153.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,34.0,10.0,165.0,133.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,168.0,127.0,126.0,72.0,180.0,190.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,31.0,159.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,135.0,161.0,23.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,174.0,35.0,61.0,154.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(88.0,124.0,156.0,135.0,108.0,96.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,142.0,91.0,19.0,40.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(179.0,33.0,31.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,187.0,97.0,3.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,144.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,102.0,13.0,148.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,148.0,162.0,167.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,58.0,189.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,151.0,179.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,189.0,82.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,163.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,55.0,105.0,11.0,55.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,131.0,157.0,200.0,38.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,5.0,7.0,121.0,142.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,6.0,32.0,196.0,154.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,141.0,3.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,164.0,130.0,189.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,143.0,96.0,58.0,30.0,9.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,83.0,112.0,19.0,70.0,73.0,197.0,178.0,43.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,159.0,179.0,141.0,182.0,170.0,149.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,158.0,160.0,102.0,143.0,97.0,69.0,44.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(130.0,59.0,187.0,146.0,131.0,87.0,160.0,13.0,128.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,105.0,54.0,31.0,96.0,111.0,21.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,149.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,114.0,192.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,191.0,111.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,161.0,109.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(27.0,93.0,74.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,9.0,70.0,196.0,164.0,198.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,152.0,94.0,180.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(76.0,100.0,115.0,120.0,139.0,97.0,6.0,37.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(47.0,52.0,173.0,18.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,73.0,173.0,148.0,160.0,129.0,32.0,193.0,2.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,70.0,145.0,108.0,100.0,148.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,155.0,150.0,126.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,86.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,191.0,29.0,97.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,30.0,143.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,52.0,27.0,109.0,52.0,153.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,161.0,35.0,10.0,26.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,43.0,50.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,58.0,141.0,126.0,83.0,162.0,135.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(93.0,181.0,4.0,57.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,89.0,116.0,99.0,137.0,134.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,110.0,114.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(177.0,13.0,194.0,199.0,10.0,200.0,152.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,114.0,71.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,63.0,48.0,158.0,188.0,168.0,154.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,95.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,107.0,107.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(9.0,63.0,161.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,12.0,36.0,159.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,39.0,3.0,59.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(41.0,41.0,53.0,3.0,18.0,7.0,71.0,198.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,11.0,27.0,3.0,74.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(25.0,43.0,179.0,175.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,188.0,200.0,32.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,170.0,63.0,139.0,38.0,108.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,37.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,69.0,115.0,104.0,85.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,53.0,187.0,7.0,110.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,141.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,88.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,47.0,130.0,102.0,14.0,146.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,197.0,156.0,188.0,199.0,162.0,195.0,13.0,184.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,132.0,74.0,99.0,64.0,85.0,51.0,175.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,180.0,93.0,143.0,139.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(56.0,35.0,9.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,122.0,122.0,120.0,56.0,33.0,119.0,1.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,9.0,70.0,21.0,35.0,32.0,100.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,180.0,64.0,143.0,34.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(167.0,165.0,77.0,15.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,52.0,158.0,139.0,64.0,157.0,76.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,113.0,123.0,172.0,157.0,175.0,80.0,171.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,55.0,74.0,31.0,62.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,125.0,160.0,38.0,4.0,45.0,132.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(29.0,6.0,12.0,197.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,20.0,78.0,11.0,124.0,56.0,138.0,88.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,57.0,60.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,180.0,73.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(44.0,58.0,48.0,7.0,72.0,63.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,84.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,165.0,7.0,160.0,120.0,28.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,156.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(139.0,46.0,182.0,16.0,86.0,78.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,123.0,130.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,90.0,172.0,103.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,199.0,108.0,175.0,197.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(159.0,30.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,96.0,14.0,105.0,72.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,163.0,16.0,194.0,87.0,48.0,52.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,88.0,31.0,133.0,42.0,62.0,74.0,3.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,163.0,117.0,144.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,59.0,174.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(49.0,194.0,160.0,119.0,154.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,48.0,149.0,52.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,65.0,12.0,134.0,157.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(11.0,173.0,51.0,28.0,82.0,186.0,179.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,107.0,157.0,42.0,88.0,31.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,55.0,152.0,197.0,105.0,43.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,110.0,31.0,189.0,94.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,52.0,179.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,155.0,149.0,123.0,129.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,175.0,36.0,50.0,96.0,132.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(119.0,116.0,70.0,32.0,148.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,115.0,18.0,16.0,70.0,126.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(109.0,70.0,185.0,26.0,78.0,65.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(163.0,157.0,36.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,177.0,69.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(94.0,197.0,111.0,102.0,84.0,66.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,156.0,155.0,50.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,179.0,126.0,196.0,199.0,50.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(133.0,104.0,155.0,81.0,45.0,103.0,34.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,59.0,176.0,115.0,51.0,142.0,39.0,61.0,104.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,63.0,132.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,117.0,39.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(2.0,152.0,138.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(75.0,57.0,186.0,199.0,25.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(185.0,189.0,195.0,91.0,89.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,23.0,188.0,57.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(168.0,139.0,6.0,84.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,114.0,72.0,51.0,175.0,13.0,79.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(182.0,37.0,200.0,27.0,178.0,164.0,156.0,165.0,56.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,97.0,95.0,39.0,166.0,142.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,28.0,6.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,7.0,50.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,65.0,112.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(160.0,147.0,91.0,183.0,117.0,55.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(83.0,102.0,193.0,92.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,144.0,137.0,40.0,10.0,72.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(38.0,129.0,152.0,49.0,55.0,8.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,129.0,24.0,17.0,173.0,104.0,35.0,72.0,165.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,97.0,31.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(113.0,21.0,31.0,9.0,18.0,98.0,196.0,173.0,117.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,64.0,39.0,185.0,198.0,46.0,54.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(12.0,139.0,49.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(43.0,7.0,67.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,148.0,29.0,36.0,148.0,188.0,99.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(188.0,75.0,18.0,107.0,156.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,108.0,119.0,34.0,113.0,35.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,117.0,1.0,3.0,19.0,187.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,177.0,13.0,106.0,199.0,62.0,11.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,171.0,58.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,98.0,182.0,166.0,79.0,37.0,96.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,135.0,66.0,22.0,26.0,110.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,95.0,149.0,93.0,183.0,52.0,199.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,92.0,178.0,134.0,20.0,109.0,49.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,11.0,117.0,174.0,75.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,178.0,94.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,119.0,21.0,64.0,132.0,152.0,57.0,128.0,61.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,80.0,135.0,150.0,150.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,39.0,152.0,148.0,156.0,68.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,90.0,90.0,179.0,91.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,184.0,7.0,26.0,52.0,190.0,185.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,166.0,69.0,155.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(64.0,26.0,179.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,152.0,46.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,35.0,3.0,40.0,155.0,4.0,91.0,169.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(182.0,12.0,96.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(172.0,58.0,47.0,111.0,57.0,128.0,167.0,17.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,19.0,60.0,192.0,103.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,59.0,3.0,18.0,134.0,113.0,154.0,171.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,73.0,112.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,183.0,132.0,160.0,167.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(73.0,162.0,11.0,32.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(184.0,143.0,197.0,162.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(89.0,38.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,63.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,146.0,185.0,23.0,151.0,102.0,41.0,117.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,131.0,28.0,154.0,104.0,138.0,17.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(114.0,129.0,96.0,83.0,153.0,175.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,56.0,108.0,68.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(71.0,114.0,49.0,142.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,33.0,120.0,85.0,197.0,167.0,176.0,132.0,125.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,147.0,191.0,10.0,24.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,200.0,192.0,196.0,121.0,143.0,14.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,48.0,178.0,102.0,190.0,124.0,81.0,73.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(118.0,147.0,173.0,94.0,2.0,154.0,39.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,122.0,164.0,36.0,116.0,80.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,126.0,195.0,152.0,178.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(55.0,35.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,64.0,132.0,15.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,171.0,113.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(151.0,2.0,158.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(52.0,52.0,175.0,43.0,56.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,119.0,191.0,118.0,51.0,40.0,145.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(3.0,48.0,24.0,128.0,6.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,9.0,27.0,27.0,74.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,125.0,33.0,146.0,106.0,88.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,97.0,153.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,188.0,180.0,134.0,136.0,9.0,67.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,30.0,58.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(173.0,153.0,112.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(13.0,13.0,100.0,55.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,153.0,23.0,162.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,39.0,148.0,32.0,68.0,50.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(116.0,49.0,7.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,22.0,140.0,116.0,137.0,197.0,48.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(157.0,178.0,100.0,147.0,96.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,186.0,198.0,106.0,96.0,91.0,174.0,193.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,186.0,8.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(176.0,143.0,15.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(111.0,193.0,168.0,137.0,158.0,34.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(70.0,43.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(18.0,196.0,44.0,65.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,84.0,87.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(10.0,185.0,75.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,151.0,16.0,50.0,112.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,82.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(166.0,149.0,140.0,39.0,155.0,105.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(85.0,176.0,117.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,49.0,48.0,80.0,22.0,115.0,30.0,47.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,185.0,83.0,200.0,178.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,142.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,17.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,186.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,5.0,25.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(186.0,158.0,178.0,18.0,98.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(174.0,10.0,199.0,15.0,158.0,37.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,7.0,185.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,155.0,88.0,12.0,88.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,100.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,23.0,5.0,157.0,189.0,136.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(100.0,49.0,189.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(24.0,17.0,153.0,153.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,65.0,198.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,113.0,41.0,26.0,68.0,173.0,30.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,187.0,123.0,4.0,128.0,7.0,37.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,94.0,4.0,131.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,45.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,106.0,10.0,95.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(103.0,163.0,47.0,140.0,119.0,76.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,61.0,92.0,170.0,76.0,81.0,39.0,157.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(82.0,103.0,26.0,120.0,51.0,21.0,152.0,99.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,110.0,123.0,158.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(91.0,9.0,45.0,84.0,164.0,40.0,79.0,12.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(189.0,171.0,69.0,107.0,185.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,200.0,176.0,119.0,95.0,141.0,191.0,102.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(46.0,139.0,61.0,152.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(150.0,144.0,31.0,161.0,5.0,51.0,199.0,128.0,64.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(15.0,17.0,87.0,92.0,21.0,150.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,17.0,4.0,166.0,60.0,41.0,129.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(67.0,44.0,90.0,75.0,110.0,146.0,133.0,156.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,5.0,183.0,80.0,64.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,125.0,9.0,4.0,78.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(65.0,129.0,96.0,139.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,2.0,197.0,117.0,115.0,105.0,77.0,42.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,128.0,169.0,118.0,20.0,180.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(152.0,127.0,49.0,138.0,148.0,163.0,163.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,33.0,140.0,80.0,83.0,119.0,176.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(68.0,134.0,120.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(187.0,16.0,103.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(60.0,2.0,177.0,189.0,95.0,140.0,173.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(98.0,1.0,11.0,175.0,133.0,200.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,52.0,200.0,188.0,21.0,10.0,137.0,102.0,41.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,21.0,27.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,36.0,44.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,18.0,47.0,162.0,140.0,107.0,156.0,81.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,156.0,181.0,131.0,67.0,63.0,88.0,40.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(149.0,109.0,64.0,196.0,17.0,25.0,181.0,91.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(145.0,48.0,153.0,45.0,71.0,84.0,95.0,6.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,103.0,116.0,108.0,118.0,93.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(136.0,126.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,110.0,144.0,162.0,112.0,82.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,58.0,60.0,13.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(48.0,191.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,175.0,115.0,139.0,145.0,48.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(129.0,133.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,163.0,15.0,22.0,112.0,110.0,20.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(99.0,11.0,187.0,135.0,85.0,122.0,25.0,7.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(200.0,141.0,78.0,65.0,162.0,66.0,57.0,41.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,100.0,174.0,163.0,59.0,154.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(162.0,124.0,157.0,164.0,14.0,120.0,53.0,105.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,107.0,182.0,33.0,163.0,38.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(23.0,84.0,25.0,143.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,134.0,186.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,4.0,110.0,80.0,56.0,19.0,78.0,129.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(169.0,136.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(22.0,179.0,3.0,35.0,40.0,146.0,113.0,88.0,113.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(134.0,38.0,110.0,42.0,95.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(128.0,153.0,134.0,103.0,163.0,124.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(161.0,182.0,174.0,173.0,22.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(90.0,4.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,29.0,93.0,12.0,106.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,35.0,53.0,21.0,150.0,29.0,36.0,116.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(110.0,183.0,99.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,8.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,117.0,57.0,43.0,147.0,128.0,118.0,111.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(156.0,84.0,97.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,105.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(108.0,96.0,184.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,42.0,34.0,111.0,43.0,144.0,180.0,7.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,101.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(192.0,160.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,169.0,119.0,127.0,120.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(180.0,61.0,122.0,49.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(45.0,86.0,161.0,56.0,53.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,8.0,129.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(87.0,13.0,17.0,159.0,85.0,13.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(155.0,21.0,29.0,181.0,76.0,91.0,156.0,69.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(66.0,159.0,28.0,182.0,63.0,79.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(31.0,22.0,193.0,35.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(63.0,19.0,171.0,35.0,186.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,156.0,46.0,162.0,47.0,195.0,97.0,73.0,168.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(137.0,126.0,9.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(126.0,151.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(117.0,37.0,64.0,134.0,126.0,199.0,71.0,160.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,68.0,181.0,33.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,90.0,49.0,144.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,137.0,39.0,19.0,7.0,7.0,164.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(32.0,22.0,100.0,181.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(78.0,67.0,97.0,156.0,200.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,28.0,189.0,35.0,66.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,113.0,105.0,45.0,77.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(36.0,93.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(94.0,87.0,140.0,57.0,180.0,125.0,158.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(72.0,178.0,2.0,92.0,56.0,142.0,125.0,143.0,135.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,12.0,15.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(158.0,54.0,105.0,193.0,40.0,122.0,177.0,151.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(144.0,71.0,56.0,129.0,155.0,121.0,83.0,141.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(197.0,26.0,100.0,127.0,141.0,136.0,11.0,179.0,136.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(196.0,198.0,13.0,185.0,30.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(61.0,108.0,1.0,184.0,141.0,6.0,147.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,101.0,174.0,192.0,151.0,104.0,183.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(147.0,12.0,172.0,21.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,19.0,106.0,197.0,146.0,12.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(115.0,162.0,145.0,148.0,150.0,106.0,122.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(42.0,18.0,98.0,46.0,171.0,169.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(148.0,5.0,139.0,51.0,10.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(39.0,197.0,26.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(8.0,17.0,197.0,93.0,199.0,149.0,102.0,65.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(14.0,90.0,166.0,65.0,70.0,99.0,66.0,10.0,45.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,84.0,130.0,185.0,199.0,195.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(140.0,84.0,55.0,131.0,88.0,62.0,179.0,33.0,118.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(6.0,11.0,60.0,100.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(17.0,176.0,101.0,141.0,30.0,38.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(97.0,99.0,97.0,84.0,16.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(198.0,6.0,189.0,13.0,3.0,191.0,46.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(153.0,136.0,137.0,147.0,138.0,139.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,123.0,108.0,188.0,172.0,198.0,34.0,3.0,137.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(165.0,163.0,40.0,107.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,120.0,112.0,66.0,158.0,101.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(170.0,72.0,136.0,161.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(175.0,83.0,7.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(57.0,125.0,23.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(35.0,68.0,132.0,149.0,167.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,70.0,153.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,169.0,56.0,120.0,40.0,115.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(154.0,50.0,65.0,5.0,141.0,126.0,75.0,119.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(74.0,149.0,41.0,14.0,186.0,25.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(81.0,123.0,185.0,198.0,69.0,133.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(121.0,15.0,77.0,144.0,29.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(59.0,108.0,3.0,115.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(28.0,172.0,157.0,124.0,108.0,190.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(96.0,93.0,66.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(122.0,71.0,71.0,157.0,37.0,27.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(132.0,147.0,104.0,58.0,150.0,185.0,176.0,58.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(1.0,86.0,58.0,161.0,20.0,149.0,142.0,174.0,40.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(142.0,22.0,104.0,3.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(16.0,15.0,75.0,8.0,46.0,70.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(199.0,151.0,2.0,28.0,1.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(105.0,172.0,23.0,130.0,75.0,53.0,32.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(112.0,115.0,61.0,12.0,85.0,36.0,5.0,146.0,39.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(191.0,106.0,21.0,183.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,117.0,95.0,139.0,169.0,198.0,99.0,179.0,52.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(194.0,106.0,123.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(141.0,56.0,114.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(86.0,136.0,183.0,11.0,46.0,121.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(7.0,197.0,78.0,32.0,74.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(131.0,141.0,133.0,168.0,159.0,139.0,172.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(193.0,94.0,188.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(53.0,114.0,141.0,95.0,161.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(190.0,147.0,44.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(181.0,27.0,120.0,92.0,13.0,90.0,153.0,27.0,191.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(95.0,59.0,129.0,35.0,27.0,50.0,34.0,73.0,19.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(123.0,12.0,132.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(77.0,83.0,146.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(178.0,29.0,149.0,180.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(107.0,90.0,30.0,154.0,148.0,20.0,196.0,105.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(80.0,37.0,83.0,16.0,183.0,186.0,4.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(143.0,94.0,110.0,170.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,57.0,196.0,199.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(20.0,70.0,66.0,195.0,161.0,149.0,97.0,51.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(84.0,128.0,155.0,92.0,189.0,114.0,1.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(127.0,113.0,116.0,32.0,160.0,184.0,177.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(58.0,171.0,141.0,163.0)));
		collection.addAll(new java.util.HashSet<Double>(java.util.Arrays.asList(33.0,25.0,99.0,62.0,130.0,57.0)));
	}
}
