package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile0AllSets_JHashSet_20220429190544069 {
	java.util.HashSet<Integer> collection = new java.util.HashSet<>();
	@Setup(Level.Invocation)
	public void setupJHashSet() {
		collection = new java.util.HashSet<>();
		collection.add(105);
		collection.add(15);
		collection.add(135);
		collection.add(167);
		collection.add(73);
		collection.add(145);
		collection.add(160);
		collection.add(120);
		collection.add(3);
		collection.add(132);
		collection.add(9);
		collection.add(51);
		collection.add(180);
		collection.add(169);
		collection.add(30);
		collection.add(43);
		collection.add(171);
		collection.add(90);
		collection.add(74);
		collection.add(46);
		collection.add(178);
		collection.add(25);
		collection.add(10);
		collection.add(102);
		collection.add(186);
		collection.add(75);
		collection.add(70);
		collection.add(62);
		collection.add(197);
		collection.add(145);
		collection.add(111);
		collection.add(7);
		collection.add(84);
		collection.add(64);
		collection.add(153);
		collection.add(18);
		collection.add(144);
		collection.add(133);
		collection.add(29);
		collection.add(111);
		collection.add(113);
		collection.add(12);
		collection.add(25);
		collection.add(116);
		collection.add(119);
		collection.add(1);
		collection.add(52);
		collection.add(197);
		collection.add(29);
		collection.add(185);
		collection.add(87);
		collection.add(168);
		collection.add(131);
		collection.add(4);
		collection.add(55);
		collection.add(30);
		collection.add(131);
		collection.add(107);
		collection.add(10);
		collection.add(161);
		collection.add(176);
		collection.add(91);
		collection.add(67);
		collection.add(66);
		collection.add(29);
		collection.add(173);
		collection.add(69);
		collection.add(100);
		collection.add(140);
		collection.add(4);
		collection.add(59);
		collection.add(172);
		collection.add(55);
		collection.add(15);
		collection.add(141);
		collection.add(197);
		collection.add(176);
		collection.add(110);
		collection.add(72);
		collection.add(32);
		collection.add(15);
		collection.add(128);
		collection.add(180);
		collection.add(70);
		collection.add(189);
		collection.add(85);
		collection.add(93);
		collection.add(44);
		collection.add(15);
		collection.add(135);
		collection.add(166);
		collection.add(186);
		collection.add(115);
		collection.add(79);
		collection.add(72);
		collection.add(89);
		collection.add(53);
		collection.add(11);
		collection.add(197);
		collection.add(134);
		collection.add(22);
		collection.add(74);
		collection.add(195);
		collection.add(177);
		collection.add(106);
		collection.add(176);
		collection.add(146);
		collection.add(43);
		collection.add(79);
		collection.add(197);
		collection.add(188);
		collection.add(20);
		collection.add(72);
		collection.add(91);
		collection.add(16);
		collection.add(96);
		collection.add(41);
		collection.add(1);
		collection.add(150);
		collection.add(188);
		collection.add(61);
		collection.add(183);
		collection.add(4);
		collection.add(112);
		collection.add(41);
		collection.add(104);
		collection.add(84);
		collection.add(185);
		collection.add(27);
		collection.add(14);
		collection.add(129);
		collection.add(54);
		collection.add(186);
		collection.add(55);
		collection.add(73);
		collection.add(82);
		collection.add(113);
		collection.add(50);
		collection.add(102);
		collection.add(155);
		collection.add(66);
		collection.add(9);
		collection.add(176);
		collection.add(78);
		collection.add(7);
		collection.add(186);
		collection.add(30);
		collection.add(194);
		collection.add(32);
		collection.add(103);
		collection.add(139);
		collection.add(76);
		collection.add(108);
		collection.add(101);
		collection.add(178);
		collection.add(183);
		collection.add(152);
		collection.add(198);
		collection.add(60);
		collection.add(4);
		collection.add(48);
		collection.add(2);
		collection.add(43);
		collection.add(87);
		collection.add(74);
		collection.add(189);
		collection.add(198);
		collection.add(198);
		collection.add(16);
		collection.add(69);
		collection.add(114);
		collection.add(130);
		collection.add(133);
		collection.add(167);
		collection.add(170);
		collection.add(44);
		collection.add(95);
		collection.add(154);
		collection.add(181);
		collection.add(80);
		collection.add(184);
		collection.add(16);
		collection.add(90);
		collection.add(157);
		collection.add(50);
		collection.add(59);
		collection.add(37);
		collection.add(80);
		collection.add(66);
		collection.add(35);
		collection.add(191);
		collection.add(193);
		collection.add(148);
		collection.add(102);
		collection.add(93);
		collection.add(117);
		collection.add(35);
		collection.add(177);
		collection.add(133);
		collection.add(65);
		collection.add(101);
		collection.add(82);
		collection.add(67);
		collection.add(174);
		collection.add(120);
		collection.add(103);
		collection.add(189);
		collection.add(54);
		collection.add(65);
		collection.add(72);
		collection.add(187);
		collection.add(18);
		collection.add(192);
		collection.add(166);
		collection.add(70);
		collection.add(160);
		collection.add(9);
		collection.add(188);
		collection.add(121);
		collection.add(21);
		collection.add(1);
		collection.add(100);
		collection.add(49);
		collection.add(57);
		collection.add(86);
		collection.add(134);
		collection.add(20);
		collection.add(143);
		collection.add(74);
		collection.add(92);
		collection.add(100);
		collection.add(62);
		collection.add(144);
		collection.add(186);
		collection.add(9);
		collection.add(70);
		collection.add(193);
		collection.add(4);
		collection.add(125);
		collection.add(192);
		collection.add(13);
		collection.add(26);
		collection.add(119);
		collection.add(199);
		collection.add(19);
		collection.add(164);
		collection.add(22);
		collection.add(172);
		collection.add(114);
		collection.add(115);
		collection.add(173);
		collection.add(38);
		collection.add(174);
		collection.add(46);
		collection.add(155);
		collection.add(133);
		collection.add(48);
		collection.add(199);
		collection.add(146);
		collection.add(133);
		collection.add(126);
		collection.add(196);
		collection.add(43);
		collection.add(155);
		collection.add(106);
		collection.add(197);
		collection.add(88);
		collection.add(37);
		collection.add(72);
		collection.add(124);
		collection.add(199);
		collection.add(167);
		collection.add(68);
		collection.add(75);
		collection.add(93);
		collection.add(115);
		collection.add(108);
		collection.add(114);
		collection.add(68);
		collection.add(13);
		collection.add(19);
		collection.add(141);
		collection.add(123);
		collection.add(103);
		collection.add(127);
		collection.add(84);
		collection.add(110);
		collection.add(160);
		collection.add(183);
		collection.add(92);
		collection.add(135);
		collection.add(56);
		collection.add(145);
		collection.add(143);
		collection.add(156);
		collection.add(188);
		collection.add(193);
		collection.add(52);
		collection.add(140);
		collection.add(39);
		collection.add(33);
		collection.add(22);
		collection.add(67);
		collection.add(189);
		collection.add(177);
		collection.add(147);
		collection.add(176);
		collection.add(113);
		collection.add(103);
		collection.add(157);
		collection.add(154);
		collection.add(98);
		collection.add(31);
		collection.add(186);
		collection.add(181);
		collection.add(94);
		collection.add(119);
		collection.add(114);
		collection.add(198);
		collection.add(64);
		collection.add(122);
		collection.add(185);
		collection.add(188);
		collection.add(194);
		collection.add(110);
		collection.add(194);
		collection.add(26);
		collection.add(128);
		collection.add(144);
		collection.add(48);
		collection.add(41);
		collection.add(49);
		collection.add(56);
		collection.add(104);
		collection.add(191);
		collection.add(64);
		collection.add(152);
		collection.add(138);
		collection.add(16);
		collection.add(45);
		collection.add(139);
		collection.add(143);
		collection.add(79);
		collection.add(151);
		collection.add(170);
		collection.add(12);
		collection.add(113);
		collection.add(22);
		collection.add(170);
		collection.add(97);
		collection.add(65);
		collection.add(125);
		collection.add(182);
		collection.add(174);
		collection.add(42);
		collection.add(191);
		collection.add(118);
		collection.add(142);
		collection.add(36);
		collection.add(47);
		collection.add(89);
		collection.add(188);
		collection.add(100);
		collection.add(156);
		collection.add(34);
		collection.add(92);
		collection.add(1);
		collection.add(180);
		collection.add(164);
		collection.add(105);
		collection.add(84);
		collection.add(178);
		collection.add(82);
		collection.add(30);
		collection.add(15);
		collection.add(105);
		collection.add(55);
		collection.add(131);
		collection.add(10);
		collection.add(190);
		collection.add(63);
		collection.add(160);
		collection.add(88);
		collection.add(91);
		collection.add(150);
		collection.add(12);
		collection.add(55);
		collection.add(169);
		collection.add(149);
		collection.add(58);
		collection.add(165);
		collection.add(98);
		collection.add(111);
		collection.add(33);
		collection.add(25);
		collection.add(125);
		collection.add(190);
		collection.add(94);
		collection.add(170);
		collection.add(121);
		collection.add(190);
		collection.add(77);
		collection.add(94);
		collection.add(167);
		collection.add(57);
		collection.add(50);
		collection.add(113);
		collection.add(92);
		collection.add(58);
		collection.add(72);
		collection.add(161);
		collection.add(166);
		collection.add(63);
		collection.add(165);
		collection.add(180);
		collection.add(70);
		collection.add(115);
		collection.add(87);
		collection.add(7);
		collection.add(88);
		collection.add(160);
		collection.add(87);
		collection.add(171);
		collection.add(25);
		collection.add(15);
		collection.add(145);
		collection.add(175);
		collection.add(191);
		collection.add(45);
		collection.add(6);
		collection.add(90);
		collection.add(197);
		collection.add(131);
		collection.add(171);
		collection.add(10);
		collection.add(181);
		collection.add(181);
		collection.add(55);
		collection.add(35);
		collection.add(158);
		collection.add(57);
		collection.add(121);
		collection.add(42);
		collection.add(83);
		collection.add(38);
		collection.add(88);
		collection.add(8);
		collection.add(127);
		collection.add(82);
		collection.add(16);
		collection.add(53);
		collection.add(195);
		collection.add(96);
		collection.add(85);
		collection.add(174);
		collection.add(84);
		collection.add(3);
		collection.add(46);
		collection.add(99);
		collection.add(190);
		collection.add(141);
		collection.add(144);
		collection.add(162);
		collection.add(155);
		collection.add(47);
		collection.add(27);
		collection.add(22);
		collection.add(176);
		collection.add(184);
		collection.add(189);
		collection.add(51);
		collection.add(191);
		collection.add(42);
		collection.add(137);
		collection.add(189);
		collection.add(10);
		collection.add(153);
		collection.add(127);
		collection.add(44);
		collection.add(178);
		collection.add(179);
		collection.add(60);
		collection.add(158);
		collection.add(125);
		collection.add(108);
		collection.add(52);
		collection.add(27);
		collection.add(4);
		collection.add(177);
		collection.add(171);
		collection.add(119);
		collection.add(116);
		collection.add(107);
		collection.add(131);
		collection.add(182);
		collection.add(14);
		collection.add(178);
		collection.add(44);
		collection.add(130);
		collection.add(61);
		collection.add(192);
		collection.add(71);
		collection.add(14);
		collection.add(89);
		collection.add(179);
		collection.add(157);
		collection.add(1);
		collection.add(175);
		collection.add(30);
		collection.add(172);
		collection.add(73);
		collection.add(78);
		collection.add(128);
		collection.add(1);
		collection.add(197);
		collection.add(166);
		collection.add(129);
		collection.add(137);
		collection.add(171);
		collection.add(179);
		collection.add(95);
		collection.add(70);
		collection.add(29);
		collection.add(179);
		collection.add(115);
		collection.add(115);
		collection.add(111);
		collection.add(79);
		collection.add(17);
		collection.add(190);
		collection.add(114);
		collection.add(45);
		collection.add(72);
		collection.add(129);
		collection.add(145);
		collection.add(145);
		collection.add(17);
		collection.add(65);
		collection.add(19);
		collection.add(8);
		collection.add(52);
		collection.add(78);
		collection.add(37);
		collection.add(1);
		collection.add(54);
		collection.add(31);
		collection.add(159);
		collection.add(69);
		collection.add(162);
		collection.add(6);
		collection.add(67);
		collection.add(191);
		collection.add(172);
		collection.add(174);
		collection.add(4);
		collection.add(72);
		collection.add(71);
		collection.add(193);
		collection.add(34);
		collection.add(177);
		collection.add(120);
		collection.add(113);
		collection.add(26);
		collection.add(167);
		collection.add(27);
		collection.add(148);
		collection.add(99);
		collection.add(69);
		collection.add(88);
		collection.add(88);
		collection.add(119);
		collection.add(24);
		collection.add(128);
		collection.add(37);
		collection.add(43);
		collection.add(23);
		collection.add(42);
		collection.add(58);
		collection.add(98);
		collection.add(191);
		collection.add(154);
		collection.add(40);
		collection.add(171);
		collection.add(173);
		collection.add(29);
		collection.add(19);
		collection.add(101);
		collection.add(151);
		collection.add(183);
		collection.add(55);
		collection.add(53);
		collection.add(30);
		collection.add(171);
		collection.add(12);
		collection.add(147);
		collection.add(46);
		collection.add(104);
		collection.add(173);
		collection.add(32);
		collection.add(149);
		collection.add(178);
		collection.add(40);
		collection.add(19);
		collection.add(37);
		collection.add(188);
		collection.add(149);
		collection.add(136);
		collection.add(128);
		collection.add(113);
		collection.add(132);
		collection.add(84);
		collection.add(160);
		collection.add(192);
		collection.add(143);
		collection.add(35);
		collection.add(133);
		collection.add(19);
		collection.add(184);
		collection.add(137);
		collection.add(29);
		collection.add(60);
		collection.add(41);
		collection.add(51);
		collection.add(52);
		collection.add(194);
		collection.add(66);
		collection.add(100);
		collection.add(173);
		collection.add(24);
		collection.add(53);
		collection.add(24);
		collection.add(63);
		collection.add(23);
		collection.add(108);
		collection.add(91);
		collection.add(120);
		collection.add(5);
		collection.add(21);
		collection.add(59);
		collection.add(8);
		collection.add(186);
		collection.add(64);
		collection.add(138);
		collection.add(12);
		collection.add(4);
		collection.add(144);
		collection.add(103);
		collection.add(100);
		collection.add(120);
		collection.add(173);
		collection.add(138);
		collection.add(168);
		collection.add(146);
		collection.add(120);
		collection.add(140);
		collection.add(92);
		collection.add(38);
		collection.add(25);
		collection.add(196);
		collection.add(24);
		collection.add(193);
		collection.add(128);
		collection.add(166);
		collection.add(29);
		collection.add(183);
		collection.add(16);
		collection.add(14);
		collection.add(16);
		collection.add(66);
		collection.add(165);
		collection.add(95);
		collection.add(184);
		collection.add(89);
		collection.add(190);
		collection.add(184);
		collection.add(184);
		collection.add(127);
		collection.add(145);
		collection.add(173);
		collection.add(77);
		collection.add(172);
		collection.add(131);
		collection.add(101);
		collection.add(161);
		collection.add(52);
		collection.add(47);
		collection.add(19);
		collection.add(28);
		collection.add(85);
		collection.add(41);
		collection.add(44);
		collection.add(94);
		collection.add(44);
		collection.add(185);
		collection.add(142);
		collection.add(6);
		collection.add(169);
		collection.add(53);
		collection.add(42);
		collection.add(136);
		collection.add(44);
		collection.add(88);
		collection.add(14);
		collection.add(40);
		collection.add(151);
		collection.add(90);
		collection.add(177);
		collection.add(116);
		collection.add(137);
		collection.add(2);
		collection.add(68);
		collection.add(198);
		collection.add(99);
		collection.add(86);
		collection.add(198);
		collection.add(11);
		collection.add(5);
		collection.add(36);
		collection.add(3);
		collection.add(44);
		collection.add(25);
		collection.add(73);
		collection.add(62);
		collection.add(72);
		collection.add(68);
		collection.add(67);
		collection.add(111);
		collection.add(33);
		collection.add(17);
		collection.add(172);
		collection.add(30);
		collection.add(81);
		collection.add(80);
		collection.add(60);
		collection.add(27);
		collection.add(78);
		collection.add(15);
		collection.add(49);
		collection.add(24);
		collection.add(65);
		collection.add(70);
		collection.add(179);
		collection.add(78);
		collection.add(158);
		collection.add(148);
		collection.add(1);
		collection.add(157);
		collection.add(29);
		collection.add(180);
		collection.add(8);
		collection.add(3);
		collection.add(156);
		collection.add(7);
		collection.add(42);
		collection.add(34);
		collection.add(93);
		collection.add(142);
		collection.add(47);
		collection.add(116);
		collection.add(187);
		collection.add(97);
		collection.add(90);
		collection.add(31);
		collection.add(173);
		collection.add(64);
		collection.add(59);
		collection.add(9);
		collection.add(135);
		collection.add(152);
		collection.add(130);
		collection.add(105);
		collection.add(110);
		collection.add(31);
		collection.add(122);
		collection.add(83);
		collection.add(178);
		collection.add(5);
		collection.add(163);
		collection.add(75);
		collection.add(121);
		collection.add(107);
		collection.add(71);
		collection.add(186);
		collection.add(119);
		collection.add(100);
		collection.add(181);
		collection.add(154);
		collection.add(110);
		collection.add(38);
		collection.add(171);
		collection.add(11);
		collection.add(15);
		collection.add(64);
		collection.add(63);
		collection.add(37);
		collection.add(118);
		collection.add(169);
		collection.add(79);
		collection.add(77);
		collection.add(41);
		collection.add(112);
		collection.add(36);
		collection.add(76);
		collection.add(62);
		collection.add(94);
		collection.add(42);
		collection.add(191);
		collection.add(96);
		collection.add(163);
		collection.add(157);
		collection.add(198);
		collection.add(163);
		collection.add(3);
		collection.add(198);
		collection.add(95);
		collection.add(107);
		collection.add(157);
		collection.add(11);
		collection.add(18);
		collection.add(199);
		collection.add(57);
		collection.add(95);
		collection.add(176);
		collection.add(18);
		collection.add(121);
		collection.add(180);
		collection.add(81);
		collection.add(175);
		collection.add(139);
		collection.add(52);
		collection.add(157);
		collection.add(80);
		collection.add(1);
		collection.add(10);
		collection.add(165);
		collection.add(175);
		collection.add(197);
		collection.add(126);
		collection.add(174);
		collection.add(127);
		collection.add(177);
		collection.add(83);
		collection.add(34);
		collection.add(138);
		collection.add(11);
		collection.add(184);
		collection.add(158);
		collection.add(150);
		collection.add(161);
		collection.add(182);
		collection.add(114);
		collection.add(55);
		collection.add(12);
		collection.add(28);
		collection.add(137);
		collection.add(63);
		collection.add(50);
		collection.add(82);
		collection.add(175);
		collection.add(44);
		collection.add(88);
		collection.add(130);
		collection.add(131);
		collection.add(5);
		collection.add(52);
		collection.add(148);
		collection.add(14);
		collection.add(195);
		collection.add(127);
		collection.add(46);
		collection.add(136);
		collection.add(190);
		collection.add(23);
		collection.add(134);
		collection.add(112);
		collection.add(73);
		collection.add(184);
		collection.add(9);
		collection.add(19);
		collection.add(23);
		collection.add(45);
		collection.add(46);
		collection.add(85);
		collection.add(31);
		collection.add(6);
		collection.add(21);
		collection.add(17);
		collection.add(185);
		collection.add(15);
		collection.add(154);
		collection.add(130);
		collection.add(195);
		collection.add(38);
		collection.add(195);
		collection.add(41);
		collection.add(134);
		collection.add(44);
		collection.add(187);
		collection.add(92);
		collection.add(56);
		collection.add(76);
		collection.add(90);
		collection.add(142);
		collection.add(144);
		collection.add(62);
		collection.add(38);
		collection.add(52);
		collection.add(184);
		collection.add(13);
		collection.add(193);
		collection.add(27);
		collection.add(76);
		collection.add(72);
		collection.add(129);
		collection.add(20);
		collection.add(76);
		collection.add(123);
		collection.add(138);
		collection.add(143);
		collection.add(160);
		collection.add(195);
		collection.add(10);
		collection.add(125);
		collection.add(104);
		collection.add(136);
		collection.add(134);
		collection.add(116);
		collection.add(69);
		collection.add(194);
		collection.add(61);
		collection.add(145);
		collection.add(22);
		collection.add(137);
		collection.add(94);
		collection.add(83);
		collection.add(18);
		collection.add(11);
		collection.add(124);
		collection.add(161);
		collection.add(41);
		collection.add(141);
		collection.add(27);
		collection.add(136);
		collection.add(154);
		collection.add(193);
		collection.add(162);
		collection.add(18);
		collection.add(100);
		collection.add(61);
		collection.add(115);
		collection.add(100);
		collection.add(27);
		collection.add(194);
		collection.add(46);
		collection.add(15);
		collection.add(52);
		collection.add(78);
		collection.add(54);
		collection.add(77);
		collection.add(83);
		collection.add(140);
		collection.add(79);
		collection.add(28);
		collection.add(178);
		collection.add(19);
		collection.add(151);
		collection.add(33);
		collection.add(137);
		collection.add(153);
		collection.add(188);
		collection.add(40);
		collection.add(172);
		collection.add(10);
		collection.add(88);
		collection.add(91);
		collection.add(58);
		collection.add(167);
		collection.add(178);
		collection.add(76);
		collection.add(110);
		collection.add(6);
		collection.add(184);
		collection.add(87);
		collection.add(63);
		collection.add(115);
		collection.add(65);
		collection.add(85);
		collection.add(62);
		collection.add(157);
		collection.add(37);
		collection.add(26);
		collection.add(194);
		collection.add(30);
		collection.add(126);
		collection.add(172);
		collection.add(50);
		collection.add(43);
		collection.add(108);
		collection.add(57);
		collection.add(131);
		collection.add(155);
		collection.add(6);
		collection.add(137);
		collection.add(156);
		collection.add(124);
		collection.add(136);
		collection.add(5);
		collection.add(43);
		collection.add(169);
		collection.add(71);
		collection.add(40);
		collection.add(44);
		collection.add(100);
		collection.add(112);
		collection.add(95);
		collection.add(141);
		collection.add(184);
		collection.add(7);
		collection.add(61);
		collection.add(172);
		collection.add(54);
		collection.add(127);
		collection.add(108);
		collection.add(197);
		collection.add(40);
		collection.add(38);
		collection.add(136);
		collection.add(175);
		collection.add(11);
		collection.add(90);
		collection.add(161);
		collection.add(53);
		collection.add(161);
		collection.add(9);
		collection.add(173);
		collection.add(3);
		collection.add(8);
		collection.add(37);
		collection.add(83);
		collection.add(172);
		collection.add(99);
		collection.add(162);
		collection.add(64);
		collection.add(159);
		collection.add(114);
		collection.add(165);
		collection.add(43);
		collection.add(58);
		collection.add(25);
		collection.add(58);
		collection.add(149);
		collection.add(185);
		collection.add(170);
		collection.add(190);
		collection.add(85);
		collection.add(66);
		collection.add(140);
		collection.add(5);
		collection.add(59);
		collection.add(181);
		collection.add(48);
		collection.add(143);
		collection.add(58);
		collection.add(107);
		collection.add(54);
		collection.add(185);
		collection.add(87);
		collection.add(77);
		collection.add(119);
		collection.add(53);
		collection.add(10);
		collection.add(78);
		collection.add(116);
		collection.add(24);
		collection.add(53);
		collection.add(82);
		collection.add(58);
		collection.add(25);
		collection.add(184);
		collection.add(29);
		collection.add(14);
		collection.add(27);
		collection.add(134);
		collection.add(35);
		collection.add(153);
		collection.add(1);
		collection.add(93);
		collection.add(165);
		collection.add(71);
		collection.add(161);
		collection.add(43);
		collection.add(39);
		collection.add(171);
		collection.add(3);
		collection.add(178);
		collection.add(67);
		collection.add(123);
		collection.add(24);
		collection.add(155);
		collection.add(95);
		collection.add(188);
		collection.add(105);
		collection.add(147);
		collection.add(84);
		collection.add(7);
		collection.add(130);
		collection.add(135);
		collection.add(25);
		collection.add(26);
		collection.add(181);
		collection.add(165);
		collection.add(21);
		collection.add(140);
		collection.add(48);
		collection.add(59);
		collection.add(102);
		collection.add(85);
		collection.add(138);
		collection.add(136);
		collection.add(75);
		collection.add(127);
		collection.add(39);
		collection.add(26);
		collection.add(68);
		collection.add(162);
		collection.add(32);
		collection.add(147);
		collection.add(128);
		collection.add(184);
		collection.add(46);
		collection.add(41);
		collection.add(150);
		collection.add(79);
		collection.add(113);
		collection.add(168);
		collection.add(121);
		collection.add(160);
		collection.add(157);
		collection.add(108);
		collection.add(149);
		collection.add(149);
		collection.add(148);
		collection.add(104);
		collection.add(160);
		collection.add(110);
		collection.add(18);
		collection.add(110);
		collection.add(111);
		collection.add(159);
		collection.add(127);
		collection.add(42);
		collection.add(60);
		collection.add(170);
		collection.add(82);
		collection.add(138);
		collection.add(28);
		collection.add(89);
		collection.add(55);
		collection.add(198);
		collection.add(44);
		collection.add(174);
		collection.add(120);
		collection.add(117);
		collection.add(79);
		collection.add(66);
		collection.add(70);
		collection.add(32);
		collection.add(81);
		collection.add(185);
		collection.add(44);
		collection.add(35);
		collection.add(88);
		collection.add(67);
		collection.add(93);
		collection.add(72);
		collection.add(180);
		collection.add(32);
		collection.add(116);
		collection.add(61);
		collection.add(104);
		collection.add(180);
		collection.add(166);
		collection.add(30);
		collection.add(75);
		collection.add(21);
		collection.add(37);
		collection.add(59);
		collection.add(188);
		collection.add(39);
		collection.add(158);
		collection.add(38);
		collection.add(59);
		collection.add(185);
		collection.add(100);
		collection.add(149);
		collection.add(16);
		collection.add(49);
		collection.add(167);
		collection.add(6);
		collection.add(98);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=3)
	@Measurement(time=3,iterations=10)
	public void JHashSet(Blackhole bh) {
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(25,148,153,29,147,199,23)));
		bh.consume(collection.add(142));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(175,59,20,34,95,30,61,65)));
		bh.consume(collection.add(134));
		bh.consume(collection.add(145));
		bh.consume(collection.addAll(java.util.Arrays.asList(5,14,133,120)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(172,179,167,9,50,141,21)));
		collection.toArray(new Integer[] {71,159,35,4,180,195,140,4});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(104,162,89)));
		bh.consume(collection.addAll(java.util.Arrays.asList(133,179,149,96,128,198)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(167,103,173,196,142,192,9)));
		collection.toArray(new Integer[] {56,61,118,142,60,51,36,60,164});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(159,21,147,6,49,143,10,119,122)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(24,71,109)));
		bh.consume(collection.addAll(java.util.Arrays.asList(45,132,115,86,38)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(115,151,187,76,196,78,102)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(23,176,102,120,2,14,58,49)));
		bh.consume(collection.add(139));
		bh.consume(collection.add(123));
		bh.consume(collection.add(145));
		bh.consume(collection.addAll(java.util.Arrays.asList(176,186,184,182,171,158,162)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(59,145,102,125,107,24)));
		collection.toArray(new Integer[] {16,35,15,89,24,123,158});
		bh.consume(collection.add(125));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(141,82,38)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(7,2,18,153,199,131)));
		bh.consume(collection.add(164));
		bh.consume(collection.addAll(java.util.Arrays.asList(136,183,162,5,66,119)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(137,20,18,106,39,138,186,181,131)));
		collection.toArray(new Integer[] {87,146,179,150});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(186,164,177,133)));
		bh.consume(collection.remove(118));
		bh.consume(collection.contains(30));
		collection.toArray(new Integer[] {48,100,102,20,17,138,117,123});
		bh.consume(collection.remove(1));
		bh.consume(collection.add(186));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(194,33,26,22,33)));
		bh.consume(collection.add(122));
		bh.consume(collection.add(169));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(190,143,6,7,78,47,77,183)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(48,31,91,37)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(199,145,71,7,38,188,44,121,102)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(20,100,28)));
		bh.consume(collection.contains(178));
		bh.consume(collection.add(141));
		bh.consume(collection.add(16));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(93,151,178,182)));
		collection.toArray(new Integer[] {184,30,19,171,86,170,159});
		bh.consume(collection.add(48));
		bh.consume(collection.remove(152));
		bh.consume(collection.add(146));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(73,65,124,194,101,148,77,191,22)));
		bh.consume(collection.addAll(java.util.Arrays.asList(136,156,16,57,117,87,191,76)));
		bh.consume(collection.add(23));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(124,195,71,4)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(176,159,53,103,123,90,153)));
		bh.consume(collection.remove(147));
		collection.toArray(new Integer[] {130,122,64,152,37,133,40});
		bh.consume(collection.add(186));
		bh.consume(collection.remove(63));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(6,78,22,166,79)));
		bh.consume(collection.addAll(java.util.Arrays.asList(140,16,93,89,99,141,185,141)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(115,85,37,143,79,190,140)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(170,156,150,156,131,77,150,187)));
		bh.consume(collection.add(92));
		bh.consume(collection.addAll(java.util.Arrays.asList(51,94,72,166,125,155)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(31,157,42)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(37,61,24,90,139)));
		collection.toArray(new Integer[] {35,97,188,52,166,106});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(35,64,28,133,169,10,166)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(183,138,70,139,197)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(107,63,115,19,23,9,88,81)));
		bh.consume(collection.contains(137));
		bh.consume(collection.add(110));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(107,99,158,89,126,134,79,45,107)));
		bh.consume(collection.add(192));
		bh.consume(collection.add(134));
		bh.consume(collection.remove(174));
		bh.consume(collection.remove(178));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(188,64,66,27)));
		bh.consume(collection.add(11));
		bh.consume(collection.addAll(java.util.Arrays.asList(39,197,30,30,198)));
		bh.consume(collection.add(146));
		collection.toArray(new Integer[] {147,40,33,186});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(111,184,55,193,64)));
		bh.consume(collection.remove(36));
		bh.consume(collection.remove(63));
		bh.consume(collection.add(63));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(199,39,78,62)));
		bh.consume(collection.remove(196));
		bh.consume(collection.add(77));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(149,21,138,123,194,130,155,57,126)));
		collection.toArray(new Integer[] {27,10,87,71,176,23});
		bh.consume(collection.add(107));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(29,109,153,62)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(91,105,183,134,125,41)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(54,72,113,150,138,51,187,170,130)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(55,24,104,76,140,47)));
		bh.consume(collection.add(96));
		bh.consume(collection.add(8));
		bh.consume(collection.addAll(java.util.Arrays.asList(126,192,145,65,111,184,157,185)));
		bh.consume(collection.remove(198));
		bh.consume(collection.remove(112));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(113,71,78,168,49)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(140,157,128,80)));
		bh.consume(collection.add(97));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(96,146,20)));
		collection.toArray(new Integer[] {95,89,151,55,14,45,70,1});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(153,90,40,184)));
		bh.consume(collection.remove(16));
		bh.consume(collection.contains(28));
		bh.consume(collection.add(188));
		bh.consume(collection.add(86));
		bh.consume(collection.add(55));
		bh.consume(collection.add(111));
		collection.toArray(new Integer[] {169,102,103,166,116,193});
		bh.consume(collection.addAll(java.util.Arrays.asList(120,31,29,194,36,117,186,114,170)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(105,170,20,96)));
		bh.consume(collection.addAll(java.util.Arrays.asList(152,29,148,85,120,112)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(9,98,55)));
		bh.consume(collection.remove(17));
		bh.consume(collection.addAll(java.util.Arrays.asList(75,62,106)));
		bh.consume(collection.addAll(java.util.Arrays.asList(12,85,55)));
		bh.consume(collection.add(65));
		collection.toArray(new Integer[] {33,45,183,145});
		bh.consume(collection.add(178));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(127,170,74,88)));
		bh.consume(collection.add(59));
		bh.consume(collection.remove(156));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(178,24,11,90,98,82)));
		bh.consume(collection.add(48));
		collection.toArray(new Integer[] {138,81,120,51,143,120,180,196,174});
		bh.consume(collection.add(190));
		bh.consume(collection.add(85));
		bh.consume(collection.add(154));
		bh.consume(collection.contains(19));
		bh.consume(collection.remove(132));
		bh.consume(collection.add(71));
		bh.consume(collection.add(16));
		bh.consume(collection.addAll(java.util.Arrays.asList(82,2,96)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(42,128,178)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(192,107,180)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(86,40,87,87,138,26,170)));
		bh.consume(collection.add(125));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(118,114,106,163,117)));
		bh.consume(collection.add(181));
		bh.consume(collection.addAll(java.util.Arrays.asList(19,63,22,65)));
		collection.toArray(new Integer[] {18,135,57});
		bh.consume(collection.addAll(java.util.Arrays.asList(181,162,17,179,8,130)));
		bh.consume(collection.add(70));
		bh.consume(collection.addAll(java.util.Arrays.asList(193,76,13,169,26,110,23)));
		bh.consume(collection.addAll(java.util.Arrays.asList(22,31,112,13,63,68)));
		bh.consume(collection.addAll(java.util.Arrays.asList(61,166,113,19,141,183)));
		bh.consume(collection.add(84));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(155,53,4)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(9,132,24,46,132,84,183,132,23)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(30,186,3)));
		bh.consume(collection.add(189));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(197,18,28,13)));
		bh.consume(collection.contains(17));
		bh.consume(collection.addAll(java.util.Arrays.asList(177,78,163,169,57,113,150,178,166)));
		bh.consume(collection.addAll(java.util.Arrays.asList(194,63,6,162)));
		bh.consume(collection.add(69));
		collection.toArray(new Integer[] {166,197,133,84,57,159,6});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(54,121,113,111,90,62,41,172,101)));
		bh.consume(collection.addAll(java.util.Arrays.asList(110,152,9,58)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(123,18,58,101,131,118)));
		bh.consume(collection.contains(155));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(75,183,135,21,72,182,112)));
		bh.consume(collection.addAll(java.util.Arrays.asList(138,68,72,106)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(153,152,76,135)));
		bh.consume(collection.add(116));
		bh.consume(collection.addAll(java.util.Arrays.asList(142,40,99,26,71,168,98,6,21)));
		bh.consume(collection.remove(128));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(39,184,105,45,104,32)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(72,35,50,52,10,29,25,193,121)));
		bh.consume(collection.add(72));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(192,151,34,30,55,172)));
		bh.consume(collection.addAll(java.util.Arrays.asList(25,94,166,49)));
		bh.consume(collection.addAll(java.util.Arrays.asList(40,98,105,20,66,193,72)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(32,148,120,77)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(177,18,94,26,30,76,32,120)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(25,69,161,66)));
		bh.consume(collection.addAll(java.util.Arrays.asList(91,193,63,77,177,183,136,166,79)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(84,121,82,174,166,76,127,127,172)));
		bh.consume(collection.addAll(java.util.Arrays.asList(168,106,80,126)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(82,30,34,80)));
		bh.consume(collection.add(172));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(115,10,31)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(34,39,153,25,64,137)));
		bh.consume(collection.add(151));
		bh.consume(collection.add(64));
		bh.consume(collection.add(149));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(46,188,13,19)));
		bh.consume(collection.addAll(java.util.Arrays.asList(93,32,136,189,60,55,184)));
		bh.consume(collection.add(5));
		bh.consume(collection.addAll(java.util.Arrays.asList(62,189,54,116,64,115,115)));
		bh.consume(collection.add(5));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(66,154,120,171,171,174,71,44)));
		bh.consume(collection.remove(155));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(126,138,57,151,185)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(183,60,98,38,162,114,161,128)));
		bh.consume(collection.remove(175));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(185,6,76,18,193,175,7,76,26)));
		bh.consume(collection.remove(56));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(186,197,145,26,25,64,14,72)));
		collection.toArray(new Integer[] {168,57,6,19,148,36});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(96,134,168,136,152,61,52,63,71)));
		bh.consume(collection.add(81));
		bh.consume(collection.add(130));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(115,41,143)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(109,194,133,49,43,86)));
		bh.consume(collection.add(156));
		collection.toArray(new Integer[] {37,138,80,134,164});
		bh.consume(collection.add(1));
		bh.consume(collection.add(95));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(114,83,186)));
		bh.consume(collection.addAll(java.util.Arrays.asList(158,67,193,51)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(83,34,170,50,65,6)));
		bh.consume(collection.addAll(java.util.Arrays.asList(198,30,82,13,118,72,17)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(107,110,134,47,48,90)));
		bh.consume(collection.add(123));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(111,81,169,62,176)));
		bh.consume(collection.contains(14));
		collection.toArray(new Integer[] {102,18,98,43,105,67});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(150,12,106,197,176,144,186,74,51)));
		collection.toArray(new Integer[] {34,23,19,63,85,47,173,118,68});
		bh.consume(collection.add(82));
		collection.toArray(new Integer[] {124,19,122,136,33,194});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(90,37,140,66)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(182,40,155,33,83,51,33,45,150)));
		collection.toArray(new Integer[] {82,188,155,97,44});
		collection.toArray(new Integer[] {51,157,96,7,160,89,104,191});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(119,88,197,155,163,162,134,185,43)));
		bh.consume(collection.add(58));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(198,163,107,137,95,13,161,23)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(164,173,181,17,172,39,48,39,184)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(184,30,73,140,153,107,121,100)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(186,31,125,190,76,146)));
		bh.consume(collection.add(128));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(45,15,63,151,168,73,154,93)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(25,156,176,102,88,86)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(78,185,107,163,186,10,157,104,167)));
		bh.consume(collection.add(59));
		bh.consume(collection.addAll(java.util.Arrays.asList(109,37,89,37,168,192,29,166)));
		collection.toArray(new Integer[] {31,178,83,106,56,195,171,194,6});
		collection.toArray(new Integer[] {101,167,94,52,86,58});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(100,182,179,114,100,84,84,13)));
		bh.consume(collection.addAll(java.util.Arrays.asList(12,89,11)));
		bh.consume(collection.addAll(java.util.Arrays.asList(70,53,144,182,74,167)));
		bh.consume(collection.remove(35));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(15,163,27,38,78,156)));
		bh.consume(collection.addAll(java.util.Arrays.asList(158,40,162,120,118,10,90,26)));
		bh.consume(collection.add(83));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(55,73,158,166,146)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(111,191,152,68)));
		bh.consume(collection.addAll(java.util.Arrays.asList(105,83,167,66,81)));
		bh.consume(collection.add(175));
		bh.consume(collection.addAll(java.util.Arrays.asList(122,84,143,176,94)));
		bh.consume(collection.addAll(java.util.Arrays.asList(41,79,94,59,127,16,132,49,35)));
		bh.consume(collection.remove(121));
		bh.consume(collection.add(117));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(25,69,192)));
		bh.consume(collection.addAll(java.util.Arrays.asList(18,141,43,149,41,141,69)));
		bh.consume(collection.addAll(java.util.Arrays.asList(7,176,132,90,190,48,119,50)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(125,158,15,198,77)));
		bh.consume(collection.addAll(java.util.Arrays.asList(68,149,122)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(159,24,18,132,49)));
		collection.toArray(new Integer[] {44,91,170,123,197,40});
		collection.toArray(new Integer[] {118,4,71,14,49,96,3,50});
		bh.consume(collection.add(171));
		bh.consume(collection.add(105));
		bh.consume(collection.add(16));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(97,196,138,136,185,107,70,154,177)));
		bh.consume(collection.remove(17));
		collection.toArray(new Integer[] {122,133,164,145,199,191});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(115,141,17,71,18)));
		collection.toArray(new Integer[] {47,91,196,63,1,21,48});
		bh.consume(collection.addAll(java.util.Arrays.asList(5,120,181,155,52)));
		bh.consume(collection.add(48));
		collection.toArray(new Integer[] {15,32,89,22,33,55});
		bh.consume(collection.add(4));
		collection.toArray(new Integer[] {9,160,178,70});
		collection.toArray(new Integer[] {165,133,134,100});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(127,102,187)));
		bh.consume(collection.remove(29));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(88,133,17,54,125,5,122)));
		bh.consume(collection.add(56));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(128,188,139)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(146,119,94)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(181,69,186,75,165,50,150)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(161,186,108)));
		bh.consume(collection.addAll(java.util.Arrays.asList(199,59,186,189,51,166,90,37)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(30,90,162,149,76,153,159,38,48)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(92,53,76,190,71,77)));
		bh.consume(collection.addAll(java.util.Arrays.asList(116,28,17,94,118,76,182,126)));
		bh.consume(collection.addAll(java.util.Arrays.asList(120,45,119,76)));
		bh.consume(collection.add(136));
		bh.consume(collection.addAll(java.util.Arrays.asList(64,36,178,147,60,101,114,80,48)));
		bh.consume(collection.add(1));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(149,75,52,172,94)));
		bh.consume(collection.add(146));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(71,142,118,109,150,178)));
		bh.consume(collection.add(29));
		bh.consume(collection.add(144));
		bh.consume(collection.addAll(java.util.Arrays.asList(64,110,173)));
		bh.consume(collection.addAll(java.util.Arrays.asList(80,118,82)));
		bh.consume(collection.addAll(java.util.Arrays.asList(43,146,85,82,112)));
		bh.consume(collection.add(152));
		bh.consume(collection.add(56));
		bh.consume(collection.add(103));
		bh.consume(collection.add(12));
		collection.toArray(new Integer[] {3,182,165,181,51,85,168,56,19});
		bh.consume(collection.remove(72));
		bh.consume(collection.add(101));
		bh.consume(collection.addAll(java.util.Arrays.asList(192,152,121,55,133,155,183)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(116,63,185,7,186,104)));
		bh.consume(collection.add(102));
		bh.consume(collection.add(46));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(35,56,150,167,171,85,190)));
		bh.consume(collection.remove(158));
		collection.toArray(new Integer[] {167,41,97,94,159,40,127,81,82});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(135,191,174,180,100,48,118)));
		bh.consume(collection.add(15));
		bh.consume(collection.add(155));
		bh.consume(collection.add(27));
		collection.toArray(new Integer[] {198,65,44,87,47,32,99,124});
		bh.consume(collection.add(174));
		bh.consume(collection.addAll(java.util.Arrays.asList(103,26,20,49,20,188,99)));
		bh.consume(collection.addAll(java.util.Arrays.asList(162,51,192,25,3,171)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(16,163,6,119,69)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(156,77,127,33,180,50)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(196,32,18,77,129,81,128,94,35)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(65,14,178,7,171)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(99,141,167,157,120,19,117)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(134,33,113)));
		collection.toArray(new Integer[] {39,54,27,147});
		bh.consume(collection.addAll(java.util.Arrays.asList(72,6,150)));
		bh.consume(collection.add(158));
		bh.consume(collection.remove(147));
		bh.consume(collection.remove(84));
		collection.toArray(new Integer[] {131,187,30,62,188,74,193});
		collection.toArray(new Integer[] {129,60,144});
		collection.toArray(new Integer[] {17,186,24,153,171,63});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(6,105,72,83)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(106,126,154,18,78,51)));
		collection.toArray(new Integer[] {47,182,178,45,193});
		bh.consume(collection.add(66));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(176,133,62,180)));
		bh.consume(collection.addAll(java.util.Arrays.asList(145,164,65,193,150,164,179)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(156,179,163,190,49,32)));
		bh.consume(collection.add(104));
		bh.consume(collection.addAll(java.util.Arrays.asList(196,160,150,127,115,40,89,147)));
		collection.toArray(new Integer[] {14,79,142,6,5,110});
		bh.consume(collection.addAll(java.util.Arrays.asList(146,183,53,24,172,91)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(118,179,1,13,187,5,103,75)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(109,184,129)));
		bh.consume(collection.remove(50));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(126,166,31,24,70,191,13)));
		bh.consume(collection.remove(154));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(45,54,143)));
		bh.consume(collection.remove(42));
		bh.consume(collection.add(27));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(110,195,156)));
		bh.consume(collection.addAll(java.util.Arrays.asList(197,13,119,138,66,91,26,84)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(85,119,61,4)));
		collection.toArray(new Integer[] {138,51,55,141,78});
		bh.consume(collection.addAll(java.util.Arrays.asList(29,183,162,14,84)));
		collection.toArray(new Integer[] {18,145,86});
		bh.consume(collection.add(95));
		bh.consume(collection.add(22));
		bh.consume(collection.remove(193));
		collection.toArray(new Integer[] {30,59,141,187,26,12});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(188,50,86,56,168,37)));
		collection.toArray(new Integer[] {61,104,125,157});
		collection.toArray(new Integer[] {140,61,61,192,18});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(187,165,144)));
		bh.consume(collection.add(80));
		collection.toArray(new Integer[] {32,134,44,113});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(5,46,133,1,122,165,108)));
		bh.consume(collection.addAll(java.util.Arrays.asList(139,77,159,45,161,51,105,142)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(121,191,192,94)));
		collection.toArray(new Integer[] {82,114,87,148,41,106,81});
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(77,102,65)));
		bh.consume(collection.add(91));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(147,10,43,18,12,6,52,44,165)));
		collection.toArray(new Integer[] {80,97,75,38,55});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(197,51,12)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(102,63,115,147)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(131,176,170,155,191,185)));
		bh.consume(collection.remove(158));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(173,198,165,145,99,100,79,197,8)));
		bh.consume(collection.addAll(java.util.Arrays.asList(140,104,61,186,7,120)));
		bh.consume(collection.add(139));
		bh.consume(collection.addAll(java.util.Arrays.asList(15,35,81,174,94,80,74,62,22)));
		bh.consume(collection.add(3));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(196,77,106,101,102,104,93,174)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(180,30,40,40,146,43,199,157,193)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(58,69,192,10)));
		bh.consume(collection.addAll(java.util.Arrays.asList(125,21,78,59,97,135,163,50,28)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(123,17,131,94,100,116,3,182)));
		bh.consume(collection.add(147));
		bh.consume(collection.add(124));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(86,178,119)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(37,111,40,193,36,97)));
		bh.consume(collection.add(172));
		bh.consume(collection.add(71));
		bh.consume(collection.add(126));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(190,38,135,53,37,165)));
		bh.consume(collection.addAll(java.util.Arrays.asList(136,118,67,183,57,195,108)));
		bh.consume(collection.add(57));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(132,134,91,110,198,92,67)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(30,65,167,151,105,18,129,37)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(62,58,125,173,143,98,22,31,157)));
		bh.consume(collection.add(131));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(52,141,13,133,153,163,44)));
		bh.consume(collection.addAll(java.util.Arrays.asList(29,114,8,25,12,49,172)));
		bh.consume(collection.add(167));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(187,83,11,49,103)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(157,91,39,98,49)));
		bh.consume(collection.add(1));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(65,88,5,136,32,192)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(98,27,64,99,80,78)));
		bh.consume(collection.add(90));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(97,6,82,171,75,2,51,131)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(30,157,60,74,136,42,192,9)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(158,194,11,165,163,82,59)));
		bh.consume(collection.add(146));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(71,180,68,72,108,25,127,22,112)));
		bh.consume(collection.add(72));
		bh.consume(collection.addAll(java.util.Arrays.asList(19,146,83,157,185,134,68)));
		bh.consume(collection.add(80));
		bh.consume(collection.addAll(java.util.Arrays.asList(85,174,86,73,48,70,78,161,51)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(134,119,36,134,100,132,41,95)));
		bh.consume(collection.add(117));
		bh.consume(collection.add(151));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(67,130,167,63,115,153,39)));
		bh.consume(collection.remove(114));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(50,185,26,80,73,72,112)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(140,74,41,88,13,13)));
		collection.toArray(new Integer[] {82,71,69,174});
		bh.consume(collection.add(176));
		bh.consume(collection.addAll(java.util.Arrays.asList(175,17,195,83,170,52,81,99)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(178,68,141,193)));
		bh.consume(collection.add(10));
		bh.consume(collection.add(120));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(48,140,168,22,154,60,120,73,26)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(99,76,59,27)));
		bh.consume(collection.addAll(java.util.Arrays.asList(9,126,186,153,170)));
		bh.consume(collection.addAll(java.util.Arrays.asList(4,73,44,108,134,110)));
		bh.consume(collection.add(30));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(54,33,143,85,34,175,60,107)));
		bh.consume(collection.add(32));
		collection.toArray(new Integer[] {38,183,51,120,89,21,42,191,5});
		collection.toArray(new Integer[] {123,138,129,160,113});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(123,120,174,161)));
		bh.consume(collection.addAll(java.util.Arrays.asList(163,79,76)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(190,57,159,181)));
		bh.consume(collection.add(19));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(161,136,143,109,163,87,163,144,114)));
		collection.toArray(new Integer[] {142,92,131,72,11,110,145,95});
		bh.consume(collection.addAll(java.util.Arrays.asList(151,115,34,172,162,177)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(163,186,32,122)));
		bh.consume(collection.add(84));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(43,129,159,44,108,199,161,186)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(37,168,39,36,180,35,167,33)));
		bh.consume(collection.remove(15));
		bh.consume(collection.add(85));
		bh.consume(collection.addAll(java.util.Arrays.asList(159,125,100,80)));
		bh.consume(collection.add(173));
		collection.toArray(new Integer[] {12,86,129,30,97,99});
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(95,86,63,136,79,193,120,112)));
		bh.consume(collection.addAll(java.util.Arrays.asList(162,74,28,134)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(43,33,180,83)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(197,157,100,17,91)));
		bh.consume(collection.add(178));
		bh.consume(collection.addAll(java.util.Arrays.asList(4,166,23,92,163)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(168,3,182,136,74,63,164)));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(23,164,127)));
		bh.consume(collection.addAll(java.util.Arrays.asList(44,18,28,54,130,120,56,105)));
		bh.consume(collection.add(39));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(128,62,21,188,3,36,154,91,168)));
		bh.consume(collection.add(191));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(76,158,161,186,185,146)));
		bh.consume(collection.addAll(java.util.Arrays.asList(165,112,74,19,27)));
		bh.consume(collection.add(154));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(39,76,37,180,59,165,164,67)));
		bh.consume(collection.add(163));
		bh.consume(collection.add(96));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(111,154,182)));
		bh.consume(collection.addAll(java.util.Arrays.asList(98,133,183,173,14)));
		collection.toArray(new Integer[] {41,58,49,152,58,178,63,108});
		bh.consume(collection.add(139));
		collection.removeAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(186,164,46,144,196,57,173,12,131)));
		bh.consume(collection.add(80));
		bh.consume(collection.addAll(java.util.Arrays.asList(97,59,135,22,96,195,149,180)));
		collection.addAll(new java.util.HashSet<Integer>(java.util.Arrays.asList(151,17,116,63,113,146,128)));
		bh.consume(collection.addAll(java.util.Arrays.asList(49,148,169)));
		bh.consume(collection.add(188));
		bh.consume(collection.addAll(java.util.Arrays.asList(20,118,134,169)));
	}
}
