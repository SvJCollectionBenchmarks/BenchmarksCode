package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile2AllSequences_JArraySequence_20220501200409027 {
	java.util.ArrayList<Double> collection = new java.util.ArrayList<>();
	@Setup(Level.Invocation)
	public void setupJArraySequence() {
		collection = new java.util.ArrayList<>();
		collection.add(3.0);
		collection.add(102.0);
		collection.add(183.0);
		collection.add(9.0);
		collection.add(118.0);
		collection.add(100.0);
		collection.add(157.0);
		collection.add(46.0);
		collection.add(106.0);
		collection.add(23.0);
		collection.add(106.0);
		collection.add(48.0);
		collection.add(94.0);
		collection.add(13.0);
		collection.add(34.0);
		collection.add(115.0);
		collection.add(1.0);
		collection.add(45.0);
		collection.add(198.0);
		collection.add(38.0);
		collection.add(25.0);
		collection.add(12.0);
		collection.add(179.0);
		collection.add(141.0);
		collection.add(161.0);
		collection.add(161.0);
		collection.add(155.0);
		collection.add(7.0);
		collection.add(115.0);
		collection.add(35.0);
		collection.add(57.0);
		collection.add(194.0);
		collection.add(62.0);
		collection.add(44.0);
		collection.add(164.0);
		collection.add(126.0);
		collection.add(134.0);
		collection.add(147.0);
		collection.add(104.0);
		collection.add(122.0);
		collection.add(82.0);
		collection.add(137.0);
		collection.add(63.0);
		collection.add(172.0);
		collection.add(37.0);
		collection.add(181.0);
		collection.add(117.0);
		collection.add(116.0);
		collection.add(36.0);
		collection.add(140.0);
		collection.add(53.0);
		collection.add(150.0);
		collection.add(153.0);
		collection.add(184.0);
		collection.add(68.0);
		collection.add(143.0);
		collection.add(187.0);
		collection.add(154.0);
		collection.add(176.0);
		collection.add(95.0);
		collection.add(184.0);
		collection.add(37.0);
		collection.add(44.0);
		collection.add(192.0);
		collection.add(113.0);
		collection.add(193.0);
		collection.add(66.0);
		collection.add(136.0);
		collection.add(71.0);
		collection.add(91.0);
		collection.add(140.0);
		collection.add(41.0);
		collection.add(200.0);
		collection.add(114.0);
		collection.add(169.0);
		collection.add(17.0);
		collection.add(109.0);
		collection.add(188.0);
		collection.add(156.0);
		collection.add(176.0);
		collection.add(136.0);
		collection.add(48.0);
		collection.add(99.0);
		collection.add(43.0);
		collection.add(93.0);
		collection.add(163.0);
		collection.add(145.0);
		collection.add(63.0);
		collection.add(69.0);
		collection.add(178.0);
		collection.add(115.0);
		collection.add(126.0);
		collection.add(100.0);
		collection.add(127.0);
		collection.add(86.0);
		collection.add(83.0);
		collection.add(51.0);
		collection.add(76.0);
		collection.add(168.0);
		collection.add(102.0);
		collection.add(177.0);
		collection.add(13.0);
		collection.add(39.0);
		collection.add(146.0);
		collection.add(99.0);
		collection.add(101.0);
		collection.add(162.0);
		collection.add(105.0);
		collection.add(85.0);
		collection.add(51.0);
		collection.add(75.0);
		collection.add(102.0);
		collection.add(196.0);
		collection.add(93.0);
		collection.add(107.0);
		collection.add(15.0);
		collection.add(111.0);
		collection.add(9.0);
		collection.add(113.0);
		collection.add(4.0);
		collection.add(84.0);
		collection.add(144.0);
		collection.add(71.0);
		collection.add(11.0);
		collection.add(55.0);
		collection.add(100.0);
		collection.add(58.0);
		collection.add(120.0);
		collection.add(10.0);
		collection.add(139.0);
		collection.add(168.0);
		collection.add(65.0);
		collection.add(199.0);
		collection.add(191.0);
		collection.add(45.0);
		collection.add(85.0);
		collection.add(104.0);
		collection.add(140.0);
		collection.add(127.0);
		collection.add(96.0);
		collection.add(134.0);
		collection.add(195.0);
		collection.add(132.0);
		collection.add(173.0);
		collection.add(25.0);
		collection.add(76.0);
		collection.add(146.0);
		collection.add(163.0);
		collection.add(38.0);
		collection.add(185.0);
		collection.add(99.0);
		collection.add(85.0);
		collection.add(36.0);
		collection.add(53.0);
		collection.add(141.0);
		collection.add(5.0);
		collection.add(105.0);
		collection.add(177.0);
		collection.add(114.0);
		collection.add(136.0);
		collection.add(76.0);
		collection.add(138.0);
		collection.add(41.0);
		collection.add(144.0);
		collection.add(115.0);
		collection.add(120.0);
		collection.add(182.0);
		collection.add(44.0);
		collection.add(130.0);
		collection.add(200.0);
		collection.add(188.0);
		collection.add(118.0);
		collection.add(18.0);
		collection.add(105.0);
		collection.add(127.0);
		collection.add(144.0);
		collection.add(191.0);
		collection.add(85.0);
		collection.add(142.0);
		collection.add(4.0);
		collection.add(82.0);
		collection.add(161.0);
		collection.add(160.0);
		collection.add(58.0);
		collection.add(143.0);
		collection.add(200.0);
		collection.add(76.0);
		collection.add(37.0);
		collection.add(110.0);
		collection.add(110.0);
		collection.add(188.0);
		collection.add(86.0);
		collection.add(49.0);
		collection.add(81.0);
		collection.add(165.0);
		collection.add(183.0);
		collection.add(73.0);
		collection.add(103.0);
		collection.add(48.0);
		collection.add(142.0);
		collection.add(160.0);
		collection.add(188.0);
		collection.add(189.0);
		collection.add(73.0);
		collection.add(82.0);
		collection.add(117.0);
		collection.add(123.0);
		collection.add(67.0);
		collection.add(82.0);
		collection.add(57.0);
		collection.add(196.0);
		collection.add(46.0);
		collection.add(108.0);
		collection.add(114.0);
		collection.add(109.0);
		collection.add(61.0);
		collection.add(100.0);
		collection.add(159.0);
		collection.add(123.0);
		collection.add(4.0);
		collection.add(74.0);
		collection.add(26.0);
		collection.add(181.0);
		collection.add(187.0);
		collection.add(40.0);
		collection.add(154.0);
		collection.add(44.0);
		collection.add(70.0);
		collection.add(91.0);
		collection.add(21.0);
		collection.add(68.0);
		collection.add(79.0);
		collection.add(177.0);
		collection.add(62.0);
		collection.add(165.0);
		collection.add(19.0);
		collection.add(156.0);
		collection.add(102.0);
		collection.add(6.0);
		collection.add(123.0);
		collection.add(44.0);
		collection.add(62.0);
		collection.add(190.0);
		collection.add(75.0);
		collection.add(169.0);
		collection.add(161.0);
		collection.add(176.0);
		collection.add(29.0);
		collection.add(125.0);
		collection.add(117.0);
		collection.add(131.0);
		collection.add(127.0);
		collection.add(11.0);
		collection.add(192.0);
		collection.add(27.0);
		collection.add(169.0);
		collection.add(173.0);
		collection.add(148.0);
		collection.add(14.0);
		collection.add(60.0);
		collection.add(126.0);
		collection.add(10.0);
		collection.add(16.0);
		collection.add(30.0);
		collection.add(175.0);
		collection.add(52.0);
		collection.add(135.0);
		collection.add(2.0);
		collection.add(129.0);
		collection.add(138.0);
		collection.add(156.0);
		collection.add(26.0);
		collection.add(181.0);
		collection.add(87.0);
		collection.add(191.0);
		collection.add(177.0);
		collection.add(95.0);
		collection.add(25.0);
		collection.add(64.0);
		collection.add(64.0);
		collection.add(156.0);
		collection.add(105.0);
		collection.add(32.0);
		collection.add(58.0);
		collection.add(155.0);
		collection.add(31.0);
		collection.add(166.0);
		collection.add(27.0);
		collection.add(69.0);
		collection.add(184.0);
		collection.add(82.0);
		collection.add(82.0);
		collection.add(94.0);
		collection.add(33.0);
		collection.add(200.0);
		collection.add(152.0);
		collection.add(101.0);
		collection.add(156.0);
		collection.add(26.0);
		collection.add(72.0);
		collection.add(43.0);
		collection.add(105.0);
		collection.add(180.0);
		collection.add(105.0);
		collection.add(100.0);
		collection.add(145.0);
		collection.add(62.0);
		collection.add(98.0);
		collection.add(109.0);
		collection.add(13.0);
		collection.add(92.0);
		collection.add(133.0);
		collection.add(122.0);
		collection.add(55.0);
		collection.add(179.0);
		collection.add(92.0);
		collection.add(63.0);
		collection.add(72.0);
		collection.add(58.0);
		collection.add(149.0);
		collection.add(142.0);
		collection.add(26.0);
		collection.add(190.0);
		collection.add(74.0);
		collection.add(138.0);
		collection.add(1.0);
		collection.add(174.0);
		collection.add(84.0);
		collection.add(173.0);
		collection.add(156.0);
		collection.add(70.0);
		collection.add(31.0);
		collection.add(27.0);
		collection.add(59.0);
		collection.add(103.0);
		collection.add(78.0);
		collection.add(172.0);
		collection.add(48.0);
		collection.add(131.0);
		collection.add(20.0);
		collection.add(192.0);
		collection.add(169.0);
		collection.add(200.0);
		collection.add(52.0);
		collection.add(147.0);
		collection.add(98.0);
		collection.add(8.0);
		collection.add(187.0);
		collection.add(151.0);
		collection.add(162.0);
		collection.add(198.0);
		collection.add(153.0);
		collection.add(72.0);
		collection.add(67.0);
		collection.add(138.0);
		collection.add(1.0);
		collection.add(4.0);
		collection.add(69.0);
		collection.add(108.0);
		collection.add(122.0);
		collection.add(191.0);
		collection.add(17.0);
		collection.add(134.0);
		collection.add(76.0);
		collection.add(19.0);
		collection.add(194.0);
		collection.add(63.0);
		collection.add(151.0);
		collection.add(31.0);
		collection.add(28.0);
		collection.add(156.0);
		collection.add(143.0);
		collection.add(14.0);
		collection.add(93.0);
		collection.add(94.0);
		collection.add(102.0);
		collection.add(85.0);
		collection.add(56.0);
		collection.add(33.0);
		collection.add(4.0);
		collection.add(198.0);
		collection.add(103.0);
		collection.add(176.0);
		collection.add(35.0);
		collection.add(79.0);
		collection.add(199.0);
		collection.add(157.0);
		collection.add(69.0);
		collection.add(199.0);
		collection.add(141.0);
		collection.add(86.0);
		collection.add(133.0);
		collection.add(174.0);
		collection.add(171.0);
		collection.add(35.0);
		collection.add(194.0);
		collection.add(35.0);
		collection.add(126.0);
		collection.add(82.0);
		collection.add(30.0);
		collection.add(194.0);
		collection.add(183.0);
		collection.add(115.0);
		collection.add(78.0);
		collection.add(137.0);
		collection.add(110.0);
		collection.add(98.0);
		collection.add(126.0);
		collection.add(64.0);
		collection.add(54.0);
		collection.add(2.0);
		collection.add(121.0);
		collection.add(127.0);
		collection.add(156.0);
		collection.add(174.0);
		collection.add(123.0);
		collection.add(53.0);
		collection.add(69.0);
		collection.add(187.0);
		collection.add(180.0);
		collection.add(81.0);
		collection.add(97.0);
		collection.add(66.0);
		collection.add(119.0);
		collection.add(103.0);
		collection.add(80.0);
		collection.add(119.0);
		collection.add(88.0);
		collection.add(98.0);
		collection.add(191.0);
		collection.add(174.0);
		collection.add(104.0);
		collection.add(54.0);
		collection.add(128.0);
		collection.add(100.0);
		collection.add(51.0);
		collection.add(11.0);
		collection.add(154.0);
		collection.add(133.0);
		collection.add(181.0);
		collection.add(169.0);
		collection.add(143.0);
		collection.add(157.0);
		collection.add(67.0);
		collection.add(54.0);
		collection.add(70.0);
		collection.add(45.0);
		collection.add(124.0);
		collection.add(58.0);
		collection.add(58.0);
		collection.add(122.0);
		collection.add(80.0);
		collection.add(197.0);
		collection.add(49.0);
		collection.add(88.0);
		collection.add(177.0);
		collection.add(50.0);
		collection.add(61.0);
		collection.add(151.0);
		collection.add(94.0);
		collection.add(30.0);
		collection.add(181.0);
		collection.add(6.0);
		collection.add(39.0);
		collection.add(32.0);
		collection.add(11.0);
		collection.add(22.0);
		collection.add(120.0);
		collection.add(76.0);
		collection.add(38.0);
		collection.add(182.0);
		collection.add(190.0);
		collection.add(17.0);
		collection.add(186.0);
		collection.add(180.0);
		collection.add(163.0);
		collection.add(1.0);
		collection.add(119.0);
		collection.add(34.0);
		collection.add(63.0);
		collection.add(88.0);
		collection.add(134.0);
		collection.add(139.0);
		collection.add(99.0);
		collection.add(122.0);
		collection.add(112.0);
		collection.add(78.0);
		collection.add(15.0);
		collection.add(173.0);
		collection.add(138.0);
		collection.add(61.0);
		collection.add(147.0);
		collection.add(111.0);
		collection.add(151.0);
		collection.add(8.0);
		collection.add(158.0);
		collection.add(59.0);
		collection.add(138.0);
		collection.add(133.0);
		collection.add(174.0);
		collection.add(194.0);
		collection.add(200.0);
		collection.add(118.0);
		collection.add(77.0);
		collection.add(154.0);
		collection.add(15.0);
		collection.add(148.0);
		collection.add(175.0);
		collection.add(42.0);
		collection.add(186.0);
		collection.add(61.0);
		collection.add(17.0);
		collection.add(3.0);
		collection.add(143.0);
		collection.add(117.0);
		collection.add(54.0);
		collection.add(42.0);
		collection.add(119.0);
		collection.add(146.0);
		collection.add(74.0);
		collection.add(147.0);
		collection.add(125.0);
		collection.add(158.0);
		collection.add(54.0);
		collection.add(120.0);
		collection.add(37.0);
		collection.add(193.0);
		collection.add(171.0);
		collection.add(68.0);
		collection.add(104.0);
		collection.add(159.0);
		collection.add(177.0);
		collection.add(11.0);
		collection.add(11.0);
		collection.add(37.0);
		collection.add(175.0);
		collection.add(63.0);
		collection.add(168.0);
		collection.add(177.0);
		collection.add(196.0);
		collection.add(36.0);
		collection.add(75.0);
		collection.add(122.0);
		collection.add(49.0);
		collection.add(46.0);
		collection.add(143.0);
		collection.add(101.0);
		collection.add(108.0);
		collection.add(36.0);
		collection.add(11.0);
		collection.add(44.0);
		collection.add(58.0);
		collection.add(147.0);
		collection.add(116.0);
		collection.add(43.0);
		collection.add(187.0);
		collection.add(9.0);
		collection.add(36.0);
		collection.add(156.0);
		collection.add(161.0);
		collection.add(130.0);
		collection.add(90.0);
		collection.add(103.0);
		collection.add(118.0);
		collection.add(182.0);
		collection.add(145.0);
		collection.add(129.0);
		collection.add(63.0);
		collection.add(161.0);
		collection.add(187.0);
		collection.add(85.0);
		collection.add(115.0);
		collection.add(125.0);
		collection.add(132.0);
		collection.add(157.0);
		collection.add(30.0);
		collection.add(146.0);
		collection.add(161.0);
		collection.add(158.0);
		collection.add(125.0);
		collection.add(117.0);
		collection.add(64.0);
		collection.add(52.0);
		collection.add(63.0);
		collection.add(169.0);
		collection.add(56.0);
		collection.add(120.0);
		collection.add(116.0);
		collection.add(43.0);
		collection.add(100.0);
		collection.add(7.0);
		collection.add(61.0);
		collection.add(197.0);
		collection.add(63.0);
		collection.add(94.0);
		collection.add(81.0);
		collection.add(148.0);
		collection.add(93.0);
		collection.add(132.0);
		collection.add(98.0);
		collection.add(33.0);
		collection.add(159.0);
		collection.add(65.0);
		collection.add(149.0);
		collection.add(56.0);
		collection.add(28.0);
		collection.add(115.0);
		collection.add(62.0);
		collection.add(2.0);
		collection.add(159.0);
		collection.add(150.0);
		collection.add(67.0);
		collection.add(1.0);
		collection.add(125.0);
		collection.add(198.0);
		collection.add(89.0);
		collection.add(42.0);
		collection.add(117.0);
		collection.add(99.0);
		collection.add(88.0);
		collection.add(148.0);
		collection.add(146.0);
		collection.add(47.0);
		collection.add(22.0);
		collection.add(91.0);
		collection.add(116.0);
		collection.add(11.0);
		collection.add(38.0);
		collection.add(163.0);
		collection.add(105.0);
		collection.add(83.0);
		collection.add(101.0);
		collection.add(59.0);
		collection.add(109.0);
		collection.add(99.0);
		collection.add(1.0);
		collection.add(83.0);
		collection.add(59.0);
		collection.add(141.0);
		collection.add(57.0);
		collection.add(138.0);
		collection.add(196.0);
		collection.add(144.0);
		collection.add(88.0);
		collection.add(73.0);
		collection.add(53.0);
		collection.add(161.0);
		collection.add(44.0);
		collection.add(40.0);
		collection.add(118.0);
		collection.add(150.0);
		collection.add(33.0);
		collection.add(154.0);
		collection.add(165.0);
		collection.add(154.0);
		collection.add(192.0);
		collection.add(55.0);
		collection.add(59.0);
		collection.add(139.0);
		collection.add(22.0);
		collection.add(58.0);
		collection.add(122.0);
		collection.add(59.0);
		collection.add(124.0);
		collection.add(135.0);
		collection.add(133.0);
		collection.add(156.0);
		collection.add(62.0);
		collection.add(139.0);
		collection.add(65.0);
		collection.add(154.0);
		collection.add(77.0);
		collection.add(12.0);
		collection.add(69.0);
		collection.add(46.0);
		collection.add(1.0);
		collection.add(39.0);
		collection.add(59.0);
		collection.add(49.0);
		collection.add(82.0);
		collection.add(3.0);
		collection.add(143.0);
		collection.add(51.0);
		collection.add(96.0);
		collection.add(140.0);
		collection.add(25.0);
		collection.add(148.0);
		collection.add(132.0);
		collection.add(73.0);
		collection.add(82.0);
		collection.add(90.0);
		collection.add(96.0);
		collection.add(5.0);
		collection.add(62.0);
		collection.add(169.0);
		collection.add(20.0);
		collection.add(97.0);
		collection.add(171.0);
		collection.add(167.0);
		collection.add(139.0);
		collection.add(115.0);
		collection.add(46.0);
		collection.add(174.0);
		collection.add(44.0);
		collection.add(69.0);
		collection.add(29.0);
		collection.add(169.0);
		collection.add(39.0);
		collection.add(154.0);
		collection.add(136.0);
		collection.add(135.0);
		collection.add(94.0);
		collection.add(97.0);
		collection.add(124.0);
		collection.add(53.0);
		collection.add(22.0);
		collection.add(153.0);
		collection.add(139.0);
		collection.add(57.0);
		collection.add(145.0);
		collection.add(54.0);
		collection.add(19.0);
		collection.add(79.0);
		collection.add(118.0);
		collection.add(18.0);
		collection.add(36.0);
		collection.add(99.0);
		collection.add(23.0);
		collection.add(143.0);
		collection.add(52.0);
		collection.add(196.0);
		collection.add(61.0);
		collection.add(35.0);
		collection.add(189.0);
		collection.add(191.0);
		collection.add(191.0);
		collection.add(193.0);
		collection.add(172.0);
		collection.add(21.0);
		collection.add(36.0);
		collection.add(181.0);
		collection.add(27.0);
		collection.add(57.0);
		collection.add(106.0);
		collection.add(63.0);
		collection.add(83.0);
		collection.add(52.0);
		collection.add(5.0);
		collection.add(76.0);
		collection.add(107.0);
		collection.add(79.0);
		collection.add(181.0);
		collection.add(40.0);
		collection.add(123.0);
		collection.add(171.0);
		collection.add(132.0);
		collection.add(166.0);
		collection.add(109.0);
		collection.add(197.0);
		collection.add(41.0);
		collection.add(125.0);
		collection.add(43.0);
		collection.add(164.0);
		collection.add(115.0);
		collection.add(86.0);
		collection.add(64.0);
		collection.add(194.0);
		collection.add(3.0);
		collection.add(89.0);
		collection.add(144.0);
		collection.add(122.0);
		collection.add(150.0);
		collection.add(96.0);
		collection.add(93.0);
		collection.add(65.0);
		collection.add(138.0);
		collection.add(36.0);
		collection.add(40.0);
		collection.add(148.0);
		collection.add(189.0);
		collection.add(167.0);
		collection.add(107.0);
		collection.add(46.0);
		collection.add(113.0);
		collection.add(79.0);
		collection.add(164.0);
		collection.add(138.0);
		collection.add(41.0);
		collection.add(89.0);
		collection.add(61.0);
		collection.add(88.0);
		collection.add(111.0);
		collection.add(79.0);
		collection.add(142.0);
		collection.add(169.0);
		collection.add(186.0);
		collection.add(9.0);
		collection.add(160.0);
		collection.add(62.0);
		collection.add(160.0);
		collection.add(132.0);
		collection.add(141.0);
		collection.add(50.0);
		collection.add(32.0);
		collection.add(182.0);
		collection.add(196.0);
		collection.add(197.0);
		collection.add(113.0);
		collection.add(136.0);
		collection.add(123.0);
		collection.add(84.0);
		collection.add(140.0);
		collection.add(114.0);
		collection.add(74.0);
		collection.add(111.0);
		collection.add(32.0);
		collection.add(23.0);
		collection.add(95.0);
		collection.add(180.0);
		collection.add(177.0);
		collection.add(5.0);
		collection.add(142.0);
		collection.add(78.0);
		collection.add(109.0);
		collection.add(137.0);
		collection.add(37.0);
		collection.add(12.0);
		collection.add(63.0);
		collection.add(58.0);
		collection.add(83.0);
		collection.add(149.0);
		collection.add(19.0);
		collection.add(89.0);
		collection.add(46.0);
		collection.add(122.0);
		collection.add(189.0);
		collection.add(19.0);
		collection.add(32.0);
		collection.add(149.0);
		collection.add(187.0);
		collection.add(56.0);
		collection.add(194.0);
		collection.add(197.0);
		collection.add(71.0);
		collection.add(40.0);
		collection.add(66.0);
		collection.add(156.0);
		collection.add(115.0);
		collection.add(182.0);
		collection.add(182.0);
		collection.add(12.0);
		collection.add(24.0);
		collection.add(79.0);
		collection.add(187.0);
		collection.add(116.0);
		collection.add(80.0);
		collection.add(43.0);
		collection.add(158.0);
		collection.add(155.0);
		collection.add(122.0);
		collection.add(57.0);
		collection.add(102.0);
		collection.add(74.0);
		collection.add(51.0);
		collection.add(138.0);
		collection.add(169.0);
		collection.add(190.0);
		collection.add(139.0);
		collection.add(27.0);
		collection.add(70.0);
		collection.add(161.0);
		collection.add(44.0);
		collection.add(80.0);
		collection.add(98.0);
		collection.add(116.0);
		collection.add(118.0);
		collection.add(113.0);
		collection.add(110.0);
		collection.add(66.0);
		collection.add(52.0);
		collection.add(45.0);
		collection.add(123.0);
		collection.add(10.0);
		collection.add(200.0);
		collection.add(6.0);
		collection.add(122.0);
		collection.add(24.0);
		collection.add(190.0);
		collection.add(46.0);
		collection.add(90.0);
		collection.add(51.0);
		collection.add(86.0);
		collection.add(3.0);
		collection.add(47.0);
		collection.add(98.0);
		collection.add(37.0);
		collection.add(72.0);
		collection.add(81.0);
		collection.add(92.0);
		collection.add(69.0);
		collection.add(188.0);
		collection.add(152.0);
		collection.add(167.0);
		collection.add(134.0);
		collection.add(168.0);
		collection.add(196.0);
		collection.add(98.0);
		collection.add(179.0);
		collection.add(147.0);
		collection.add(138.0);
		collection.add(111.0);
		collection.add(162.0);
		collection.add(50.0);
		collection.add(141.0);
		collection.add(159.0);
		collection.add(198.0);
		collection.add(124.0);
		collection.add(117.0);
		collection.add(40.0);
		collection.add(196.0);
		collection.add(19.0);
		collection.add(99.0);
		collection.add(138.0);
		collection.add(60.0);
		collection.add(153.0);
		collection.add(40.0);
		collection.add(142.0);
		collection.add(124.0);
		collection.add(124.0);
		collection.add(134.0);
		collection.add(147.0);
		collection.add(102.0);
		collection.add(35.0);
		collection.add(10.0);
		collection.add(116.0);
		collection.add(191.0);
		collection.add(77.0);
		collection.add(95.0);
		collection.add(187.0);
		collection.add(106.0);
		collection.add(174.0);
		collection.add(146.0);
		collection.add(17.0);
		collection.add(100.0);
		collection.add(194.0);
		collection.add(89.0);
		collection.add(23.0);
		collection.add(18.0);
		collection.add(200.0);
		collection.add(110.0);
		collection.add(179.0);
		collection.add(67.0);
		collection.add(190.0);
		collection.add(188.0);
		collection.add(98.0);
		collection.add(56.0);
		collection.add(160.0);
		collection.add(104.0);
		collection.add(137.0);
		collection.add(34.0);
		collection.add(44.0);
		collection.add(193.0);
		collection.add(164.0);
		collection.add(198.0);
		collection.add(179.0);
		collection.add(155.0);
		collection.add(182.0);
		collection.add(36.0);
		collection.add(166.0);
		collection.add(182.0);
		collection.add(126.0);
		collection.add(106.0);
		collection.add(36.0);
		collection.add(29.0);
		collection.add(168.0);
		collection.add(193.0);
		collection.add(148.0);
		collection.add(174.0);
		collection.add(128.0);
		collection.add(6.0);
		collection.add(34.0);
		collection.add(82.0);
		collection.add(154.0);
		collection.add(122.0);
		collection.add(23.0);
		collection.add(106.0);
		collection.add(77.0);
		collection.add(100.0);
		collection.add(159.0);
		collection.add(4.0);
		collection.add(81.0);
		collection.add(181.0);
		collection.add(104.0);
		collection.add(193.0);
		collection.add(110.0);
		collection.add(43.0);
		collection.add(90.0);
		collection.add(32.0);
		collection.add(159.0);
		collection.add(69.0);
		collection.add(189.0);
		collection.add(121.0);
		collection.add(145.0);
		collection.add(72.0);
		collection.add(178.0);
		collection.add(178.0);
		collection.add(164.0);
		collection.add(129.0);
		collection.add(105.0);
		collection.add(50.0);
		collection.add(15.0);
		collection.add(81.0);
		collection.add(59.0);
		collection.add(65.0);
		collection.add(8.0);
		collection.add(191.0);
		collection.add(103.0);
		collection.add(83.0);
		collection.add(73.0);
		collection.add(164.0);
		collection.add(65.0);
		collection.add(61.0);
		collection.add(92.0);
		collection.add(97.0);
		collection.add(136.0);
		collection.add(143.0);
		collection.add(169.0);
		collection.add(133.0);
		collection.add(73.0);
		collection.add(145.0);
		collection.add(128.0);
		collection.add(142.0);
		collection.add(45.0);
		collection.add(73.0);
		collection.add(167.0);
		collection.add(196.0);
		collection.add(140.0);
		collection.add(101.0);
		collection.add(48.0);
		collection.add(128.0);
		collection.add(166.0);
		collection.add(79.0);
		collection.add(86.0);
		collection.add(47.0);
		collection.add(61.0);
		collection.add(17.0);
		collection.add(175.0);
		collection.add(133.0);
		collection.add(147.0);
		collection.add(60.0);
		collection.add(82.0);
		collection.add(186.0);
		collection.add(129.0);
		collection.add(6.0);
		collection.add(47.0);
		collection.add(124.0);
		collection.add(64.0);
		collection.add(170.0);
		collection.add(110.0);
		collection.add(175.0);
		collection.add(150.0);
		collection.add(57.0);
		collection.add(32.0);
		collection.add(126.0);
		collection.add(83.0);
		collection.add(198.0);
		collection.add(32.0);
		collection.add(29.0);
		collection.add(129.0);
		collection.add(1.0);
		collection.add(80.0);
		collection.add(4.0);
		collection.add(65.0);
		collection.add(113.0);
		collection.add(77.0);
		collection.add(109.0);
		collection.add(135.0);
		collection.add(148.0);
		collection.add(106.0);
		collection.add(32.0);
		collection.add(67.0);
		collection.add(82.0);
		collection.add(174.0);
		collection.add(9.0);
		collection.add(60.0);
		collection.add(163.0);
		collection.add(161.0);
		collection.add(49.0);
		collection.add(77.0);
		collection.add(178.0);
		collection.add(41.0);
		collection.add(198.0);
		collection.add(110.0);
		collection.add(166.0);
		collection.add(174.0);
		collection.add(42.0);
		collection.add(51.0);
		collection.add(98.0);
		collection.add(89.0);
		collection.add(58.0);
		collection.add(178.0);
		collection.add(18.0);
		collection.add(96.0);
		collection.add(14.0);
		collection.add(164.0);
		collection.add(163.0);
		collection.add(97.0);
		collection.add(156.0);
		collection.add(68.0);
		collection.add(94.0);
		collection.add(106.0);
		collection.add(57.0);
		collection.add(163.0);
		collection.add(61.0);
		collection.add(184.0);
		collection.add(14.0);
		collection.add(91.0);
		collection.add(145.0);
		collection.add(33.0);
		collection.add(51.0);
		collection.add(65.0);
		collection.add(49.0);
		collection.add(138.0);
		collection.add(174.0);
		collection.add(160.0);
		collection.add(152.0);
		collection.add(12.0);
		collection.add(71.0);
		collection.add(73.0);
		collection.add(150.0);
		collection.add(82.0);
		collection.add(110.0);
		collection.add(17.0);
		collection.add(114.0);
		collection.add(153.0);
		collection.add(22.0);
		collection.add(53.0);
		collection.add(136.0);
		collection.add(193.0);
		collection.add(45.0);
		collection.add(149.0);
		collection.add(99.0);
		collection.add(75.0);
		collection.add(171.0);
		collection.add(159.0);
		collection.add(198.0);
		collection.add(46.0);
		collection.add(126.0);
		collection.add(18.0);
		collection.add(93.0);
		collection.add(29.0);
		collection.add(157.0);
		collection.add(77.0);
		collection.add(61.0);
		collection.add(97.0);
		collection.add(105.0);
		collection.add(44.0);
		collection.add(55.0);
		collection.add(9.0);
		collection.add(9.0);
		collection.add(139.0);
		collection.add(120.0);
		collection.add(106.0);
		collection.add(165.0);
		collection.add(58.0);
		collection.add(173.0);
		collection.add(43.0);
		collection.add(124.0);
		collection.add(77.0);
		collection.add(44.0);
		collection.add(156.0);
		collection.add(38.0);
		collection.add(35.0);
		collection.add(143.0);
		collection.add(97.0);
		collection.add(25.0);
		collection.add(137.0);
		collection.add(157.0);
		collection.add(187.0);
		collection.add(160.0);
		collection.add(139.0);
		collection.add(94.0);
		collection.add(49.0);
		collection.add(194.0);
		collection.add(79.0);
		collection.add(73.0);
		collection.add(32.0);
		collection.add(33.0);
		collection.add(193.0);
		collection.add(162.0);
		collection.add(59.0);
		collection.add(26.0);
		collection.add(97.0);
		collection.add(15.0);
		collection.add(27.0);
		collection.add(38.0);
		collection.add(80.0);
		collection.add(183.0);
		collection.add(159.0);
		collection.add(101.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=5)
	@Measurement(time=5,iterations=30)
	public void JArraySequence(Blackhole bh) {
		bh.consume(collection.addAll(81, java.util.Arrays.asList(101.0,139.0,148.0)));
		bh.consume(collection.lastIndexOf(169.0));
		bh.consume(collection.addAll(95, java.util.Arrays.asList(133.0,32.0,180.0)));
		bh.consume(collection.set(176, 98.0));
		bh.consume(collection.get(122));
		bh.consume(collection.remove(60));
		bh.consume(collection.addAll(68, java.util.Arrays.asList(53.0,26.0,106.0)));
		collection.add(151.0);
		bh.consume(collection.remove(40));
		bh.consume(collection.remove(113));
		bh.consume(collection.lastIndexOf(30.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(142.0,87.0,187.0)));
		bh.consume(collection.remove(105));
		collection.add(28.0);
		bh.consume(collection.indexOf(114.0));
		bh.consume(collection.get(151));
		bh.consume(collection.lastIndexOf(28.0));
		bh.consume(collection.get(56));
		bh.consume(collection.set(112, 117.0));
		bh.consume(collection.remove(119));
		bh.consume(collection.addAll(68, java.util.Arrays.asList(3.0,188.0,90.0)));
		bh.consume(collection.addAll(110, java.util.Arrays.asList(28.0,8.0,2.0,125.0,184.0,37.0,115.0,199.0)));
		bh.consume(collection.indexOf(129.0));
		bh.consume(collection.set(25, 182.0));
		collection.add(0, 130.0);
		bh.consume(collection.lastIndexOf(165.0));
		bh.consume(collection.remove(96));
		bh.consume(collection.addAll(50, java.util.Arrays.asList(48.0,61.0,99.0,197.0,168.0,153.0,121.0)));
		bh.consume(collection.remove(63));
		bh.consume(collection.addAll(49, java.util.Arrays.asList(74.0,24.0,141.0,136.0,23.0,108.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(7.0,79.0,53.0,190.0,66.0)));
		bh.consume(collection.contains(120.0));
		bh.consume(collection.remove(87));
		bh.consume(collection.remove(151));
		bh.consume(collection.remove(185));
		bh.consume(collection.addAll(104, java.util.Arrays.asList(126.0,110.0,64.0,137.0,103.0,154.0,173.0)));
		bh.consume(collection.addAll(15, java.util.Arrays.asList(81.0,186.0,13.0,72.0,106.0,101.0)));
		collection.add(198.0);
		collection.remove(85.0);
		bh.consume(collection.indexOf(90.0));
		bh.consume(collection.set(97, 8.0));
		bh.consume(collection.get(142));
		bh.consume(collection.addAll(132, java.util.Arrays.asList(32.0,65.0,155.0,178.0,161.0,124.0,53.0,17.0)));
		bh.consume(collection.contains(133.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(136.0,142.0,54.0,141.0)));
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.get(21));
		collection.add(2.0);
		bh.consume(collection.lastIndexOf(101.0));
		bh.consume(collection.lastIndexOf(149.0));
		bh.consume(collection.contains(200.0));
		bh.consume(collection.addAll(109, java.util.Arrays.asList(38.0,80.0,25.0,188.0,54.0,188.0,84.0,38.0,36.0)));
		bh.consume(collection.remove(73));
		collection.remove(128.0);
		collection.remove(171.0);
		bh.consume(collection.remove(127));
		bh.consume(collection.remove(24));
		bh.consume(collection.get(178));
		bh.consume(collection.remove(104));
		bh.consume(collection.remove(113));
		bh.consume(collection.remove(157));
		bh.consume(collection.contains(50.0));
		bh.consume(collection.remove(82));
		bh.consume(collection.addAll(100, java.util.Arrays.asList(41.0,144.0,142.0)));
		bh.consume(collection.lastIndexOf(167.0));
		bh.consume(collection.remove(14));
		bh.consume(collection.remove(30));
		bh.consume(collection.addAll(45, java.util.Arrays.asList(131.0,70.0,3.0,199.0,5.0,31.0,168.0,102.0,129.0)));
		bh.consume(collection.lastIndexOf(82.0));
		collection.add(0, 177.0);
		bh.consume(collection.remove(76));
		bh.consume(collection.lastIndexOf(85.0));
		collection.remove(10.0);
		collection.add(109.0);
		bh.consume(collection.addAll(82, java.util.Arrays.asList(130.0,33.0,115.0,62.0,155.0,141.0,142.0,59.0)));
		bh.consume(collection.get(112));
		bh.consume(collection.addAll(122, java.util.Arrays.asList(82.0,181.0,158.0)));
		collection.add(59, 125.0);
		bh.consume(collection.remove(96));
		bh.consume(collection.addAll(87, java.util.Arrays.asList(6.0,31.0,169.0,7.0,38.0,39.0,76.0)));
		bh.consume(collection.set(98, 152.0));
		bh.consume(collection.indexOf(158.0));
		bh.consume(collection.contains(79.0));
		bh.consume(collection.set(191, 189.0));
		bh.consume(collection.remove(163));
		bh.consume(collection.set(54, 62.0));
		bh.consume(collection.indexOf(122.0));
		bh.consume(collection.addAll(180, java.util.Arrays.asList(191.0,174.0,98.0,34.0,48.0,143.0,13.0,107.0,71.0)));
		bh.consume(collection.addAll(128, java.util.Arrays.asList(126.0,111.0,187.0,8.0,61.0,63.0,2.0,121.0)));
		bh.consume(collection.addAll(192, java.util.Arrays.asList(91.0,3.0,78.0,67.0,10.0,65.0,7.0,46.0,68.0)));
		bh.consume(collection.indexOf(28.0));
		bh.consume(collection.addAll(31, java.util.Arrays.asList(172.0,86.0,55.0,190.0,143.0,106.0,138.0,43.0,185.0)));
		bh.consume(collection.lastIndexOf(114.0));
		bh.consume(collection.set(181, 77.0));
		bh.consume(collection.addAll(115, java.util.Arrays.asList(18.0,142.0,37.0,46.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(29.0,178.0,167.0,167.0,103.0,67.0,27.0,86.0)));
		bh.consume(collection.remove(178));
		bh.consume(collection.indexOf(50.0));
		collection.add(0, 55.0);
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.lastIndexOf(31.0));
		bh.consume(collection.remove(111));
		bh.consume(collection.lastIndexOf(133.0));
		collection.add(164.0);
		collection.remove(91.0);
		bh.consume(collection.remove(86));
		bh.consume(collection.remove(100));
		bh.consume(collection.lastIndexOf(154.0));
		collection.add(192.0);
		bh.consume(collection.remove(196));
		bh.consume(collection.lastIndexOf(10.0));
		bh.consume(collection.lastIndexOf(82.0));
		bh.consume(collection.set(153, 192.0));
		bh.consume(collection.set(123, 36.0));
		bh.consume(collection.contains(181.0));
		collection.remove(191.0);
		collection.add(0, 161.0);
		bh.consume(collection.set(49, 16.0));
		bh.consume(collection.addAll(45, java.util.Arrays.asList(190.0,125.0,106.0,154.0)));
		bh.consume(collection.remove(76));
		bh.consume(collection.remove(180));
		bh.consume(collection.remove(66));
		bh.consume(collection.lastIndexOf(73.0));
		bh.consume(collection.remove(161));
		bh.consume(collection.set(42, 143.0));
		bh.consume(collection.remove(113));
		bh.consume(collection.set(185, 157.0));
		collection.add(65.0);
		bh.consume(collection.remove(150));
		bh.consume(collection.get(172));
		bh.consume(collection.addAll(15, java.util.Arrays.asList(58.0,130.0,39.0,187.0,50.0,17.0)));
		bh.consume(collection.remove(69));
		bh.consume(collection.addAll(java.util.Arrays.asList(35.0,139.0,16.0,9.0)));
		bh.consume(collection.lastIndexOf(59.0));
		bh.consume(collection.addAll(87, java.util.Arrays.asList(72.0,92.0,179.0,97.0,75.0,6.0,160.0)));
		bh.consume(collection.set(35, 99.0));
		collection.remove(93.0);
		collection.add(182.0);
		collection.add(0, 20.0);
		collection.add(0, 59.0);
		bh.consume(collection.addAll(49, java.util.Arrays.asList(193.0,80.0,63.0,60.0,138.0)));
		bh.consume(collection.addAll(6, java.util.Arrays.asList(186.0,126.0,91.0,86.0,33.0,16.0,25.0,161.0)));
		collection.remove(111.0);
		bh.consume(collection.set(99, 125.0));
		bh.consume(collection.set(32, 38.0));
		collection.add(167.0);
		bh.consume(collection.indexOf(92.0));
		bh.consume(collection.addAll(132, java.util.Arrays.asList(81.0,188.0,117.0)));
		collection.add(54, 153.0);
		bh.consume(collection.addAll(76, java.util.Arrays.asList(121.0,125.0,23.0,187.0,71.0,128.0,178.0,47.0,146.0)));
		collection.remove(200.0);
		collection.add(0, 144.0);
		bh.consume(collection.indexOf(94.0));
		bh.consume(collection.remove(150));
		bh.consume(collection.contains(42.0));
		bh.consume(collection.addAll(138, java.util.Arrays.asList(109.0,79.0,93.0,94.0,90.0,113.0,36.0,169.0,46.0)));
		bh.consume(collection.remove(170));
		bh.consume(collection.addAll(java.util.Arrays.asList(73.0,28.0,145.0,99.0,172.0,110.0)));
		bh.consume(collection.contains(133.0));
		bh.consume(collection.addAll(150, java.util.Arrays.asList(139.0,49.0,189.0,172.0,128.0,160.0,41.0,4.0)));
		bh.consume(collection.indexOf(124.0));
		bh.consume(collection.remove(98));
		bh.consume(collection.addAll(103, java.util.Arrays.asList(173.0,86.0,177.0,161.0,193.0,192.0,66.0,16.0)));
		bh.consume(collection.remove(169));
		bh.consume(collection.remove(177));
		bh.consume(collection.set(30, 76.0));
		collection.remove(68.0);
		bh.consume(collection.remove(153));
		bh.consume(collection.addAll(67, java.util.Arrays.asList(83.0,58.0,14.0,133.0,54.0,128.0,125.0,145.0,136.0)));
		bh.consume(collection.indexOf(11.0));
		collection.add(0, 176.0);
		bh.consume(collection.remove(35));
		bh.consume(collection.contains(10.0));
		collection.remove(174.0);
		collection.remove(135.0);
		bh.consume(collection.remove(125));
		bh.consume(collection.addAll(java.util.Arrays.asList(135.0,127.0,87.0,174.0,98.0)));
		bh.consume(collection.remove(189));
		bh.consume(collection.set(101, 15.0));
		bh.consume(collection.indexOf(158.0));
		bh.consume(collection.get(167));
		bh.consume(collection.contains(102.0));
		bh.consume(collection.contains(138.0));
		bh.consume(collection.remove(193));
		bh.consume(collection.remove(194));
		collection.add(151.0);
		bh.consume(collection.indexOf(174.0));
		bh.consume(collection.indexOf(32.0));
		bh.consume(collection.get(101));
		collection.add(0, 122.0);
		bh.consume(collection.remove(93));
		bh.consume(collection.remove(124));
		bh.consume(collection.addAll(3, java.util.Arrays.asList(144.0,194.0,169.0,185.0,27.0,91.0,43.0)));
		bh.consume(collection.set(178, 48.0));
		collection.add(156.0);
		bh.consume(collection.remove(163));
		bh.consume(collection.set(184, 63.0));
		bh.consume(collection.contains(142.0));
		bh.consume(collection.lastIndexOf(16.0));
		bh.consume(collection.set(168, 176.0));
		bh.consume(collection.indexOf(167.0));
		bh.consume(collection.addAll(174, java.util.Arrays.asList(189.0,113.0,26.0,92.0,135.0,94.0,20.0)));
		collection.remove(30.0);
		bh.consume(collection.addAll(117, java.util.Arrays.asList(4.0,192.0,192.0,37.0,72.0,78.0,169.0,184.0)));
		bh.consume(collection.addAll(76, java.util.Arrays.asList(184.0,32.0,81.0,17.0)));
		bh.consume(collection.addAll(57, java.util.Arrays.asList(56.0,1.0,150.0,121.0,52.0)));
		bh.consume(collection.contains(67.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(143.0,45.0,43.0,152.0,176.0,19.0,95.0)));
		bh.consume(collection.set(78, 160.0));
		bh.consume(collection.lastIndexOf(171.0));
		bh.consume(collection.get(197));
		bh.consume(collection.remove(76));
		bh.consume(collection.get(174));
		bh.consume(collection.lastIndexOf(152.0));
		bh.consume(collection.indexOf(23.0));
		bh.consume(collection.lastIndexOf(127.0));
		collection.add(0, 111.0);
		collection.remove(21.0);
		bh.consume(collection.addAll(94, java.util.Arrays.asList(136.0,189.0,18.0,74.0,163.0,91.0,169.0,196.0)));
		bh.consume(collection.indexOf(52.0));
		bh.consume(collection.contains(88.0));
		bh.consume(collection.indexOf(79.0));
		bh.consume(collection.indexOf(176.0));
		bh.consume(collection.contains(146.0));
		collection.add(0, 29.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(101.0,100.0,129.0,167.0,106.0,158.0)));
		bh.consume(collection.remove(49));
		bh.consume(collection.set(101, 151.0));
		bh.consume(collection.set(119, 146.0));
		collection.remove(84.0);
		bh.consume(collection.get(189));
		bh.consume(collection.get(64));
		bh.consume(collection.get(180));
		collection.add(120.0);
		bh.consume(collection.indexOf(79.0));
		bh.consume(collection.addAll(198, java.util.Arrays.asList(196.0,110.0,142.0,198.0,121.0)));
		bh.consume(collection.addAll(199, java.util.Arrays.asList(118.0,111.0,31.0,51.0,91.0,127.0,16.0,21.0,34.0)));
		bh.consume(collection.addAll(76, java.util.Arrays.asList(20.0,190.0,177.0,164.0,156.0,186.0)));
		bh.consume(collection.lastIndexOf(151.0));
		collection.add(1.0);
		bh.consume(collection.remove(140));
		bh.consume(collection.addAll(167, java.util.Arrays.asList(34.0,20.0,165.0,45.0,20.0,14.0,163.0)));
		bh.consume(collection.remove(48));
		bh.consume(collection.addAll(123, java.util.Arrays.asList(139.0,59.0,56.0,173.0)));
		bh.consume(collection.addAll(198, java.util.Arrays.asList(177.0,40.0,76.0,21.0,179.0,23.0)));
		bh.consume(collection.lastIndexOf(137.0));
		bh.consume(collection.lastIndexOf(3.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(167.0,113.0,138.0,25.0,137.0,70.0,111.0,81.0)));
		bh.consume(collection.remove(131));
		bh.consume(collection.get(98));
		bh.consume(collection.addAll(24, java.util.Arrays.asList(129.0,149.0,55.0,112.0,92.0,80.0)));
		bh.consume(collection.get(110));
		bh.consume(collection.remove(171));
		bh.consume(collection.contains(195.0));
		bh.consume(collection.addAll(78, java.util.Arrays.asList(11.0,11.0,66.0,108.0,64.0,195.0,84.0)));
		bh.consume(collection.indexOf(56.0));
		bh.consume(collection.addAll(154, java.util.Arrays.asList(181.0,41.0,31.0,62.0,53.0,198.0)));
		bh.consume(collection.addAll(113, java.util.Arrays.asList(117.0,50.0,76.0,3.0,47.0)));
		bh.consume(collection.lastIndexOf(58.0));
		collection.add(63.0);
		collection.add(0, 22.0);
		collection.remove(78.0);
		bh.consume(collection.lastIndexOf(136.0));
		bh.consume(collection.remove(110));
		bh.consume(collection.addAll(java.util.Arrays.asList(10.0,184.0,160.0,179.0)));
		bh.consume(collection.addAll(165, java.util.Arrays.asList(4.0,7.0,133.0,71.0,13.0,196.0,27.0,3.0,50.0)));
		bh.consume(collection.indexOf(189.0));
		collection.add(189.0);
		bh.consume(collection.get(99));
		bh.consume(collection.addAll(125, java.util.Arrays.asList(97.0,12.0,138.0,94.0,36.0,100.0,152.0,175.0,175.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(9.0,158.0,11.0,114.0)));
		bh.consume(collection.set(56, 122.0));
		bh.consume(collection.addAll(148, java.util.Arrays.asList(121.0,178.0,10.0,89.0)));
		bh.consume(collection.addAll(105, java.util.Arrays.asList(1.0,59.0,98.0,149.0,108.0,58.0,171.0,150.0,135.0)));
		bh.consume(collection.contains(135.0));
		collection.remove(40.0);
		bh.consume(collection.remove(85));
		collection.remove(21.0);
		bh.consume(collection.remove(161));
		bh.consume(collection.set(155, 44.0));
		bh.consume(collection.remove(28));
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.set(71, 14.0));
		bh.consume(collection.remove(108));
		bh.consume(collection.addAll(java.util.Arrays.asList(119.0,113.0,44.0,165.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(191.0,12.0,101.0,103.0,116.0,146.0,161.0,3.0,84.0)));
		bh.consume(collection.indexOf(186.0));
		collection.remove(152.0);
		bh.consume(collection.addAll(26, java.util.Arrays.asList(195.0,74.0,175.0)));
		collection.remove(138.0);
		bh.consume(collection.get(48));
		bh.consume(collection.remove(90));
		bh.consume(collection.lastIndexOf(185.0));
		collection.remove(114.0);
		bh.consume(collection.contains(199.0));
		bh.consume(collection.addAll(60, java.util.Arrays.asList(23.0,101.0,106.0,135.0,42.0,72.0,10.0,72.0,126.0)));
		bh.consume(collection.set(28, 29.0));
		collection.add(186.0);
		bh.consume(collection.lastIndexOf(109.0));
		bh.consume(collection.lastIndexOf(2.0));
		bh.consume(collection.indexOf(180.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(197.0,44.0,87.0,139.0,77.0,124.0,28.0,12.0,61.0)));
		bh.consume(collection.remove(94));
		bh.consume(collection.set(160, 67.0));
		collection.add(0, 198.0);
		bh.consume(collection.remove(111));
		bh.consume(collection.indexOf(103.0));
		bh.consume(collection.get(141));
		bh.consume(collection.addAll(java.util.Arrays.asList(85.0,140.0,122.0,184.0,19.0)));
		bh.consume(collection.set(191, 29.0));
		bh.consume(collection.addAll(51, java.util.Arrays.asList(33.0,41.0,5.0,50.0,139.0)));
		bh.consume(collection.set(190, 191.0));
		collection.add(150.0);
		bh.consume(collection.get(88));
		bh.consume(collection.addAll(9, java.util.Arrays.asList(193.0,114.0,39.0,105.0,4.0)));
		bh.consume(collection.remove(169));
		bh.consume(collection.indexOf(151.0));
		bh.consume(collection.get(76));
		bh.consume(collection.remove(6));
		bh.consume(collection.addAll(95, java.util.Arrays.asList(120.0,28.0,52.0,33.0,127.0,32.0,157.0,146.0)));
		bh.consume(collection.addAll(192, java.util.Arrays.asList(81.0,143.0,3.0,134.0,50.0,53.0)));
		collection.add(189.0);
		bh.consume(collection.remove(5));
		bh.consume(collection.addAll(43, java.util.Arrays.asList(108.0,147.0,34.0,48.0,120.0,113.0,115.0,154.0)));
		collection.add(128.0);
		bh.consume(collection.lastIndexOf(119.0));
		collection.remove(169.0);
		bh.consume(collection.addAll(12, java.util.Arrays.asList(65.0,173.0,190.0)));
		bh.consume(collection.addAll(24, java.util.Arrays.asList(176.0,95.0,18.0,184.0)));
		bh.consume(collection.indexOf(105.0));
		bh.consume(collection.contains(165.0));
		collection.add(2.0);
		bh.consume(collection.remove(174));
		collection.add(51.0);
		bh.consume(collection.addAll(31, java.util.Arrays.asList(89.0,180.0,16.0,136.0,95.0,99.0,40.0,191.0)));
		bh.consume(collection.addAll(144, java.util.Arrays.asList(190.0,29.0,185.0,129.0,5.0,66.0)));
		bh.consume(collection.get(174));
		bh.consume(collection.remove(100));
		collection.add(124.0);
		bh.consume(collection.get(3));
		bh.consume(collection.addAll(33, java.util.Arrays.asList(70.0,25.0,61.0,57.0,189.0,93.0,125.0,82.0,76.0)));
		collection.remove(149.0);
		collection.remove(196.0);
		collection.add(54.0);
		bh.consume(collection.remove(171));
		bh.consume(collection.lastIndexOf(48.0));
		bh.consume(collection.remove(26));
		collection.add(34.0);
		bh.consume(collection.set(33, 132.0));
		bh.consume(collection.lastIndexOf(154.0));
		bh.consume(collection.remove(70));
		bh.consume(collection.contains(83.0));
		bh.consume(collection.lastIndexOf(142.0));
		bh.consume(collection.get(173));
		collection.add(42.0);
		bh.consume(collection.get(47));
		bh.consume(collection.get(94));
		bh.consume(collection.lastIndexOf(129.0));
		collection.add(0, 185.0);
		bh.consume(collection.lastIndexOf(64.0));
		bh.consume(collection.addAll(105, java.util.Arrays.asList(28.0,59.0,165.0,94.0,30.0,194.0,63.0,93.0)));
		bh.consume(collection.set(116, 137.0));
		bh.consume(collection.set(49, 99.0));
		bh.consume(collection.addAll(187, java.util.Arrays.asList(155.0,34.0,145.0,77.0)));
		bh.consume(collection.addAll(44, java.util.Arrays.asList(149.0,175.0,126.0,68.0)));
		bh.consume(collection.set(151, 160.0));
		bh.consume(collection.addAll(160, java.util.Arrays.asList(39.0,124.0,85.0,180.0,40.0,181.0)));
		bh.consume(collection.lastIndexOf(4.0));
		bh.consume(collection.set(154, 41.0));
		bh.consume(collection.set(68, 149.0));
		bh.consume(collection.get(196));
		bh.consume(collection.set(47, 41.0));
		bh.consume(collection.remove(141));
		bh.consume(collection.remove(173));
		bh.consume(collection.remove(101));
		bh.consume(collection.addAll(43, java.util.Arrays.asList(186.0,174.0,35.0)));
		bh.consume(collection.set(193, 165.0));
		bh.consume(collection.remove(49));
		bh.consume(collection.remove(34));
		bh.consume(collection.indexOf(120.0));
		bh.consume(collection.get(95));
		collection.remove(19.0);
		bh.consume(collection.addAll(96, java.util.Arrays.asList(130.0,13.0,13.0,171.0,34.0,131.0)));
		bh.consume(collection.indexOf(2.0));
		bh.consume(collection.addAll(192, java.util.Arrays.asList(91.0,93.0,162.0,102.0,166.0,104.0)));
		bh.consume(collection.lastIndexOf(161.0));
		bh.consume(collection.remove(71));
		bh.consume(collection.lastIndexOf(65.0));
		collection.add(0, 97.0);
		bh.consume(collection.remove(146));
		bh.consume(collection.addAll(12, java.util.Arrays.asList(28.0,82.0,71.0,80.0,122.0)));
		bh.consume(collection.lastIndexOf(131.0));
		bh.consume(collection.set(1, 156.0));
		bh.consume(collection.lastIndexOf(18.0));
		bh.consume(collection.remove(48));
		bh.consume(collection.remove(84));
		collection.remove(61.0);
		bh.consume(collection.indexOf(192.0));
		bh.consume(collection.addAll(60, java.util.Arrays.asList(130.0,123.0,48.0,89.0,77.0,142.0,128.0,15.0)));
		bh.consume(collection.indexOf(39.0));
		bh.consume(collection.remove(86));
		bh.consume(collection.indexOf(18.0));
		bh.consume(collection.remove(83));
		bh.consume(collection.remove(86));
		bh.consume(collection.lastIndexOf(8.0));
		bh.consume(collection.remove(194));
		bh.consume(collection.remove(108));
		bh.consume(collection.get(9));
		bh.consume(collection.get(47));
		collection.add(0, 185.0);
		bh.consume(collection.set(165, 65.0));
		bh.consume(collection.get(164));
		bh.consume(collection.lastIndexOf(106.0));
		bh.consume(collection.set(93, 101.0));
		collection.remove(6.0);
		bh.consume(collection.remove(49));
		bh.consume(collection.get(153));
		collection.add(38.0);
		bh.consume(collection.remove(58));
		bh.consume(collection.contains(191.0));
		bh.consume(collection.lastIndexOf(81.0));
		bh.consume(collection.lastIndexOf(100.0));
		bh.consume(collection.set(168, 178.0));
		bh.consume(collection.contains(69.0));
		bh.consume(collection.remove(55));
		bh.consume(collection.set(29, 21.0));
		bh.consume(collection.get(122));
		bh.consume(collection.set(27, 184.0));
		bh.consume(collection.addAll(1, java.util.Arrays.asList(69.0,30.0,167.0,191.0)));
		bh.consume(collection.addAll(49, java.util.Arrays.asList(156.0,164.0,157.0,101.0,47.0)));
		collection.add(0, 160.0);
		bh.consume(collection.indexOf(36.0));
		bh.consume(collection.set(51, 86.0));
		collection.add(45.0);
		bh.consume(collection.remove(151));
		collection.add(2.0);
		bh.consume(collection.lastIndexOf(193.0));
		bh.consume(collection.addAll(91, java.util.Arrays.asList(26.0,141.0,14.0,70.0,59.0,1.0)));
		bh.consume(collection.lastIndexOf(198.0));
		bh.consume(collection.indexOf(109.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(155.0,100.0,5.0,7.0,69.0)));
		bh.consume(collection.get(84));
		bh.consume(collection.addAll(java.util.Arrays.asList(122.0,116.0,59.0,17.0,103.0,73.0,86.0,195.0)));
		collection.add(0, 121.0);
		bh.consume(collection.lastIndexOf(182.0));
		bh.consume(collection.addAll(23, java.util.Arrays.asList(73.0,79.0,12.0)));
		bh.consume(collection.remove(25));
		bh.consume(collection.remove(189));
		bh.consume(collection.set(37, 187.0));
		bh.consume(collection.get(138));
		bh.consume(collection.indexOf(25.0));
		collection.add(87.0);
		bh.consume(collection.set(190, 28.0));
		collection.add(59.0);
		bh.consume(collection.indexOf(147.0));
		bh.consume(collection.set(173, 76.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(126.0,97.0,17.0)));
		bh.consume(collection.get(148));
		bh.consume(collection.set(19, 77.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(75.0,69.0,151.0,103.0,88.0,146.0,128.0,182.0)));
		bh.consume(collection.remove(112));
		bh.consume(collection.addAll(java.util.Arrays.asList(126.0,11.0,114.0,173.0,164.0,62.0,72.0,141.0)));
		collection.add(81.0);
		bh.consume(collection.remove(123));
		bh.consume(collection.indexOf(28.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(47.0,45.0,150.0,169.0,111.0,77.0,11.0,155.0)));
		bh.consume(collection.set(29, 140.0));
		bh.consume(collection.set(130, 90.0));
		bh.consume(collection.get(23));
		bh.consume(collection.remove(89));
		bh.consume(collection.lastIndexOf(1.0));
		bh.consume(collection.get(122));
		collection.remove(109.0);
		collection.remove(146.0);
		collection.add(38.0);
		bh.consume(collection.remove(119));
		bh.consume(collection.remove(125));
		bh.consume(collection.contains(133.0));
		bh.consume(collection.lastIndexOf(112.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(147.0,143.0,134.0,170.0)));
		bh.consume(collection.lastIndexOf(150.0));
		collection.add(139.0);
		bh.consume(collection.addAll(138, java.util.Arrays.asList(85.0,126.0,53.0,135.0,10.0,106.0,33.0,132.0,10.0)));
		bh.consume(collection.addAll(97, java.util.Arrays.asList(8.0,105.0,189.0,158.0,130.0,134.0,144.0,151.0,8.0)));
		bh.consume(collection.indexOf(182.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(185.0,141.0,146.0)));
		bh.consume(collection.get(93));
		collection.remove(65.0);
		bh.consume(collection.lastIndexOf(81.0));
		bh.consume(collection.indexOf(84.0));
		collection.add(0, 160.0);
		bh.consume(collection.remove(105));
		bh.consume(collection.get(4));
		bh.consume(collection.indexOf(64.0));
		bh.consume(collection.lastIndexOf(190.0));
		bh.consume(collection.addAll(46, java.util.Arrays.asList(171.0,67.0,174.0,35.0,43.0,29.0)));
		collection.add(5.0);
		collection.add(111.0);
		bh.consume(collection.get(176));
		bh.consume(collection.addAll(181, java.util.Arrays.asList(3.0,128.0,5.0,134.0,107.0,111.0)));
	}
}
