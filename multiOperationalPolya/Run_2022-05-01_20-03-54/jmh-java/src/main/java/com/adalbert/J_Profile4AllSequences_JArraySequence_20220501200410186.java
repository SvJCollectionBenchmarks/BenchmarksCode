package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile4AllSequences_JArraySequence_20220501200410186 {
	java.util.ArrayList<Double> collection = new java.util.ArrayList<>();
	@Setup(Level.Invocation)
	public void setupJArraySequence() {
		collection = new java.util.ArrayList<>();
		collection.add(97.0);
		collection.add(34.0);
		collection.add(167.0);
		collection.add(121.0);
		collection.add(54.0);
		collection.add(194.0);
		collection.add(185.0);
		collection.add(17.0);
		collection.add(39.0);
		collection.add(123.0);
		collection.add(110.0);
		collection.add(115.0);
		collection.add(142.0);
		collection.add(158.0);
		collection.add(92.0);
		collection.add(176.0);
		collection.add(72.0);
		collection.add(66.0);
		collection.add(130.0);
		collection.add(93.0);
		collection.add(72.0);
		collection.add(25.0);
		collection.add(129.0);
		collection.add(194.0);
		collection.add(73.0);
		collection.add(171.0);
		collection.add(113.0);
		collection.add(159.0);
		collection.add(31.0);
		collection.add(181.0);
		collection.add(85.0);
		collection.add(178.0);
		collection.add(175.0);
		collection.add(77.0);
		collection.add(200.0);
		collection.add(83.0);
		collection.add(69.0);
		collection.add(165.0);
		collection.add(51.0);
		collection.add(146.0);
		collection.add(34.0);
		collection.add(131.0);
		collection.add(56.0);
		collection.add(94.0);
		collection.add(123.0);
		collection.add(150.0);
		collection.add(55.0);
		collection.add(150.0);
		collection.add(2.0);
		collection.add(48.0);
		collection.add(172.0);
		collection.add(50.0);
		collection.add(161.0);
		collection.add(189.0);
		collection.add(90.0);
		collection.add(160.0);
		collection.add(33.0);
		collection.add(146.0);
		collection.add(21.0);
		collection.add(140.0);
		collection.add(95.0);
		collection.add(60.0);
		collection.add(165.0);
		collection.add(131.0);
		collection.add(178.0);
		collection.add(70.0);
		collection.add(41.0);
		collection.add(158.0);
		collection.add(17.0);
		collection.add(113.0);
		collection.add(101.0);
		collection.add(52.0);
		collection.add(138.0);
		collection.add(120.0);
		collection.add(53.0);
		collection.add(80.0);
		collection.add(174.0);
		collection.add(95.0);
		collection.add(69.0);
		collection.add(21.0);
		collection.add(187.0);
		collection.add(9.0);
		collection.add(184.0);
		collection.add(193.0);
		collection.add(39.0);
		collection.add(22.0);
		collection.add(10.0);
		collection.add(129.0);
		collection.add(69.0);
		collection.add(163.0);
		collection.add(52.0);
		collection.add(79.0);
		collection.add(138.0);
		collection.add(177.0);
		collection.add(128.0);
		collection.add(80.0);
		collection.add(157.0);
		collection.add(86.0);
		collection.add(117.0);
		collection.add(64.0);
		collection.add(173.0);
		collection.add(68.0);
		collection.add(22.0);
		collection.add(145.0);
		collection.add(119.0);
		collection.add(87.0);
		collection.add(148.0);
		collection.add(149.0);
		collection.add(157.0);
		collection.add(191.0);
		collection.add(43.0);
		collection.add(107.0);
		collection.add(95.0);
		collection.add(9.0);
		collection.add(115.0);
		collection.add(28.0);
		collection.add(5.0);
		collection.add(44.0);
		collection.add(138.0);
		collection.add(182.0);
		collection.add(99.0);
		collection.add(176.0);
		collection.add(111.0);
		collection.add(113.0);
		collection.add(19.0);
		collection.add(32.0);
		collection.add(111.0);
		collection.add(192.0);
		collection.add(124.0);
		collection.add(9.0);
		collection.add(121.0);
		collection.add(25.0);
		collection.add(151.0);
		collection.add(70.0);
		collection.add(89.0);
		collection.add(88.0);
		collection.add(12.0);
		collection.add(77.0);
		collection.add(188.0);
		collection.add(166.0);
		collection.add(150.0);
		collection.add(56.0);
		collection.add(65.0);
		collection.add(18.0);
		collection.add(7.0);
		collection.add(63.0);
		collection.add(12.0);
		collection.add(175.0);
		collection.add(180.0);
		collection.add(187.0);
		collection.add(169.0);
		collection.add(176.0);
		collection.add(107.0);
		collection.add(166.0);
		collection.add(125.0);
		collection.add(129.0);
		collection.add(33.0);
		collection.add(2.0);
		collection.add(96.0);
		collection.add(14.0);
		collection.add(126.0);
		collection.add(61.0);
		collection.add(37.0);
		collection.add(23.0);
		collection.add(51.0);
		collection.add(3.0);
		collection.add(45.0);
		collection.add(156.0);
		collection.add(123.0);
		collection.add(59.0);
		collection.add(123.0);
		collection.add(55.0);
		collection.add(138.0);
		collection.add(131.0);
		collection.add(118.0);
		collection.add(45.0);
		collection.add(169.0);
		collection.add(36.0);
		collection.add(173.0);
		collection.add(145.0);
		collection.add(188.0);
		collection.add(112.0);
		collection.add(78.0);
		collection.add(122.0);
		collection.add(1.0);
		collection.add(145.0);
		collection.add(190.0);
		collection.add(82.0);
		collection.add(5.0);
		collection.add(60.0);
		collection.add(197.0);
		collection.add(141.0);
		collection.add(10.0);
		collection.add(18.0);
		collection.add(120.0);
		collection.add(125.0);
		collection.add(62.0);
		collection.add(159.0);
		collection.add(169.0);
		collection.add(150.0);
		collection.add(7.0);
		collection.add(139.0);
		collection.add(96.0);
		collection.add(16.0);
		collection.add(185.0);
		collection.add(141.0);
		collection.add(173.0);
		collection.add(189.0);
		collection.add(40.0);
		collection.add(53.0);
		collection.add(193.0);
		collection.add(129.0);
		collection.add(56.0);
		collection.add(1.0);
		collection.add(48.0);
		collection.add(101.0);
		collection.add(121.0);
		collection.add(40.0);
		collection.add(32.0);
		collection.add(62.0);
		collection.add(30.0);
		collection.add(92.0);
		collection.add(63.0);
		collection.add(90.0);
		collection.add(200.0);
		collection.add(130.0);
		collection.add(81.0);
		collection.add(21.0);
		collection.add(61.0);
		collection.add(99.0);
		collection.add(59.0);
		collection.add(38.0);
		collection.add(117.0);
		collection.add(185.0);
		collection.add(176.0);
		collection.add(74.0);
		collection.add(11.0);
		collection.add(80.0);
		collection.add(5.0);
		collection.add(43.0);
		collection.add(172.0);
		collection.add(75.0);
		collection.add(136.0);
		collection.add(182.0);
		collection.add(8.0);
		collection.add(190.0);
		collection.add(16.0);
		collection.add(173.0);
		collection.add(77.0);
		collection.add(27.0);
		collection.add(117.0);
		collection.add(39.0);
		collection.add(146.0);
		collection.add(144.0);
		collection.add(65.0);
		collection.add(128.0);
		collection.add(163.0);
		collection.add(164.0);
		collection.add(5.0);
		collection.add(74.0);
		collection.add(61.0);
		collection.add(135.0);
		collection.add(200.0);
		collection.add(174.0);
		collection.add(63.0);
		collection.add(38.0);
		collection.add(153.0);
		collection.add(90.0);
		collection.add(169.0);
		collection.add(154.0);
		collection.add(9.0);
		collection.add(1.0);
		collection.add(35.0);
		collection.add(151.0);
		collection.add(63.0);
		collection.add(100.0);
		collection.add(76.0);
		collection.add(98.0);
		collection.add(177.0);
		collection.add(20.0);
		collection.add(74.0);
		collection.add(101.0);
		collection.add(186.0);
		collection.add(67.0);
		collection.add(51.0);
		collection.add(171.0);
		collection.add(3.0);
		collection.add(151.0);
		collection.add(126.0);
		collection.add(13.0);
		collection.add(179.0);
		collection.add(45.0);
		collection.add(100.0);
		collection.add(165.0);
		collection.add(83.0);
		collection.add(16.0);
		collection.add(99.0);
		collection.add(83.0);
		collection.add(74.0);
		collection.add(87.0);
		collection.add(184.0);
		collection.add(136.0);
		collection.add(100.0);
		collection.add(161.0);
		collection.add(152.0);
		collection.add(3.0);
		collection.add(81.0);
		collection.add(181.0);
		collection.add(180.0);
		collection.add(122.0);
		collection.add(196.0);
		collection.add(108.0);
		collection.add(124.0);
		collection.add(138.0);
		collection.add(111.0);
		collection.add(185.0);
		collection.add(35.0);
		collection.add(46.0);
		collection.add(139.0);
		collection.add(126.0);
		collection.add(25.0);
		collection.add(143.0);
		collection.add(69.0);
		collection.add(142.0);
		collection.add(33.0);
		collection.add(49.0);
		collection.add(113.0);
		collection.add(72.0);
		collection.add(118.0);
		collection.add(157.0);
		collection.add(131.0);
		collection.add(188.0);
		collection.add(94.0);
		collection.add(42.0);
		collection.add(32.0);
		collection.add(41.0);
		collection.add(159.0);
		collection.add(1.0);
		collection.add(140.0);
		collection.add(44.0);
		collection.add(106.0);
		collection.add(1.0);
		collection.add(56.0);
		collection.add(114.0);
		collection.add(186.0);
		collection.add(36.0);
		collection.add(72.0);
		collection.add(19.0);
		collection.add(41.0);
		collection.add(79.0);
		collection.add(35.0);
		collection.add(187.0);
		collection.add(176.0);
		collection.add(199.0);
		collection.add(26.0);
		collection.add(157.0);
		collection.add(180.0);
		collection.add(51.0);
		collection.add(53.0);
		collection.add(200.0);
		collection.add(94.0);
		collection.add(186.0);
		collection.add(127.0);
		collection.add(133.0);
		collection.add(98.0);
		collection.add(82.0);
		collection.add(75.0);
		collection.add(200.0);
		collection.add(135.0);
		collection.add(145.0);
		collection.add(135.0);
		collection.add(33.0);
		collection.add(100.0);
		collection.add(153.0);
		collection.add(195.0);
		collection.add(40.0);
		collection.add(142.0);
		collection.add(187.0);
		collection.add(48.0);
		collection.add(119.0);
		collection.add(74.0);
		collection.add(49.0);
		collection.add(33.0);
		collection.add(2.0);
		collection.add(41.0);
		collection.add(189.0);
		collection.add(60.0);
		collection.add(42.0);
		collection.add(131.0);
		collection.add(4.0);
		collection.add(102.0);
		collection.add(82.0);
		collection.add(185.0);
		collection.add(169.0);
		collection.add(74.0);
		collection.add(53.0);
		collection.add(117.0);
		collection.add(110.0);
		collection.add(148.0);
		collection.add(1.0);
		collection.add(103.0);
		collection.add(31.0);
		collection.add(161.0);
		collection.add(157.0);
		collection.add(119.0);
		collection.add(59.0);
		collection.add(134.0);
		collection.add(66.0);
		collection.add(146.0);
		collection.add(32.0);
		collection.add(195.0);
		collection.add(188.0);
		collection.add(3.0);
		collection.add(106.0);
		collection.add(105.0);
		collection.add(11.0);
		collection.add(135.0);
		collection.add(145.0);
		collection.add(32.0);
		collection.add(198.0);
		collection.add(60.0);
		collection.add(76.0);
		collection.add(109.0);
		collection.add(184.0);
		collection.add(199.0);
		collection.add(114.0);
		collection.add(17.0);
		collection.add(99.0);
		collection.add(192.0);
		collection.add(39.0);
		collection.add(145.0);
		collection.add(60.0);
		collection.add(66.0);
		collection.add(162.0);
		collection.add(147.0);
		collection.add(47.0);
		collection.add(196.0);
		collection.add(83.0);
		collection.add(43.0);
		collection.add(107.0);
		collection.add(200.0);
		collection.add(49.0);
		collection.add(107.0);
		collection.add(59.0);
		collection.add(31.0);
		collection.add(20.0);
		collection.add(95.0);
		collection.add(127.0);
		collection.add(102.0);
		collection.add(134.0);
		collection.add(46.0);
		collection.add(14.0);
		collection.add(7.0);
		collection.add(68.0);
		collection.add(54.0);
		collection.add(138.0);
		collection.add(192.0);
		collection.add(14.0);
		collection.add(130.0);
		collection.add(112.0);
		collection.add(194.0);
		collection.add(9.0);
		collection.add(177.0);
		collection.add(153.0);
		collection.add(43.0);
		collection.add(127.0);
		collection.add(173.0);
		collection.add(40.0);
		collection.add(63.0);
		collection.add(68.0);
		collection.add(141.0);
		collection.add(52.0);
		collection.add(79.0);
		collection.add(104.0);
		collection.add(28.0);
		collection.add(40.0);
		collection.add(15.0);
		collection.add(133.0);
		collection.add(133.0);
		collection.add(123.0);
		collection.add(147.0);
		collection.add(67.0);
		collection.add(110.0);
		collection.add(196.0);
		collection.add(158.0);
		collection.add(21.0);
		collection.add(71.0);
		collection.add(176.0);
		collection.add(200.0);
		collection.add(151.0);
		collection.add(171.0);
		collection.add(43.0);
		collection.add(47.0);
		collection.add(93.0);
		collection.add(57.0);
		collection.add(7.0);
		collection.add(149.0);
		collection.add(165.0);
		collection.add(48.0);
		collection.add(32.0);
		collection.add(60.0);
		collection.add(142.0);
		collection.add(109.0);
		collection.add(44.0);
		collection.add(199.0);
		collection.add(51.0);
		collection.add(50.0);
		collection.add(61.0);
		collection.add(134.0);
		collection.add(12.0);
		collection.add(33.0);
		collection.add(68.0);
		collection.add(5.0);
		collection.add(170.0);
		collection.add(97.0);
		collection.add(18.0);
		collection.add(21.0);
		collection.add(125.0);
		collection.add(48.0);
		collection.add(28.0);
		collection.add(52.0);
		collection.add(97.0);
		collection.add(135.0);
		collection.add(156.0);
		collection.add(161.0);
		collection.add(184.0);
		collection.add(16.0);
		collection.add(57.0);
		collection.add(176.0);
		collection.add(146.0);
		collection.add(57.0);
		collection.add(13.0);
		collection.add(161.0);
		collection.add(138.0);
		collection.add(116.0);
		collection.add(46.0);
		collection.add(84.0);
		collection.add(10.0);
		collection.add(96.0);
		collection.add(37.0);
		collection.add(30.0);
		collection.add(72.0);
		collection.add(38.0);
		collection.add(128.0);
		collection.add(52.0);
		collection.add(71.0);
		collection.add(21.0);
		collection.add(18.0);
		collection.add(144.0);
		collection.add(51.0);
		collection.add(71.0);
		collection.add(71.0);
		collection.add(42.0);
		collection.add(113.0);
		collection.add(35.0);
		collection.add(193.0);
		collection.add(197.0);
		collection.add(109.0);
		collection.add(19.0);
		collection.add(159.0);
		collection.add(38.0);
		collection.add(196.0);
		collection.add(60.0);
		collection.add(131.0);
		collection.add(184.0);
		collection.add(15.0);
		collection.add(133.0);
		collection.add(151.0);
		collection.add(154.0);
		collection.add(124.0);
		collection.add(136.0);
		collection.add(156.0);
		collection.add(183.0);
		collection.add(1.0);
		collection.add(11.0);
		collection.add(151.0);
		collection.add(94.0);
		collection.add(15.0);
		collection.add(141.0);
		collection.add(145.0);
		collection.add(123.0);
		collection.add(94.0);
		collection.add(179.0);
		collection.add(163.0);
		collection.add(148.0);
		collection.add(59.0);
		collection.add(15.0);
		collection.add(119.0);
		collection.add(87.0);
		collection.add(52.0);
		collection.add(38.0);
		collection.add(133.0);
		collection.add(189.0);
		collection.add(189.0);
		collection.add(115.0);
		collection.add(27.0);
		collection.add(4.0);
		collection.add(65.0);
		collection.add(28.0);
		collection.add(27.0);
		collection.add(43.0);
		collection.add(189.0);
		collection.add(197.0);
		collection.add(172.0);
		collection.add(44.0);
		collection.add(17.0);
		collection.add(84.0);
		collection.add(117.0);
		collection.add(1.0);
		collection.add(195.0);
		collection.add(195.0);
		collection.add(47.0);
		collection.add(72.0);
		collection.add(149.0);
		collection.add(29.0);
		collection.add(184.0);
		collection.add(171.0);
		collection.add(1.0);
		collection.add(6.0);
		collection.add(18.0);
		collection.add(49.0);
		collection.add(90.0);
		collection.add(44.0);
		collection.add(196.0);
		collection.add(42.0);
		collection.add(39.0);
		collection.add(27.0);
		collection.add(64.0);
		collection.add(155.0);
		collection.add(143.0);
		collection.add(178.0);
		collection.add(110.0);
		collection.add(66.0);
		collection.add(36.0);
		collection.add(33.0);
		collection.add(43.0);
		collection.add(155.0);
		collection.add(46.0);
		collection.add(99.0);
		collection.add(113.0);
		collection.add(103.0);
		collection.add(137.0);
		collection.add(161.0);
		collection.add(38.0);
		collection.add(179.0);
		collection.add(50.0);
		collection.add(84.0);
		collection.add(96.0);
		collection.add(129.0);
		collection.add(158.0);
		collection.add(182.0);
		collection.add(37.0);
		collection.add(23.0);
		collection.add(16.0);
		collection.add(114.0);
		collection.add(108.0);
		collection.add(57.0);
		collection.add(84.0);
		collection.add(49.0);
		collection.add(21.0);
		collection.add(51.0);
		collection.add(167.0);
		collection.add(82.0);
		collection.add(59.0);
		collection.add(156.0);
		collection.add(4.0);
		collection.add(7.0);
		collection.add(64.0);
		collection.add(19.0);
		collection.add(150.0);
		collection.add(23.0);
		collection.add(142.0);
		collection.add(136.0);
		collection.add(68.0);
		collection.add(185.0);
		collection.add(41.0);
		collection.add(167.0);
		collection.add(195.0);
		collection.add(111.0);
		collection.add(86.0);
		collection.add(200.0);
		collection.add(34.0);
		collection.add(71.0);
		collection.add(50.0);
		collection.add(32.0);
		collection.add(81.0);
		collection.add(194.0);
		collection.add(126.0);
		collection.add(17.0);
		collection.add(89.0);
		collection.add(36.0);
		collection.add(104.0);
		collection.add(178.0);
		collection.add(143.0);
		collection.add(6.0);
		collection.add(71.0);
		collection.add(2.0);
		collection.add(30.0);
		collection.add(109.0);
		collection.add(54.0);
		collection.add(73.0);
		collection.add(47.0);
		collection.add(26.0);
		collection.add(72.0);
		collection.add(8.0);
		collection.add(4.0);
		collection.add(153.0);
		collection.add(150.0);
		collection.add(52.0);
		collection.add(174.0);
		collection.add(2.0);
		collection.add(41.0);
		collection.add(164.0);
		collection.add(93.0);
		collection.add(182.0);
		collection.add(8.0);
		collection.add(113.0);
		collection.add(6.0);
		collection.add(194.0);
		collection.add(56.0);
		collection.add(95.0);
		collection.add(26.0);
		collection.add(145.0);
		collection.add(90.0);
		collection.add(86.0);
		collection.add(20.0);
		collection.add(96.0);
		collection.add(190.0);
		collection.add(14.0);
		collection.add(63.0);
		collection.add(40.0);
		collection.add(56.0);
		collection.add(197.0);
		collection.add(102.0);
		collection.add(32.0);
		collection.add(188.0);
		collection.add(186.0);
		collection.add(41.0);
		collection.add(33.0);
		collection.add(142.0);
		collection.add(120.0);
		collection.add(103.0);
		collection.add(4.0);
		collection.add(1.0);
		collection.add(132.0);
		collection.add(150.0);
		collection.add(168.0);
		collection.add(67.0);
		collection.add(16.0);
		collection.add(188.0);
		collection.add(112.0);
		collection.add(45.0);
		collection.add(148.0);
		collection.add(44.0);
		collection.add(91.0);
		collection.add(8.0);
		collection.add(122.0);
		collection.add(126.0);
		collection.add(131.0);
		collection.add(61.0);
		collection.add(126.0);
		collection.add(3.0);
		collection.add(9.0);
		collection.add(105.0);
		collection.add(27.0);
		collection.add(56.0);
		collection.add(92.0);
		collection.add(115.0);
		collection.add(189.0);
		collection.add(45.0);
		collection.add(129.0);
		collection.add(97.0);
		collection.add(74.0);
		collection.add(153.0);
		collection.add(57.0);
		collection.add(87.0);
		collection.add(175.0);
		collection.add(8.0);
		collection.add(179.0);
		collection.add(21.0);
		collection.add(67.0);
		collection.add(36.0);
		collection.add(191.0);
		collection.add(113.0);
		collection.add(1.0);
		collection.add(179.0);
		collection.add(87.0);
		collection.add(130.0);
		collection.add(25.0);
		collection.add(158.0);
		collection.add(15.0);
		collection.add(79.0);
		collection.add(97.0);
		collection.add(106.0);
		collection.add(42.0);
		collection.add(51.0);
		collection.add(159.0);
		collection.add(186.0);
		collection.add(15.0);
		collection.add(24.0);
		collection.add(34.0);
		collection.add(22.0);
		collection.add(175.0);
		collection.add(138.0);
		collection.add(129.0);
		collection.add(120.0);
		collection.add(20.0);
		collection.add(68.0);
		collection.add(37.0);
		collection.add(96.0);
		collection.add(113.0);
		collection.add(31.0);
		collection.add(3.0);
		collection.add(138.0);
		collection.add(158.0);
		collection.add(60.0);
		collection.add(147.0);
		collection.add(7.0);
		collection.add(103.0);
		collection.add(123.0);
		collection.add(78.0);
		collection.add(56.0);
		collection.add(160.0);
		collection.add(152.0);
		collection.add(82.0);
		collection.add(99.0);
		collection.add(121.0);
		collection.add(156.0);
		collection.add(81.0);
		collection.add(153.0);
		collection.add(161.0);
		collection.add(172.0);
		collection.add(109.0);
		collection.add(100.0);
		collection.add(100.0);
		collection.add(171.0);
		collection.add(185.0);
		collection.add(159.0);
		collection.add(77.0);
		collection.add(92.0);
		collection.add(122.0);
		collection.add(152.0);
		collection.add(143.0);
		collection.add(184.0);
		collection.add(48.0);
		collection.add(190.0);
		collection.add(67.0);
		collection.add(99.0);
		collection.add(126.0);
		collection.add(64.0);
		collection.add(67.0);
		collection.add(129.0);
		collection.add(23.0);
		collection.add(105.0);
		collection.add(39.0);
		collection.add(21.0);
		collection.add(111.0);
		collection.add(94.0);
		collection.add(164.0);
		collection.add(102.0);
		collection.add(161.0);
		collection.add(25.0);
		collection.add(42.0);
		collection.add(148.0);
		collection.add(198.0);
		collection.add(148.0);
		collection.add(56.0);
		collection.add(177.0);
		collection.add(65.0);
		collection.add(197.0);
		collection.add(22.0);
		collection.add(3.0);
		collection.add(137.0);
		collection.add(61.0);
		collection.add(139.0);
		collection.add(136.0);
		collection.add(6.0);
		collection.add(165.0);
		collection.add(194.0);
		collection.add(91.0);
		collection.add(13.0);
		collection.add(189.0);
		collection.add(71.0);
		collection.add(37.0);
		collection.add(111.0);
		collection.add(37.0);
		collection.add(172.0);
		collection.add(151.0);
		collection.add(58.0);
		collection.add(37.0);
		collection.add(28.0);
		collection.add(115.0);
		collection.add(184.0);
		collection.add(16.0);
		collection.add(108.0);
		collection.add(1.0);
		collection.add(144.0);
		collection.add(91.0);
		collection.add(177.0);
		collection.add(5.0);
		collection.add(26.0);
		collection.add(84.0);
		collection.add(121.0);
		collection.add(68.0);
		collection.add(100.0);
		collection.add(82.0);
		collection.add(131.0);
		collection.add(42.0);
		collection.add(96.0);
		collection.add(33.0);
		collection.add(166.0);
		collection.add(8.0);
		collection.add(164.0);
		collection.add(7.0);
		collection.add(174.0);
		collection.add(5.0);
		collection.add(10.0);
		collection.add(37.0);
		collection.add(193.0);
		collection.add(65.0);
		collection.add(49.0);
		collection.add(99.0);
		collection.add(114.0);
		collection.add(71.0);
		collection.add(19.0);
		collection.add(73.0);
		collection.add(65.0);
		collection.add(141.0);
		collection.add(108.0);
		collection.add(67.0);
		collection.add(151.0);
		collection.add(129.0);
		collection.add(5.0);
		collection.add(179.0);
		collection.add(74.0);
		collection.add(100.0);
		collection.add(118.0);
		collection.add(135.0);
		collection.add(195.0);
		collection.add(90.0);
		collection.add(163.0);
		collection.add(15.0);
		collection.add(112.0);
		collection.add(76.0);
		collection.add(176.0);
		collection.add(143.0);
		collection.add(146.0);
		collection.add(126.0);
		collection.add(131.0);
		collection.add(153.0);
		collection.add(115.0);
		collection.add(2.0);
		collection.add(61.0);
		collection.add(142.0);
		collection.add(125.0);
		collection.add(184.0);
		collection.add(156.0);
		collection.add(64.0);
		collection.add(68.0);
		collection.add(103.0);
		collection.add(35.0);
		collection.add(166.0);
		collection.add(197.0);
		collection.add(66.0);
		collection.add(74.0);
		collection.add(111.0);
		collection.add(101.0);
		collection.add(154.0);
		collection.add(121.0);
		collection.add(149.0);
		collection.add(169.0);
		collection.add(103.0);
		collection.add(12.0);
		collection.add(37.0);
		collection.add(180.0);
		collection.add(152.0);
		collection.add(158.0);
		collection.add(115.0);
		collection.add(129.0);
		collection.add(123.0);
		collection.add(19.0);
		collection.add(55.0);
		collection.add(146.0);
		collection.add(1.0);
		collection.add(137.0);
		collection.add(72.0);
		collection.add(73.0);
		collection.add(22.0);
		collection.add(10.0);
		collection.add(119.0);
		collection.add(111.0);
		collection.add(56.0);
		collection.add(93.0);
		collection.add(37.0);
		collection.add(107.0);
		collection.add(122.0);
		collection.add(173.0);
		collection.add(164.0);
		collection.add(160.0);
		collection.add(153.0);
		collection.add(140.0);
		collection.add(116.0);
		collection.add(166.0);
		collection.add(63.0);
		collection.add(142.0);
		collection.add(129.0);
		collection.add(175.0);
		collection.add(32.0);
		collection.add(140.0);
		collection.add(184.0);
		collection.add(54.0);
		collection.add(50.0);
		collection.add(107.0);
		collection.add(13.0);
		collection.add(124.0);
		collection.add(52.0);
		collection.add(187.0);
		collection.add(198.0);
		collection.add(133.0);
		collection.add(62.0);
		collection.add(42.0);
		collection.add(2.0);
		collection.add(127.0);
		collection.add(66.0);
		collection.add(154.0);
		collection.add(94.0);
		collection.add(161.0);
		collection.add(177.0);
		collection.add(5.0);
		collection.add(91.0);
		collection.add(41.0);
		collection.add(189.0);
		collection.add(79.0);
		collection.add(34.0);
		collection.add(194.0);
		collection.add(130.0);
		collection.add(115.0);
		collection.add(31.0);
		collection.add(31.0);
		collection.add(94.0);
		collection.add(90.0);
		collection.add(1.0);
		collection.add(87.0);
		collection.add(107.0);
		collection.add(10.0);
		collection.add(117.0);
		collection.add(156.0);
		collection.add(199.0);
		collection.add(4.0);
		collection.add(106.0);
		collection.add(144.0);
		collection.add(143.0);
		collection.add(74.0);
		collection.add(27.0);
		collection.add(98.0);
		collection.add(22.0);
		collection.add(165.0);
		collection.add(40.0);
		collection.add(148.0);
		collection.add(41.0);
		collection.add(11.0);
		collection.add(188.0);
		collection.add(122.0);
		collection.add(194.0);
		collection.add(164.0);
		collection.add(102.0);
		collection.add(12.0);
		collection.add(139.0);
		collection.add(70.0);
		collection.add(135.0);
		collection.add(199.0);
		collection.add(124.0);
		collection.add(63.0);
		collection.add(56.0);
		collection.add(184.0);
		collection.add(115.0);
		collection.add(134.0);
		collection.add(41.0);
		collection.add(10.0);
		collection.add(112.0);
		collection.add(196.0);
		collection.add(115.0);
		collection.add(112.0);
		collection.add(29.0);
		collection.add(23.0);
		collection.add(106.0);
		collection.add(121.0);
		collection.add(86.0);
		collection.add(180.0);
		collection.add(77.0);
		collection.add(101.0);
		collection.add(180.0);
		collection.add(42.0);
		collection.add(170.0);
		collection.add(133.0);
		collection.add(180.0);
		collection.add(57.0);
		collection.add(170.0);
		collection.add(34.0);
		collection.add(12.0);
		collection.add(146.0);
		collection.add(71.0);
		collection.add(64.0);
		collection.add(185.0);
		collection.add(76.0);
		collection.add(26.0);
		collection.add(99.0);
		collection.add(38.0);
		collection.add(197.0);
		collection.add(124.0);
		collection.add(57.0);
		collection.add(52.0);
		collection.add(87.0);
		collection.add(171.0);
		collection.add(185.0);
		collection.add(118.0);
		collection.add(95.0);
		collection.add(35.0);
		collection.add(48.0);
		collection.add(16.0);
		collection.add(55.0);
		collection.add(122.0);
		collection.add(27.0);
		collection.add(192.0);
		collection.add(191.0);
		collection.add(145.0);
		collection.add(168.0);
		collection.add(133.0);
		collection.add(72.0);
		collection.add(1.0);
		collection.add(57.0);
		collection.add(32.0);
		collection.add(4.0);
		collection.add(46.0);
		collection.add(161.0);
		collection.add(72.0);
		collection.add(79.0);
		collection.add(62.0);
		collection.add(193.0);
		collection.add(87.0);
		collection.add(47.0);
		collection.add(171.0);
		collection.add(166.0);
		collection.add(6.0);
		collection.add(199.0);
		collection.add(15.0);
		collection.add(185.0);
		collection.add(130.0);
		collection.add(96.0);
		collection.add(48.0);
		collection.add(70.0);
		collection.add(115.0);
		collection.add(94.0);
		collection.add(57.0);
		collection.add(26.0);
		collection.add(1.0);
		collection.add(126.0);
		collection.add(6.0);
		collection.add(25.0);
		collection.add(65.0);
		collection.add(122.0);
		collection.add(82.0);
		collection.add(34.0);
		collection.add(60.0);
		collection.add(111.0);
		collection.add(192.0);
		collection.add(188.0);
		collection.add(150.0);
		collection.add(149.0);
		collection.add(173.0);
		collection.add(170.0);
		collection.add(80.0);
		collection.add(109.0);
		collection.add(109.0);
		collection.add(79.0);
		collection.add(109.0);
		collection.add(113.0);
		collection.add(182.0);
		collection.add(176.0);
		collection.add(72.0);
		collection.add(21.0);
		collection.add(154.0);
		collection.add(194.0);
		collection.add(113.0);
		collection.add(193.0);
		collection.add(186.0);
		collection.add(142.0);
		collection.add(16.0);
		collection.add(128.0);
		collection.add(152.0);
		collection.add(53.0);
		collection.add(56.0);
		collection.add(182.0);
		collection.add(188.0);
		collection.add(44.0);
		collection.add(97.0);
		collection.add(159.0);
		collection.add(195.0);
		collection.add(46.0);
		collection.add(119.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=5)
	@Measurement(time=5,iterations=30)
	public void JArraySequence(Blackhole bh) {
		bh.consume(collection.remove(95));
		bh.consume(collection.addAll(java.util.Arrays.asList(45.0,61.0,130.0,38.0,137.0)));
		bh.consume(collection.get(54));
		bh.consume(collection.indexOf(102.0));
		bh.consume(collection.set(120, 130.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(78.0,70.0,94.0)));
		bh.consume(collection.contains(170.0));
		bh.consume(collection.contains(143.0));
		bh.consume(collection.remove(110));
		bh.consume(collection.remove(107));
		bh.consume(collection.addAll(133, java.util.Arrays.asList(150.0,45.0,68.0,81.0,6.0)));
		bh.consume(collection.remove(159));
		collection.add(86.0);
		bh.consume(collection.set(76, 140.0));
		collection.remove(46.0);
		bh.consume(collection.set(86, 179.0));
		bh.consume(collection.indexOf(8.0));
		bh.consume(collection.remove(83));
		collection.add(0, 169.0);
		bh.consume(collection.remove(17));
		collection.remove(145.0);
		collection.add(0, 63.0);
		bh.consume(collection.remove(86));
		bh.consume(collection.contains(180.0));
		bh.consume(collection.remove(24));
		bh.consume(collection.lastIndexOf(102.0));
		bh.consume(collection.set(48, 39.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(104.0,151.0,170.0,174.0)));
		collection.add(165, 142.0);
		bh.consume(collection.lastIndexOf(174.0));
		bh.consume(collection.indexOf(74.0));
		bh.consume(collection.contains(1.0));
		bh.consume(collection.set(97, 137.0));
		bh.consume(collection.contains(89.0));
		collection.remove(144.0);
		collection.remove(149.0);
		bh.consume(collection.set(75, 16.0));
		bh.consume(collection.remove(165));
		bh.consume(collection.contains(15.0));
		bh.consume(collection.addAll(47, java.util.Arrays.asList(83.0,164.0,47.0,23.0,179.0,95.0,60.0,195.0,121.0)));
		bh.consume(collection.set(7, 80.0));
		bh.consume(collection.indexOf(48.0));
		bh.consume(collection.set(5, 58.0));
		bh.consume(collection.get(64));
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,148.0,27.0,133.0)));
		bh.consume(collection.addAll(121, java.util.Arrays.asList(123.0,164.0,95.0,16.0)));
		bh.consume(collection.set(154, 29.0));
		bh.consume(collection.remove(123));
		bh.consume(collection.get(114));
		bh.consume(collection.set(168, 16.0));
		collection.add(102, 98.0);
		bh.consume(collection.set(142, 4.0));
		bh.consume(collection.indexOf(125.0));
		collection.remove(100.0);
		bh.consume(collection.set(72, 51.0));
		bh.consume(collection.addAll(33, java.util.Arrays.asList(67.0,47.0,108.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(136.0,70.0,53.0,17.0,46.0,168.0)));
		bh.consume(collection.set(3, 168.0));
		collection.add(0, 192.0);
		collection.add(115.0);
		bh.consume(collection.contains(16.0));
		bh.consume(collection.set(100, 93.0));
		bh.consume(collection.set(91, 116.0));
		collection.remove(74.0);
		bh.consume(collection.contains(90.0));
		bh.consume(collection.set(117, 13.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(12.0,111.0,81.0,182.0)));
		bh.consume(collection.indexOf(171.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,42.0,148.0,4.0)));
		bh.consume(collection.contains(171.0));
		collection.add(165, 17.0);
		bh.consume(collection.lastIndexOf(152.0));
		bh.consume(collection.set(171, 82.0));
		bh.consume(collection.set(180, 133.0));
		bh.consume(collection.lastIndexOf(177.0));
		collection.remove(115.0);
		bh.consume(collection.remove(165));
		collection.remove(193.0);
		collection.add(0, 84.0);
		collection.add(176, 153.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(4.0,158.0,159.0,185.0,104.0,27.0,130.0,28.0)));
		collection.add(51.0);
		bh.consume(collection.set(32, 95.0));
		bh.consume(collection.contains(188.0));
		bh.consume(collection.remove(104));
		bh.consume(collection.remove(91));
		bh.consume(collection.set(198, 162.0));
		bh.consume(collection.remove(108));
		bh.consume(collection.indexOf(143.0));
		collection.remove(72.0);
		bh.consume(collection.contains(12.0));
		bh.consume(collection.contains(57.0));
		bh.consume(collection.remove(112));
		bh.consume(collection.remove(139));
		bh.consume(collection.contains(150.0));
		collection.add(168, 35.0);
		bh.consume(collection.get(3));
		collection.add(88, 186.0);
		bh.consume(collection.remove(81));
		collection.add(50.0);
		bh.consume(collection.get(192));
		bh.consume(collection.addAll(java.util.Arrays.asList(90.0,34.0,110.0,25.0,44.0,76.0,148.0,179.0)));
		bh.consume(collection.get(11));
		collection.add(91, 132.0);
		collection.remove(15.0);
		bh.consume(collection.addAll(40, java.util.Arrays.asList(50.0,98.0,13.0,43.0,22.0,30.0,70.0,46.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(146.0,120.0,87.0,163.0,131.0)));
		bh.consume(collection.indexOf(63.0));
		bh.consume(collection.addAll(152, java.util.Arrays.asList(116.0,23.0,13.0,31.0,78.0,163.0)));
		bh.consume(collection.get(10));
		bh.consume(collection.lastIndexOf(15.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(62.0,75.0,143.0,68.0,80.0,2.0)));
		bh.consume(collection.contains(17.0));
		bh.consume(collection.remove(121));
		bh.consume(collection.addAll(25, java.util.Arrays.asList(99.0,59.0,68.0,33.0,36.0,95.0)));
		bh.consume(collection.addAll(148, java.util.Arrays.asList(51.0,182.0,186.0,59.0,59.0)));
		collection.remove(167.0);
		bh.consume(collection.remove(63));
		collection.add(161, 181.0);
		bh.consume(collection.remove(26));
		collection.remove(169.0);
		bh.consume(collection.get(67));
		bh.consume(collection.set(97, 37.0));
		bh.consume(collection.set(41, 131.0));
		collection.add(89.0);
		bh.consume(collection.remove(2));
		bh.consume(collection.contains(45.0));
		bh.consume(collection.addAll(101, java.util.Arrays.asList(17.0,43.0,122.0,24.0,60.0)));
		bh.consume(collection.indexOf(40.0));
		bh.consume(collection.contains(30.0));
		collection.add(89.0);
		collection.add(0, 143.0);
		bh.consume(collection.remove(144));
		bh.consume(collection.addAll(33, java.util.Arrays.asList(72.0,116.0,15.0)));
		bh.consume(collection.contains(85.0));
		bh.consume(collection.lastIndexOf(51.0));
		bh.consume(collection.indexOf(103.0));
		collection.add(138.0);
		bh.consume(collection.remove(183));
		bh.consume(collection.addAll(191, java.util.Arrays.asList(136.0,131.0,53.0,59.0,194.0,5.0)));
		collection.add(173, 54.0);
		bh.consume(collection.remove(5));
		bh.consume(collection.set(103, 172.0));
		collection.add(0, 63.0);
		collection.add(123, 161.0);
		collection.add(79, 51.0);
		collection.add(102.0);
		collection.add(36.0);
		bh.consume(collection.addAll(148, java.util.Arrays.asList(95.0,67.0,46.0,1.0,177.0,66.0,187.0)));
		collection.add(0, 105.0);
		collection.add(0, 40.0);
		bh.consume(collection.remove(66));
		bh.consume(collection.indexOf(41.0));
		bh.consume(collection.set(4, 34.0));
		bh.consume(collection.indexOf(30.0));
		bh.consume(collection.set(167, 181.0));
		bh.consume(collection.remove(122));
		collection.add(145, 157.0);
		collection.add(0, 28.0);
		bh.consume(collection.contains(109.0));
		bh.consume(collection.set(110, 85.0));
		collection.add(192, 62.0);
		bh.consume(collection.contains(187.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(189.0,138.0,90.0,62.0,116.0,100.0,128.0)));
		bh.consume(collection.contains(88.0));
		collection.add(76.0);
		bh.consume(collection.contains(47.0));
		bh.consume(collection.get(165));
		bh.consume(collection.contains(124.0));
		bh.consume(collection.addAll(51, java.util.Arrays.asList(173.0,194.0,78.0,191.0,9.0,179.0,195.0,3.0,147.0)));
		bh.consume(collection.set(196, 118.0));
		bh.consume(collection.remove(91));
		bh.consume(collection.remove(157));
		bh.consume(collection.contains(3.0));
		bh.consume(collection.set(138, 52.0));
		bh.consume(collection.indexOf(169.0));
		bh.consume(collection.get(100));
		collection.remove(67.0);
		bh.consume(collection.addAll(75, java.util.Arrays.asList(165.0,42.0,127.0)));
		bh.consume(collection.get(110));
		collection.add(153, 91.0);
		bh.consume(collection.get(159));
		collection.add(0, 160.0);
		collection.add(22, 104.0);
		bh.consume(collection.remove(194));
		bh.consume(collection.remove(177));
		bh.consume(collection.indexOf(148.0));
		bh.consume(collection.contains(32.0));
		bh.consume(collection.addAll(134, java.util.Arrays.asList(176.0,59.0,99.0)));
		collection.add(162.0);
		bh.consume(collection.addAll(184, java.util.Arrays.asList(16.0,104.0,147.0,96.0,12.0,181.0)));
		bh.consume(collection.get(73));
		collection.remove(76.0);
		bh.consume(collection.remove(163));
		bh.consume(collection.remove(36));
		bh.consume(collection.addAll(160, java.util.Arrays.asList(5.0,31.0,175.0,37.0,76.0,22.0)));
		bh.consume(collection.contains(198.0));
		collection.add(64.0);
		bh.consume(collection.remove(73));
		bh.consume(collection.indexOf(123.0));
		bh.consume(collection.contains(189.0));
		bh.consume(collection.indexOf(66.0));
		bh.consume(collection.contains(96.0));
		bh.consume(collection.contains(90.0));
		bh.consume(collection.set(54, 126.0));
		bh.consume(collection.addAll(131, java.util.Arrays.asList(81.0,137.0,178.0,33.0,147.0,191.0,4.0,197.0,41.0)));
		bh.consume(collection.remove(18));
		collection.remove(155.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(71.0,176.0,19.0,197.0,128.0,34.0)));
		bh.consume(collection.set(20, 180.0));
		collection.add(46, 195.0);
		bh.consume(collection.addAll(121, java.util.Arrays.asList(50.0,132.0,17.0,109.0,49.0,60.0,122.0)));
		bh.consume(collection.set(51, 145.0));
		collection.add(0, 120.0);
		bh.consume(collection.indexOf(19.0));
		bh.consume(collection.addAll(55, java.util.Arrays.asList(199.0,173.0,90.0,192.0,15.0,86.0)));
		bh.consume(collection.contains(20.0));
		bh.consume(collection.set(35, 114.0));
		bh.consume(collection.remove(89));
		bh.consume(collection.set(118, 155.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(16.0,197.0,96.0,49.0,125.0)));
		bh.consume(collection.contains(23.0));
		bh.consume(collection.addAll(169, java.util.Arrays.asList(147.0,144.0,162.0,36.0,8.0,176.0,117.0,122.0)));
		bh.consume(collection.get(127));
		collection.add(0, 50.0);
		bh.consume(collection.contains(1.0));
		bh.consume(collection.get(79));
		bh.consume(collection.addAll(108, java.util.Arrays.asList(97.0,53.0,193.0,2.0)));
		bh.consume(collection.get(167));
		bh.consume(collection.addAll(183, java.util.Arrays.asList(143.0,175.0,160.0,103.0,88.0,121.0,30.0)));
		bh.consume(collection.get(154));
		collection.remove(50.0);
		collection.add(56, 67.0);
		bh.consume(collection.contains(134.0));
		bh.consume(collection.addAll(26, java.util.Arrays.asList(169.0,67.0,189.0,189.0,23.0,181.0,30.0,108.0)));
		bh.consume(collection.set(25, 93.0));
		bh.consume(collection.set(15, 165.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(146.0,186.0,54.0,101.0,116.0,78.0,120.0,55.0,38.0)));
		collection.add(0, 99.0);
		collection.add(0, 34.0);
		bh.consume(collection.set(56, 191.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(33.0,161.0,112.0,136.0,100.0,176.0,151.0)));
		bh.consume(collection.addAll(163, java.util.Arrays.asList(171.0,38.0,166.0,53.0,84.0,130.0)));
		bh.consume(collection.remove(126));
		bh.consume(collection.set(99, 139.0));
		bh.consume(collection.contains(16.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,21.0,169.0,62.0,196.0)));
		bh.consume(collection.set(6, 100.0));
		bh.consume(collection.contains(41.0));
		collection.remove(38.0);
		collection.add(30, 129.0);
		collection.add(0, 32.0);
		bh.consume(collection.set(168, 23.0));
		bh.consume(collection.set(25, 153.0));
		collection.remove(77.0);
		bh.consume(collection.remove(94));
		bh.consume(collection.get(184));
		bh.consume(collection.contains(171.0));
		bh.consume(collection.set(35, 38.0));
		bh.consume(collection.remove(64));
		bh.consume(collection.set(68, 70.0));
		bh.consume(collection.remove(17));
		bh.consume(collection.get(184));
		collection.add(62, 99.0);
		bh.consume(collection.addAll(98, java.util.Arrays.asList(34.0,137.0,64.0,41.0,86.0,46.0)));
		bh.consume(collection.remove(23));
		bh.consume(collection.remove(159));
		bh.consume(collection.contains(163.0));
		bh.consume(collection.set(27, 30.0));
		bh.consume(collection.remove(124));
		bh.consume(collection.indexOf(51.0));
		collection.add(57, 48.0);
		collection.add(8, 171.0);
		bh.consume(collection.get(22));
		bh.consume(collection.set(193, 162.0));
		bh.consume(collection.remove(139));
		collection.add(85, 140.0);
		bh.consume(collection.indexOf(97.0));
		bh.consume(collection.indexOf(153.0));
		bh.consume(collection.remove(136));
		bh.consume(collection.remove(99));
		collection.add(17, 183.0);
		bh.consume(collection.set(69, 119.0));
		bh.consume(collection.addAll(29, java.util.Arrays.asList(143.0,24.0,181.0,162.0,159.0,114.0,55.0,22.0)));
		bh.consume(collection.remove(86));
		bh.consume(collection.addAll(java.util.Arrays.asList(94.0,82.0,98.0,122.0,83.0,82.0,136.0,54.0)));
		bh.consume(collection.indexOf(96.0));
		collection.add(195, 80.0);
		bh.consume(collection.addAll(65, java.util.Arrays.asList(78.0,175.0,132.0,87.0,183.0,67.0)));
		bh.consume(collection.addAll(69, java.util.Arrays.asList(91.0,38.0,121.0,181.0,29.0)));
		bh.consume(collection.indexOf(91.0));
		collection.add(84.0);
		collection.add(113, 182.0);
		bh.consume(collection.contains(16.0));
		bh.consume(collection.contains(120.0));
		bh.consume(collection.get(39));
		bh.consume(collection.contains(55.0));
		bh.consume(collection.set(7, 80.0));
		bh.consume(collection.indexOf(189.0));
		bh.consume(collection.remove(143));
		collection.remove(116.0);
		collection.add(147, 141.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(187.0,147.0,120.0,73.0,73.0)));
		collection.add(0, 55.0);
		bh.consume(collection.remove(53));
		bh.consume(collection.set(198, 67.0));
		collection.add(78, 106.0);
		bh.consume(collection.contains(69.0));
		collection.add(83.0);
		collection.remove(67.0);
		collection.remove(26.0);
		bh.consume(collection.addAll(167, java.util.Arrays.asList(66.0,62.0,9.0,75.0,63.0,186.0,5.0,178.0)));
		bh.consume(collection.get(146));
		bh.consume(collection.remove(88));
		bh.consume(collection.set(10, 196.0));
		bh.consume(collection.indexOf(51.0));
		bh.consume(collection.addAll(59, java.util.Arrays.asList(146.0,70.0,86.0)));
		bh.consume(collection.contains(136.0));
		bh.consume(collection.remove(95));
		bh.consume(collection.contains(101.0));
		bh.consume(collection.addAll(89, java.util.Arrays.asList(166.0,103.0,134.0,62.0)));
		collection.add(0, 14.0);
		bh.consume(collection.addAll(198, java.util.Arrays.asList(189.0,175.0,12.0,17.0,161.0,102.0,184.0,99.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(66.0,6.0,54.0,85.0,140.0,6.0)));
		bh.consume(collection.remove(123));
		bh.consume(collection.contains(105.0));
		collection.add(0, 17.0);
		bh.consume(collection.lastIndexOf(177.0));
		collection.add(11, 141.0);
		bh.consume(collection.contains(31.0));
		bh.consume(collection.set(7, 83.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(108.0,74.0,154.0,109.0,15.0,118.0,28.0,115.0)));
		bh.consume(collection.contains(59.0));
		collection.remove(121.0);
		bh.consume(collection.addAll(107, java.util.Arrays.asList(167.0,134.0,45.0,117.0,64.0,107.0,155.0,103.0,74.0)));
		collection.remove(96.0);
		bh.consume(collection.contains(66.0));
		bh.consume(collection.remove(37));
		bh.consume(collection.set(111, 89.0));
		collection.add(0, 149.0);
		bh.consume(collection.set(38, 110.0));
		bh.consume(collection.set(76, 100.0));
		bh.consume(collection.contains(184.0));
		bh.consume(collection.contains(135.0));
		bh.consume(collection.contains(79.0));
		bh.consume(collection.addAll(44, java.util.Arrays.asList(144.0,183.0,76.0,170.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(24.0,168.0,53.0)));
		bh.consume(collection.remove(158));
		bh.consume(collection.set(186, 39.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(116.0,62.0,134.0,18.0,1.0,118.0,27.0,102.0,36.0)));
		bh.consume(collection.addAll(1, java.util.Arrays.asList(45.0,83.0,120.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(102.0,186.0,10.0,54.0,74.0,173.0,22.0,117.0)));
		bh.consume(collection.contains(91.0));
		collection.add(188.0);
		bh.consume(collection.remove(92));
		bh.consume(collection.contains(187.0));
		bh.consume(collection.addAll(123, java.util.Arrays.asList(167.0,85.0,70.0,11.0,134.0,119.0,182.0)));
		collection.add(0, 6.0);
		collection.add(88.0);
		bh.consume(collection.set(47, 14.0));
		bh.consume(collection.set(91, 154.0));
		bh.consume(collection.addAll(109, java.util.Arrays.asList(157.0,57.0,182.0,197.0,36.0,182.0,35.0)));
		collection.remove(83.0);
		bh.consume(collection.get(188));
		bh.consume(collection.remove(67));
		bh.consume(collection.remove(22));
		bh.consume(collection.set(153, 166.0));
		bh.consume(collection.contains(5.0));
		collection.add(0, 12.0);
		bh.consume(collection.set(128, 79.0));
		bh.consume(collection.remove(114));
		bh.consume(collection.set(25, 166.0));
		bh.consume(collection.remove(150));
		collection.remove(45.0);
		bh.consume(collection.contains(37.0));
		bh.consume(collection.addAll(75, java.util.Arrays.asList(99.0,130.0,133.0,61.0,156.0,84.0,160.0,42.0,101.0)));
		bh.consume(collection.addAll(138, java.util.Arrays.asList(51.0,143.0,104.0,153.0,192.0,134.0,161.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(32.0,142.0,55.0,52.0,165.0,1.0)));
		bh.consume(collection.addAll(165, java.util.Arrays.asList(121.0,50.0,67.0,65.0,63.0)));
		bh.consume(collection.contains(164.0));
		bh.consume(collection.remove(146));
		bh.consume(collection.remove(139));
		bh.consume(collection.get(25));
		collection.remove(126.0);
		bh.consume(collection.remove(121));
		collection.remove(133.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(200.0,158.0,156.0,53.0,136.0,169.0,32.0,157.0,66.0)));
		bh.consume(collection.set(1, 18.0));
		collection.add(0, 108.0);
		collection.remove(114.0);
		bh.consume(collection.set(21, 40.0));
		bh.consume(collection.remove(185));
		bh.consume(collection.set(47, 139.0));
		collection.remove(22.0);
		bh.consume(collection.remove(50));
		bh.consume(collection.contains(41.0));
		bh.consume(collection.get(99));
		bh.consume(collection.indexOf(32.0));
		bh.consume(collection.remove(75));
		bh.consume(collection.addAll(127, java.util.Arrays.asList(36.0,3.0,154.0,8.0,55.0,115.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(42.0,71.0,47.0,54.0,88.0,154.0,198.0,114.0,129.0)));
		bh.consume(collection.set(61, 37.0));
		bh.consume(collection.remove(125));
		bh.consume(collection.remove(129));
		bh.consume(collection.set(33, 39.0));
		collection.add(57, 200.0);
		bh.consume(collection.contains(149.0));
		bh.consume(collection.remove(196));
		bh.consume(collection.get(54));
		bh.consume(collection.contains(84.0));
		collection.add(0, 121.0);
		bh.consume(collection.contains(55.0));
		bh.consume(collection.addAll(157, java.util.Arrays.asList(181.0,92.0,33.0,146.0)));
		bh.consume(collection.addAll(13, java.util.Arrays.asList(11.0,1.0,128.0,87.0)));
		bh.consume(collection.set(108, 185.0));
		bh.consume(collection.get(153));
		bh.consume(collection.addAll(34, java.util.Arrays.asList(144.0,16.0,200.0,98.0,193.0,108.0)));
		bh.consume(collection.set(153, 54.0));
		bh.consume(collection.set(62, 85.0));
		collection.add(0, 118.0);
		bh.consume(collection.contains(174.0));
		bh.consume(collection.set(96, 61.0));
		bh.consume(collection.set(81, 105.0));
		bh.consume(collection.addAll(154, java.util.Arrays.asList(36.0,10.0,99.0,70.0,187.0,14.0,82.0,1.0)));
		bh.consume(collection.contains(8.0));
		bh.consume(collection.remove(112));
		bh.consume(collection.set(107, 176.0));
		collection.add(78, 75.0);
		bh.consume(collection.set(91, 12.0));
		bh.consume(collection.remove(191));
		collection.remove(200.0);
		bh.consume(collection.remove(128));
		bh.consume(collection.remove(155));
		collection.add(65.0);
		bh.consume(collection.contains(182.0));
		bh.consume(collection.remove(187));
		bh.consume(collection.set(180, 183.0));
		bh.consume(collection.remove(139));
		bh.consume(collection.remove(108));
		bh.consume(collection.contains(12.0));
		bh.consume(collection.remove(177));
		bh.consume(collection.indexOf(192.0));
		bh.consume(collection.remove(114));
		bh.consume(collection.addAll(71, java.util.Arrays.asList(77.0,41.0,113.0)));
		bh.consume(collection.remove(120));
		bh.consume(collection.indexOf(184.0));
		bh.consume(collection.remove(120));
		bh.consume(collection.remove(192));
		bh.consume(collection.remove(8));
		bh.consume(collection.indexOf(25.0));
		bh.consume(collection.remove(153));
		bh.consume(collection.indexOf(131.0));
		collection.add(108, 17.0);
		bh.consume(collection.set(29, 43.0));
		bh.consume(collection.contains(6.0));
		collection.add(187.0);
		bh.consume(collection.indexOf(81.0));
		bh.consume(collection.addAll(143, java.util.Arrays.asList(76.0,43.0,134.0,169.0,57.0,136.0,162.0,113.0)));
		collection.add(63, 119.0);
		bh.consume(collection.remove(42));
		bh.consume(collection.lastIndexOf(190.0));
		collection.remove(58.0);
		bh.consume(collection.remove(61));
		bh.consume(collection.addAll(java.util.Arrays.asList(180.0,86.0,154.0)));
		collection.add(30.0);
		bh.consume(collection.set(59, 131.0));
		bh.consume(collection.set(156, 200.0));
		bh.consume(collection.set(80, 181.0));
		bh.consume(collection.contains(180.0));
		collection.add(2, 177.0);
		bh.consume(collection.set(75, 175.0));
		collection.add(0, 117.0);
		collection.add(1, 84.0);
		bh.consume(collection.contains(132.0));
		bh.consume(collection.remove(114));
		collection.add(0, 29.0);
		collection.add(55, 157.0);
		bh.consume(collection.lastIndexOf(169.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(68.0,135.0,13.0,108.0,109.0,162.0,122.0,108.0)));
		collection.remove(35.0);
		collection.add(0, 113.0);
		bh.consume(collection.remove(123));
		bh.consume(collection.contains(3.0));
		collection.add(165, 96.0);
		bh.consume(collection.contains(191.0));
		bh.consume(collection.contains(179.0));
		collection.remove(108.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(104.0,130.0,28.0,164.0,127.0,179.0,137.0,55.0)));
		bh.consume(collection.remove(87));
		bh.consume(collection.remove(112));
		bh.consume(collection.addAll(java.util.Arrays.asList(53.0,134.0,34.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(157.0,61.0,110.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(98.0,44.0,33.0,63.0,153.0,79.0,85.0,26.0)));
		bh.consume(collection.lastIndexOf(112.0));
		collection.add(0, 121.0);
		collection.remove(97.0);
		bh.consume(collection.remove(78));
		bh.consume(collection.indexOf(20.0));
		bh.consume(collection.addAll(161, java.util.Arrays.asList(17.0,121.0,53.0,100.0,164.0)));
		bh.consume(collection.addAll(46, java.util.Arrays.asList(171.0,55.0,125.0,70.0)));
	}
}
