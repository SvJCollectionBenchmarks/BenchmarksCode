package com.adalbert;
import java.util.*;
import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.*;

@State(Scope.Benchmark)
public class J_Profile3AllSequences_JArraySequence_20220501200409607 {
	java.util.ArrayList<Double> collection = new java.util.ArrayList<>();
	@Setup(Level.Invocation)
	public void setupJArraySequence() {
		collection = new java.util.ArrayList<>();
		collection.add(24.0);
		collection.add(34.0);
		collection.add(31.0);
		collection.add(71.0);
		collection.add(135.0);
		collection.add(167.0);
		collection.add(14.0);
		collection.add(79.0);
		collection.add(13.0);
		collection.add(195.0);
		collection.add(91.0);
		collection.add(162.0);
		collection.add(199.0);
		collection.add(117.0);
		collection.add(110.0);
		collection.add(59.0);
		collection.add(158.0);
		collection.add(107.0);
		collection.add(89.0);
		collection.add(98.0);
		collection.add(19.0);
		collection.add(182.0);
		collection.add(32.0);
		collection.add(172.0);
		collection.add(170.0);
		collection.add(13.0);
		collection.add(119.0);
		collection.add(186.0);
		collection.add(57.0);
		collection.add(162.0);
		collection.add(112.0);
		collection.add(93.0);
		collection.add(23.0);
		collection.add(151.0);
		collection.add(69.0);
		collection.add(70.0);
		collection.add(9.0);
		collection.add(198.0);
		collection.add(10.0);
		collection.add(181.0);
		collection.add(24.0);
		collection.add(84.0);
		collection.add(4.0);
		collection.add(158.0);
		collection.add(72.0);
		collection.add(76.0);
		collection.add(4.0);
		collection.add(23.0);
		collection.add(3.0);
		collection.add(35.0);
		collection.add(86.0);
		collection.add(133.0);
		collection.add(172.0);
		collection.add(178.0);
		collection.add(179.0);
		collection.add(83.0);
		collection.add(117.0);
		collection.add(182.0);
		collection.add(11.0);
		collection.add(194.0);
		collection.add(44.0);
		collection.add(153.0);
		collection.add(155.0);
		collection.add(28.0);
		collection.add(68.0);
		collection.add(121.0);
		collection.add(41.0);
		collection.add(28.0);
		collection.add(27.0);
		collection.add(106.0);
		collection.add(4.0);
		collection.add(103.0);
		collection.add(45.0);
		collection.add(128.0);
		collection.add(155.0);
		collection.add(15.0);
		collection.add(171.0);
		collection.add(44.0);
		collection.add(30.0);
		collection.add(28.0);
		collection.add(44.0);
		collection.add(152.0);
		collection.add(36.0);
		collection.add(82.0);
		collection.add(111.0);
		collection.add(109.0);
		collection.add(12.0);
		collection.add(186.0);
		collection.add(192.0);
		collection.add(100.0);
		collection.add(68.0);
		collection.add(194.0);
		collection.add(64.0);
		collection.add(151.0);
		collection.add(163.0);
		collection.add(21.0);
		collection.add(151.0);
		collection.add(192.0);
		collection.add(4.0);
		collection.add(173.0);
		collection.add(86.0);
		collection.add(110.0);
		collection.add(145.0);
		collection.add(103.0);
		collection.add(159.0);
		collection.add(176.0);
		collection.add(78.0);
		collection.add(177.0);
		collection.add(111.0);
		collection.add(20.0);
		collection.add(15.0);
		collection.add(174.0);
		collection.add(192.0);
		collection.add(91.0);
		collection.add(131.0);
		collection.add(117.0);
		collection.add(94.0);
		collection.add(95.0);
		collection.add(125.0);
		collection.add(19.0);
		collection.add(166.0);
		collection.add(129.0);
		collection.add(187.0);
		collection.add(16.0);
		collection.add(85.0);
		collection.add(112.0);
		collection.add(184.0);
		collection.add(29.0);
		collection.add(24.0);
		collection.add(174.0);
		collection.add(130.0);
		collection.add(4.0);
		collection.add(35.0);
		collection.add(29.0);
		collection.add(90.0);
		collection.add(58.0);
		collection.add(75.0);
		collection.add(147.0);
		collection.add(193.0);
		collection.add(28.0);
		collection.add(4.0);
		collection.add(8.0);
		collection.add(61.0);
		collection.add(99.0);
		collection.add(132.0);
		collection.add(188.0);
		collection.add(123.0);
		collection.add(200.0);
		collection.add(111.0);
		collection.add(61.0);
		collection.add(117.0);
		collection.add(84.0);
		collection.add(104.0);
		collection.add(138.0);
		collection.add(55.0);
		collection.add(150.0);
		collection.add(161.0);
		collection.add(172.0);
		collection.add(116.0);
		collection.add(164.0);
		collection.add(187.0);
		collection.add(100.0);
		collection.add(177.0);
		collection.add(185.0);
		collection.add(18.0);
		collection.add(71.0);
		collection.add(193.0);
		collection.add(100.0);
		collection.add(83.0);
		collection.add(36.0);
		collection.add(70.0);
		collection.add(80.0);
		collection.add(4.0);
		collection.add(1.0);
		collection.add(143.0);
		collection.add(132.0);
		collection.add(9.0);
		collection.add(193.0);
		collection.add(37.0);
		collection.add(178.0);
		collection.add(168.0);
		collection.add(28.0);
		collection.add(22.0);
		collection.add(63.0);
		collection.add(99.0);
		collection.add(72.0);
		collection.add(21.0);
		collection.add(171.0);
		collection.add(103.0);
		collection.add(46.0);
		collection.add(141.0);
		collection.add(89.0);
		collection.add(97.0);
		collection.add(166.0);
		collection.add(180.0);
		collection.add(184.0);
		collection.add(71.0);
		collection.add(47.0);
		collection.add(123.0);
		collection.add(109.0);
		collection.add(36.0);
		collection.add(178.0);
		collection.add(58.0);
		collection.add(47.0);
		collection.add(86.0);
		collection.add(71.0);
		collection.add(65.0);
		collection.add(18.0);
		collection.add(179.0);
		collection.add(168.0);
		collection.add(33.0);
		collection.add(175.0);
		collection.add(186.0);
		collection.add(38.0);
		collection.add(175.0);
		collection.add(198.0);
		collection.add(57.0);
		collection.add(140.0);
		collection.add(117.0);
		collection.add(31.0);
		collection.add(161.0);
		collection.add(87.0);
		collection.add(167.0);
		collection.add(95.0);
		collection.add(151.0);
		collection.add(133.0);
		collection.add(93.0);
		collection.add(82.0);
		collection.add(65.0);
		collection.add(21.0);
		collection.add(132.0);
		collection.add(199.0);
		collection.add(128.0);
		collection.add(47.0);
		collection.add(168.0);
		collection.add(103.0);
		collection.add(153.0);
		collection.add(26.0);
		collection.add(14.0);
		collection.add(183.0);
		collection.add(36.0);
		collection.add(141.0);
		collection.add(157.0);
		collection.add(33.0);
		collection.add(199.0);
		collection.add(135.0);
		collection.add(74.0);
		collection.add(6.0);
		collection.add(144.0);
		collection.add(84.0);
		collection.add(162.0);
		collection.add(97.0);
		collection.add(198.0);
		collection.add(156.0);
		collection.add(177.0);
		collection.add(5.0);
		collection.add(64.0);
		collection.add(1.0);
		collection.add(67.0);
		collection.add(16.0);
		collection.add(150.0);
		collection.add(58.0);
		collection.add(119.0);
		collection.add(74.0);
		collection.add(88.0);
		collection.add(115.0);
		collection.add(28.0);
		collection.add(46.0);
		collection.add(92.0);
		collection.add(195.0);
		collection.add(175.0);
		collection.add(192.0);
		collection.add(163.0);
		collection.add(10.0);
		collection.add(60.0);
		collection.add(1.0);
		collection.add(89.0);
		collection.add(107.0);
		collection.add(145.0);
		collection.add(30.0);
		collection.add(100.0);
		collection.add(122.0);
		collection.add(136.0);
		collection.add(19.0);
		collection.add(160.0);
		collection.add(199.0);
		collection.add(190.0);
		collection.add(79.0);
		collection.add(157.0);
		collection.add(157.0);
		collection.add(193.0);
		collection.add(51.0);
		collection.add(15.0);
		collection.add(1.0);
		collection.add(133.0);
		collection.add(21.0);
		collection.add(110.0);
		collection.add(137.0);
		collection.add(163.0);
		collection.add(165.0);
		collection.add(185.0);
		collection.add(119.0);
		collection.add(155.0);
		collection.add(30.0);
		collection.add(125.0);
		collection.add(121.0);
		collection.add(159.0);
		collection.add(56.0);
		collection.add(47.0);
		collection.add(90.0);
		collection.add(196.0);
		collection.add(83.0);
		collection.add(152.0);
		collection.add(36.0);
		collection.add(180.0);
		collection.add(178.0);
		collection.add(12.0);
		collection.add(109.0);
		collection.add(199.0);
		collection.add(89.0);
		collection.add(167.0);
		collection.add(114.0);
		collection.add(112.0);
		collection.add(145.0);
		collection.add(186.0);
		collection.add(28.0);
		collection.add(20.0);
		collection.add(36.0);
		collection.add(85.0);
		collection.add(112.0);
		collection.add(136.0);
		collection.add(146.0);
		collection.add(190.0);
		collection.add(10.0);
		collection.add(127.0);
		collection.add(181.0);
		collection.add(185.0);
		collection.add(160.0);
		collection.add(71.0);
		collection.add(79.0);
		collection.add(28.0);
		collection.add(10.0);
		collection.add(186.0);
		collection.add(165.0);
		collection.add(136.0);
		collection.add(149.0);
		collection.add(133.0);
		collection.add(100.0);
		collection.add(119.0);
		collection.add(38.0);
		collection.add(198.0);
		collection.add(48.0);
		collection.add(177.0);
		collection.add(164.0);
		collection.add(177.0);
		collection.add(164.0);
		collection.add(134.0);
		collection.add(137.0);
		collection.add(40.0);
		collection.add(138.0);
		collection.add(68.0);
		collection.add(138.0);
		collection.add(66.0);
		collection.add(195.0);
		collection.add(115.0);
		collection.add(99.0);
		collection.add(161.0);
		collection.add(76.0);
		collection.add(167.0);
		collection.add(106.0);
		collection.add(54.0);
		collection.add(179.0);
		collection.add(57.0);
		collection.add(123.0);
		collection.add(55.0);
		collection.add(80.0);
		collection.add(140.0);
		collection.add(16.0);
		collection.add(91.0);
		collection.add(153.0);
		collection.add(18.0);
		collection.add(55.0);
		collection.add(65.0);
		collection.add(4.0);
		collection.add(115.0);
		collection.add(153.0);
		collection.add(111.0);
		collection.add(128.0);
		collection.add(94.0);
		collection.add(127.0);
		collection.add(2.0);
		collection.add(161.0);
		collection.add(190.0);
		collection.add(193.0);
		collection.add(93.0);
		collection.add(137.0);
		collection.add(172.0);
		collection.add(23.0);
		collection.add(191.0);
		collection.add(137.0);
		collection.add(156.0);
		collection.add(149.0);
		collection.add(186.0);
		collection.add(114.0);
		collection.add(22.0);
		collection.add(92.0);
		collection.add(170.0);
		collection.add(71.0);
		collection.add(84.0);
		collection.add(173.0);
		collection.add(27.0);
		collection.add(52.0);
		collection.add(164.0);
		collection.add(151.0);
		collection.add(131.0);
		collection.add(96.0);
		collection.add(169.0);
		collection.add(71.0);
		collection.add(139.0);
		collection.add(142.0);
		collection.add(51.0);
		collection.add(94.0);
		collection.add(114.0);
		collection.add(134.0);
		collection.add(199.0);
		collection.add(53.0);
		collection.add(45.0);
		collection.add(193.0);
		collection.add(57.0);
		collection.add(23.0);
		collection.add(108.0);
		collection.add(28.0);
		collection.add(110.0);
		collection.add(72.0);
		collection.add(52.0);
		collection.add(195.0);
		collection.add(15.0);
		collection.add(8.0);
		collection.add(140.0);
		collection.add(64.0);
		collection.add(83.0);
		collection.add(171.0);
		collection.add(43.0);
		collection.add(192.0);
		collection.add(103.0);
		collection.add(127.0);
		collection.add(145.0);
		collection.add(175.0);
		collection.add(55.0);
		collection.add(95.0);
		collection.add(49.0);
		collection.add(161.0);
		collection.add(100.0);
		collection.add(190.0);
		collection.add(162.0);
		collection.add(123.0);
		collection.add(114.0);
		collection.add(58.0);
		collection.add(37.0);
		collection.add(6.0);
		collection.add(167.0);
		collection.add(199.0);
		collection.add(178.0);
		collection.add(105.0);
		collection.add(99.0);
		collection.add(15.0);
		collection.add(68.0);
		collection.add(199.0);
		collection.add(67.0);
		collection.add(86.0);
		collection.add(118.0);
		collection.add(196.0);
		collection.add(134.0);
		collection.add(54.0);
		collection.add(68.0);
		collection.add(187.0);
		collection.add(124.0);
		collection.add(96.0);
		collection.add(95.0);
		collection.add(29.0);
		collection.add(101.0);
		collection.add(179.0);
		collection.add(96.0);
		collection.add(188.0);
		collection.add(68.0);
		collection.add(179.0);
		collection.add(61.0);
		collection.add(27.0);
		collection.add(151.0);
		collection.add(94.0);
		collection.add(114.0);
		collection.add(122.0);
		collection.add(45.0);
		collection.add(128.0);
		collection.add(150.0);
		collection.add(144.0);
		collection.add(59.0);
		collection.add(171.0);
		collection.add(82.0);
		collection.add(29.0);
		collection.add(145.0);
		collection.add(136.0);
		collection.add(171.0);
		collection.add(84.0);
		collection.add(199.0);
		collection.add(186.0);
		collection.add(84.0);
		collection.add(194.0);
		collection.add(55.0);
		collection.add(48.0);
		collection.add(192.0);
		collection.add(25.0);
		collection.add(15.0);
		collection.add(107.0);
		collection.add(27.0);
		collection.add(73.0);
		collection.add(37.0);
		collection.add(135.0);
		collection.add(8.0);
		collection.add(16.0);
		collection.add(51.0);
		collection.add(99.0);
		collection.add(140.0);
		collection.add(90.0);
		collection.add(106.0);
		collection.add(109.0);
		collection.add(182.0);
		collection.add(131.0);
		collection.add(40.0);
		collection.add(78.0);
		collection.add(159.0);
		collection.add(148.0);
		collection.add(156.0);
		collection.add(114.0);
		collection.add(95.0);
		collection.add(191.0);
		collection.add(56.0);
		collection.add(106.0);
		collection.add(15.0);
		collection.add(141.0);
		collection.add(105.0);
		collection.add(169.0);
		collection.add(166.0);
		collection.add(82.0);
		collection.add(124.0);
		collection.add(128.0);
		collection.add(31.0);
		collection.add(140.0);
		collection.add(153.0);
		collection.add(125.0);
		collection.add(96.0);
		collection.add(85.0);
		collection.add(178.0);
		collection.add(20.0);
		collection.add(41.0);
		collection.add(9.0);
		collection.add(46.0);
		collection.add(65.0);
		collection.add(111.0);
		collection.add(58.0);
		collection.add(197.0);
		collection.add(10.0);
		collection.add(181.0);
		collection.add(136.0);
		collection.add(99.0);
		collection.add(8.0);
		collection.add(194.0);
		collection.add(152.0);
		collection.add(56.0);
		collection.add(19.0);
		collection.add(39.0);
		collection.add(23.0);
		collection.add(128.0);
		collection.add(159.0);
		collection.add(28.0);
		collection.add(50.0);
		collection.add(43.0);
		collection.add(177.0);
		collection.add(93.0);
		collection.add(156.0);
		collection.add(1.0);
		collection.add(179.0);
		collection.add(145.0);
		collection.add(192.0);
		collection.add(185.0);
		collection.add(77.0);
		collection.add(14.0);
		collection.add(97.0);
		collection.add(85.0);
		collection.add(9.0);
		collection.add(119.0);
		collection.add(175.0);
		collection.add(162.0);
		collection.add(138.0);
		collection.add(20.0);
		collection.add(39.0);
		collection.add(42.0);
		collection.add(172.0);
		collection.add(31.0);
		collection.add(197.0);
		collection.add(116.0);
		collection.add(133.0);
		collection.add(77.0);
		collection.add(119.0);
		collection.add(196.0);
		collection.add(193.0);
		collection.add(118.0);
		collection.add(83.0);
		collection.add(92.0);
		collection.add(6.0);
		collection.add(93.0);
		collection.add(149.0);
		collection.add(70.0);
		collection.add(47.0);
		collection.add(104.0);
		collection.add(44.0);
		collection.add(200.0);
		collection.add(161.0);
		collection.add(9.0);
		collection.add(25.0);
		collection.add(157.0);
		collection.add(119.0);
		collection.add(3.0);
		collection.add(193.0);
		collection.add(34.0);
		collection.add(52.0);
		collection.add(130.0);
		collection.add(135.0);
		collection.add(159.0);
		collection.add(97.0);
		collection.add(40.0);
		collection.add(41.0);
		collection.add(23.0);
		collection.add(193.0);
		collection.add(200.0);
		collection.add(128.0);
		collection.add(144.0);
		collection.add(125.0);
		collection.add(104.0);
		collection.add(193.0);
		collection.add(6.0);
		collection.add(39.0);
		collection.add(98.0);
		collection.add(81.0);
		collection.add(130.0);
		collection.add(136.0);
		collection.add(27.0);
		collection.add(111.0);
		collection.add(6.0);
		collection.add(49.0);
		collection.add(132.0);
		collection.add(195.0);
		collection.add(149.0);
		collection.add(86.0);
		collection.add(71.0);
		collection.add(164.0);
		collection.add(162.0);
		collection.add(171.0);
		collection.add(166.0);
		collection.add(92.0);
		collection.add(4.0);
		collection.add(149.0);
		collection.add(82.0);
		collection.add(193.0);
		collection.add(156.0);
		collection.add(86.0);
		collection.add(144.0);
		collection.add(46.0);
		collection.add(40.0);
		collection.add(195.0);
		collection.add(53.0);
		collection.add(77.0);
		collection.add(158.0);
		collection.add(167.0);
		collection.add(141.0);
		collection.add(149.0);
		collection.add(196.0);
		collection.add(29.0);
		collection.add(190.0);
		collection.add(40.0);
		collection.add(175.0);
		collection.add(127.0);
		collection.add(124.0);
		collection.add(30.0);
		collection.add(172.0);
		collection.add(82.0);
		collection.add(129.0);
		collection.add(40.0);
		collection.add(129.0);
		collection.add(151.0);
		collection.add(18.0);
		collection.add(146.0);
		collection.add(46.0);
		collection.add(180.0);
		collection.add(163.0);
		collection.add(8.0);
		collection.add(8.0);
		collection.add(186.0);
		collection.add(200.0);
		collection.add(140.0);
		collection.add(33.0);
		collection.add(112.0);
		collection.add(184.0);
		collection.add(111.0);
		collection.add(189.0);
		collection.add(190.0);
		collection.add(169.0);
		collection.add(157.0);
		collection.add(11.0);
		collection.add(37.0);
		collection.add(25.0);
		collection.add(157.0);
		collection.add(135.0);
		collection.add(51.0);
		collection.add(169.0);
		collection.add(179.0);
		collection.add(106.0);
		collection.add(140.0);
		collection.add(104.0);
		collection.add(88.0);
		collection.add(23.0);
		collection.add(28.0);
		collection.add(164.0);
		collection.add(132.0);
		collection.add(62.0);
		collection.add(188.0);
		collection.add(162.0);
		collection.add(110.0);
		collection.add(179.0);
		collection.add(21.0);
		collection.add(124.0);
		collection.add(118.0);
		collection.add(19.0);
		collection.add(107.0);
		collection.add(104.0);
		collection.add(113.0);
		collection.add(43.0);
		collection.add(68.0);
		collection.add(78.0);
		collection.add(192.0);
		collection.add(55.0);
		collection.add(54.0);
		collection.add(118.0);
		collection.add(144.0);
		collection.add(134.0);
		collection.add(9.0);
		collection.add(44.0);
		collection.add(191.0);
		collection.add(76.0);
		collection.add(90.0);
		collection.add(34.0);
		collection.add(178.0);
		collection.add(132.0);
		collection.add(159.0);
		collection.add(115.0);
		collection.add(145.0);
		collection.add(15.0);
		collection.add(9.0);
		collection.add(90.0);
		collection.add(53.0);
		collection.add(185.0);
		collection.add(38.0);
		collection.add(199.0);
		collection.add(81.0);
		collection.add(85.0);
		collection.add(151.0);
		collection.add(173.0);
		collection.add(182.0);
		collection.add(13.0);
		collection.add(127.0);
		collection.add(127.0);
		collection.add(152.0);
		collection.add(156.0);
		collection.add(184.0);
		collection.add(123.0);
		collection.add(142.0);
		collection.add(2.0);
		collection.add(200.0);
		collection.add(163.0);
		collection.add(6.0);
		collection.add(52.0);
		collection.add(80.0);
		collection.add(163.0);
		collection.add(191.0);
		collection.add(116.0);
		collection.add(17.0);
		collection.add(4.0);
		collection.add(162.0);
		collection.add(10.0);
		collection.add(151.0);
		collection.add(42.0);
		collection.add(94.0);
		collection.add(198.0);
		collection.add(23.0);
		collection.add(121.0);
		collection.add(120.0);
		collection.add(160.0);
		collection.add(72.0);
		collection.add(159.0);
		collection.add(81.0);
		collection.add(16.0);
		collection.add(64.0);
		collection.add(74.0);
		collection.add(154.0);
		collection.add(86.0);
		collection.add(170.0);
		collection.add(176.0);
		collection.add(28.0);
		collection.add(17.0);
		collection.add(168.0);
		collection.add(185.0);
		collection.add(16.0);
		collection.add(40.0);
		collection.add(126.0);
		collection.add(75.0);
		collection.add(174.0);
		collection.add(80.0);
		collection.add(170.0);
		collection.add(73.0);
		collection.add(149.0);
		collection.add(73.0);
		collection.add(90.0);
		collection.add(98.0);
		collection.add(176.0);
		collection.add(9.0);
		collection.add(38.0);
		collection.add(171.0);
		collection.add(23.0);
		collection.add(151.0);
		collection.add(63.0);
		collection.add(24.0);
		collection.add(111.0);
		collection.add(200.0);
		collection.add(114.0);
		collection.add(74.0);
		collection.add(173.0);
		collection.add(98.0);
		collection.add(176.0);
		collection.add(54.0);
		collection.add(151.0);
		collection.add(40.0);
		collection.add(132.0);
		collection.add(68.0);
		collection.add(186.0);
		collection.add(176.0);
		collection.add(4.0);
		collection.add(135.0);
		collection.add(182.0);
		collection.add(102.0);
		collection.add(26.0);
		collection.add(109.0);
		collection.add(167.0);
		collection.add(85.0);
		collection.add(187.0);
		collection.add(56.0);
		collection.add(37.0);
		collection.add(17.0);
		collection.add(123.0);
		collection.add(158.0);
		collection.add(10.0);
		collection.add(9.0);
		collection.add(153.0);
		collection.add(17.0);
		collection.add(133.0);
		collection.add(26.0);
		collection.add(24.0);
		collection.add(121.0);
		collection.add(169.0);
		collection.add(3.0);
		collection.add(87.0);
		collection.add(8.0);
		collection.add(21.0);
		collection.add(178.0);
		collection.add(165.0);
		collection.add(146.0);
		collection.add(139.0);
		collection.add(182.0);
		collection.add(39.0);
		collection.add(100.0);
		collection.add(156.0);
		collection.add(133.0);
		collection.add(120.0);
		collection.add(34.0);
		collection.add(57.0);
		collection.add(31.0);
		collection.add(66.0);
		collection.add(69.0);
		collection.add(76.0);
		collection.add(87.0);
		collection.add(107.0);
		collection.add(106.0);
		collection.add(98.0);
		collection.add(159.0);
		collection.add(65.0);
		collection.add(56.0);
		collection.add(16.0);
		collection.add(169.0);
		collection.add(83.0);
		collection.add(178.0);
		collection.add(176.0);
		collection.add(121.0);
		collection.add(7.0);
		collection.add(66.0);
		collection.add(13.0);
		collection.add(121.0);
		collection.add(94.0);
		collection.add(119.0);
		collection.add(67.0);
		collection.add(126.0);
		collection.add(95.0);
		collection.add(174.0);
		collection.add(61.0);
		collection.add(8.0);
		collection.add(47.0);
		collection.add(199.0);
		collection.add(181.0);
		collection.add(152.0);
		collection.add(81.0);
		collection.add(125.0);
		collection.add(44.0);
		collection.add(35.0);
		collection.add(112.0);
		collection.add(44.0);
		collection.add(17.0);
		collection.add(63.0);
		collection.add(52.0);
		collection.add(164.0);
		collection.add(199.0);
		collection.add(193.0);
		collection.add(104.0);
		collection.add(131.0);
		collection.add(177.0);
		collection.add(148.0);
		collection.add(66.0);
		collection.add(193.0);
		collection.add(171.0);
		collection.add(63.0);
		collection.add(35.0);
		collection.add(3.0);
		collection.add(180.0);
		collection.add(130.0);
		collection.add(4.0);
		collection.add(80.0);
		collection.add(39.0);
		collection.add(186.0);
		collection.add(188.0);
		collection.add(177.0);
		collection.add(123.0);
		collection.add(107.0);
		collection.add(61.0);
		collection.add(43.0);
		collection.add(140.0);
		collection.add(176.0);
		collection.add(158.0);
		collection.add(89.0);
		collection.add(133.0);
		collection.add(87.0);
		collection.add(154.0);
		collection.add(184.0);
		collection.add(63.0);
		collection.add(49.0);
		collection.add(50.0);
		collection.add(71.0);
		collection.add(83.0);
		collection.add(140.0);
		collection.add(37.0);
		collection.add(65.0);
		collection.add(88.0);
		collection.add(23.0);
		collection.add(70.0);
		collection.add(126.0);
		collection.add(159.0);
		collection.add(180.0);
		collection.add(168.0);
		collection.add(109.0);
		collection.add(36.0);
		collection.add(51.0);
		collection.add(145.0);
		collection.add(126.0);
		collection.add(106.0);
		collection.add(13.0);
		collection.add(118.0);
		collection.add(74.0);
		collection.add(92.0);
		collection.add(73.0);
		collection.add(177.0);
		collection.add(2.0);
		collection.add(114.0);
		collection.add(142.0);
		collection.add(71.0);
		collection.add(158.0);
		collection.add(72.0);
		collection.add(182.0);
		collection.add(111.0);
		collection.add(187.0);
		collection.add(38.0);
		collection.add(192.0);
		collection.add(136.0);
		collection.add(82.0);
		collection.add(33.0);
		collection.add(196.0);
		collection.add(1.0);
		collection.add(98.0);
		collection.add(141.0);
		collection.add(90.0);
		collection.add(141.0);
		collection.add(10.0);
		collection.add(169.0);
		collection.add(88.0);
		collection.add(187.0);
		collection.add(66.0);
		collection.add(108.0);
		collection.add(186.0);
		collection.add(17.0);
		collection.add(81.0);
		collection.add(61.0);
		collection.add(102.0);
		collection.add(170.0);
		collection.add(31.0);
		collection.add(81.0);
		collection.add(20.0);
		collection.add(9.0);
		collection.add(5.0);
		collection.add(43.0);
		collection.add(72.0);
		collection.add(78.0);
		collection.add(79.0);
		collection.add(128.0);
		collection.add(59.0);
		collection.add(102.0);
		collection.add(25.0);
		collection.add(32.0);
		collection.add(130.0);
		collection.add(115.0);
		collection.add(36.0);
		collection.add(47.0);
		collection.add(26.0);
		collection.add(100.0);
		collection.add(31.0);
		collection.add(68.0);
		collection.add(170.0);
		collection.add(183.0);
		collection.add(89.0);
		collection.add(9.0);
		collection.add(81.0);
		collection.add(110.0);
		collection.add(175.0);
		collection.add(86.0);
		collection.add(33.0);
		collection.add(151.0);
		collection.add(98.0);
		collection.add(187.0);
		collection.add(195.0);
		collection.add(170.0);
		collection.add(174.0);
		collection.add(196.0);
		collection.add(184.0);
		collection.add(179.0);
		collection.add(97.0);
		collection.add(23.0);
		collection.add(44.0);
		collection.add(142.0);
		collection.add(28.0);
		collection.add(97.0);
		collection.add(62.0);
		collection.add(103.0);
		collection.add(43.0);
		collection.add(7.0);
		collection.add(146.0);
		collection.add(50.0);
		collection.add(125.0);
		collection.add(85.0);
		collection.add(177.0);
		collection.add(117.0);
		collection.add(167.0);
		collection.add(78.0);
		collection.add(176.0);
		collection.add(45.0);
		collection.add(139.0);
		collection.add(193.0);
		collection.add(64.0);
		collection.add(175.0);
		collection.add(21.0);
		collection.add(59.0);
		collection.add(34.0);
		collection.add(73.0);
		collection.add(75.0);
		collection.add(26.0);
		collection.add(73.0);
		collection.add(5.0);
		collection.add(11.0);
		collection.add(69.0);
		collection.add(79.0);
		collection.add(115.0);
		collection.add(46.0);
		collection.add(128.0);
		collection.add(151.0);
		collection.add(145.0);
		collection.add(93.0);
		collection.add(9.0);
		collection.add(42.0);
		collection.add(129.0);
		collection.add(117.0);
		collection.add(148.0);
		collection.add(21.0);
		collection.add(6.0);
		collection.add(182.0);
		collection.add(83.0);
		collection.add(67.0);
		collection.add(115.0);
		collection.add(169.0);
		collection.add(11.0);
		collection.add(29.0);
		collection.add(103.0);
		collection.add(77.0);
		collection.add(136.0);
		collection.add(5.0);
		collection.add(121.0);
		collection.add(115.0);
		collection.add(38.0);
		collection.add(153.0);
		collection.add(127.0);
		collection.add(123.0);
		collection.add(168.0);
		collection.add(61.0);
		collection.add(4.0);
		collection.add(16.0);
		collection.add(10.0);
		collection.add(120.0);
		collection.add(93.0);
		collection.add(161.0);
		collection.add(15.0);
		collection.add(86.0);
		collection.add(37.0);
		collection.add(28.0);
		collection.add(154.0);
		collection.add(136.0);
		collection.add(42.0);
		collection.add(166.0);
		collection.add(104.0);
		collection.add(35.0);
		collection.add(3.0);
		collection.add(174.0);
		collection.add(43.0);
		collection.add(137.0);
		collection.add(17.0);
		collection.add(82.0);
		collection.add(91.0);
		collection.add(108.0);
		collection.add(10.0);
		collection.add(86.0);
		collection.add(179.0);
		collection.add(36.0);
		collection.add(56.0);
		collection.add(17.0);
		collection.add(189.0);
		collection.add(168.0);
		collection.add(165.0);
		collection.add(99.0);
		collection.add(192.0);
		collection.add(42.0);
		collection.add(168.0);
		collection.add(100.0);
		collection.add(115.0);
		collection.add(12.0);
		collection.add(21.0);
		collection.add(118.0);
		collection.add(94.0);
		collection.add(176.0);
		collection.add(35.0);
		collection.add(87.0);
		collection.add(168.0);
		collection.add(120.0);
		collection.add(43.0);
		collection.add(152.0);
		collection.add(110.0);
		collection.add(200.0);
		collection.add(65.0);
		collection.add(123.0);
		collection.add(34.0);
		collection.add(54.0);
		collection.add(191.0);
		collection.add(110.0);
		collection.add(26.0);
		collection.add(62.0);
		collection.add(34.0);
		collection.add(35.0);
		collection.add(27.0);
		collection.add(103.0);
		collection.add(8.0);
		collection.add(115.0);
		collection.add(31.0);
		collection.add(181.0);
		collection.add(9.0);
		collection.add(102.0);
		collection.add(50.0);
		collection.add(87.0);
		collection.add(108.0);
		collection.add(117.0);
		collection.add(9.0);
	}
	@Benchmark
	@Fork(1)
	@Warmup(time=5)
	@Measurement(time=5,iterations=30)
	public void JArraySequence(Blackhole bh) {
		bh.consume(collection.remove(139));
		bh.consume(collection.addAll(129, java.util.Arrays.asList(45.0,112.0,77.0,132.0,13.0,101.0,170.0,27.0,51.0)));
		collection.add(86, 158.0);
		bh.consume(collection.addAll(175, java.util.Arrays.asList(178.0,154.0,34.0,101.0,33.0,160.0,139.0)));
		collection.remove(54.0);
		collection.add(98.0);
		bh.consume(collection.addAll(115, java.util.Arrays.asList(50.0,14.0,76.0,173.0)));
		collection.remove(143.0);
		bh.consume(collection.set(3, 84.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(73.0,90.0,174.0)));
		bh.consume(collection.addAll(51, java.util.Arrays.asList(55.0,56.0,40.0,199.0,44.0,12.0,177.0,189.0,22.0)));
		collection.remove(189.0);
		collection.remove(24.0);
		collection.add(82.0);
		bh.consume(collection.indexOf(197.0));
		collection.add(24, 72.0);
		bh.consume(collection.contains(65.0));
		bh.consume(collection.set(45, 86.0));
		bh.consume(collection.set(105, 7.0));
		bh.consume(collection.addAll(50, java.util.Arrays.asList(109.0,107.0,37.0,34.0)));
		collection.add(138.0);
		collection.add(5.0);
		bh.consume(collection.contains(44.0));
		collection.add(104.0);
		bh.consume(collection.lastIndexOf(107.0));
		bh.consume(collection.get(139));
		bh.consume(collection.contains(171.0));
		bh.consume(collection.remove(20));
		bh.consume(collection.set(25, 85.0));
		bh.consume(collection.set(87, 96.0));
		bh.consume(collection.addAll(168, java.util.Arrays.asList(180.0,175.0,181.0,126.0,17.0,116.0,94.0,5.0,20.0)));
		collection.add(105.0);
		collection.remove(190.0);
		bh.consume(collection.set(54, 13.0));
		collection.add(29.0);
		bh.consume(collection.lastIndexOf(101.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(180.0,128.0,114.0,101.0,167.0,30.0)));
		bh.consume(collection.contains(102.0));
		bh.consume(collection.set(14, 185.0));
		collection.add(38.0);
		collection.remove(188.0);
		bh.consume(collection.set(150, 115.0));
		bh.consume(collection.addAll(13, java.util.Arrays.asList(3.0,152.0,74.0,16.0,132.0,67.0,118.0,138.0,159.0)));
		collection.add(28.0);
		bh.consume(collection.addAll(160, java.util.Arrays.asList(6.0,67.0,116.0)));
		collection.remove(9.0);
		bh.consume(collection.contains(32.0));
		collection.remove(11.0);
		bh.consume(collection.indexOf(171.0));
		bh.consume(collection.addAll(70, java.util.Arrays.asList(81.0,76.0,194.0,130.0,98.0)));
		bh.consume(collection.contains(182.0));
		bh.consume(collection.addAll(15, java.util.Arrays.asList(121.0,155.0,142.0)));
		collection.add(0, 155.0);
		bh.consume(collection.contains(28.0));
		bh.consume(collection.lastIndexOf(193.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(78.0,170.0,169.0,99.0,116.0,97.0,85.0,122.0,161.0)));
		bh.consume(collection.contains(19.0));
		bh.consume(collection.set(67, 113.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(139.0,102.0,33.0,28.0,183.0,188.0,130.0,158.0,34.0)));
		bh.consume(collection.indexOf(129.0));
		collection.remove(173.0);
		bh.consume(collection.contains(168.0));
		bh.consume(collection.contains(192.0));
		bh.consume(collection.lastIndexOf(122.0));
		bh.consume(collection.indexOf(117.0));
		collection.add(0, 68.0);
		collection.add(26.0);
		bh.consume(collection.remove(71));
		collection.add(169, 14.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(160.0,32.0,38.0,120.0,118.0,118.0,66.0,10.0)));
		collection.add(102, 193.0);
		bh.consume(collection.contains(177.0));
		bh.consume(collection.indexOf(4.0));
		bh.consume(collection.remove(189));
		bh.consume(collection.get(11));
		bh.consume(collection.set(88, 37.0));
		bh.consume(collection.lastIndexOf(184.0));
		bh.consume(collection.addAll(41, java.util.Arrays.asList(32.0,177.0,184.0,187.0,102.0)));
		bh.consume(collection.set(162, 8.0));
		bh.consume(collection.addAll(31, java.util.Arrays.asList(86.0,127.0,144.0,40.0,89.0,136.0,70.0,86.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(52.0,107.0,51.0,122.0,34.0,98.0,185.0,146.0)));
		bh.consume(collection.addAll(165, java.util.Arrays.asList(170.0,25.0,77.0,199.0,175.0,138.0,150.0,139.0,41.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(152.0,157.0,168.0,24.0,96.0,173.0,155.0,168.0,125.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(14.0,57.0,58.0,149.0,124.0,140.0,141.0)));
		collection.add(26.0);
		bh.consume(collection.get(15));
		bh.consume(collection.addAll(185, java.util.Arrays.asList(26.0,4.0,49.0,108.0,109.0,69.0,46.0)));
		bh.consume(collection.remove(137));
		bh.consume(collection.lastIndexOf(115.0));
		bh.consume(collection.lastIndexOf(109.0));
		collection.add(190.0);
		collection.remove(134.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(16.0,111.0,59.0,144.0,183.0,3.0,9.0)));
		collection.remove(111.0);
		bh.consume(collection.lastIndexOf(193.0));
		bh.consume(collection.addAll(4, java.util.Arrays.asList(75.0,199.0,64.0,166.0,133.0,93.0,97.0,21.0)));
		bh.consume(collection.set(185, 45.0));
		bh.consume(collection.remove(118));
		bh.consume(collection.set(20, 91.0));
		bh.consume(collection.set(167, 134.0));
		bh.consume(collection.indexOf(52.0));
		bh.consume(collection.lastIndexOf(50.0));
		collection.remove(21.0);
		collection.add(8, 46.0);
		collection.remove(18.0);
		bh.consume(collection.addAll(181, java.util.Arrays.asList(71.0,57.0,30.0,65.0,20.0,199.0,72.0,153.0)));
		collection.add(57.0);
		collection.add(30.0);
		collection.add(163.0);
		bh.consume(collection.addAll(109, java.util.Arrays.asList(165.0,90.0,148.0)));
		collection.remove(128.0);
		collection.remove(126.0);
		bh.consume(collection.addAll(176, java.util.Arrays.asList(151.0,101.0,151.0,40.0,127.0,108.0,102.0,24.0,132.0)));
		bh.consume(collection.set(158, 130.0));
		bh.consume(collection.indexOf(135.0));
		bh.consume(collection.lastIndexOf(103.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(159.0,70.0,55.0)));
		collection.add(21.0);
		bh.consume(collection.set(190, 17.0));
		bh.consume(collection.addAll(58, java.util.Arrays.asList(158.0,54.0,52.0,151.0,198.0,59.0)));
		bh.consume(collection.contains(114.0));
		collection.add(108, 11.0);
		bh.consume(collection.addAll(90, java.util.Arrays.asList(84.0,24.0,42.0,56.0,49.0,162.0,7.0)));
		bh.consume(collection.lastIndexOf(77.0));
		collection.remove(12.0);
		collection.remove(107.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(67.0,31.0,16.0,47.0,125.0,136.0,187.0)));
		bh.consume(collection.addAll(68, java.util.Arrays.asList(164.0,17.0,92.0)));
		bh.consume(collection.contains(140.0));
		bh.consume(collection.addAll(61, java.util.Arrays.asList(150.0,117.0,97.0,149.0,199.0,168.0,123.0,85.0,70.0)));
		bh.consume(collection.indexOf(22.0));
		bh.consume(collection.addAll(107, java.util.Arrays.asList(80.0,69.0,29.0,177.0)));
		bh.consume(collection.set(112, 6.0));
		bh.consume(collection.set(162, 40.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(150.0,12.0,200.0)));
		collection.remove(95.0);
		bh.consume(collection.get(47));
		bh.consume(collection.lastIndexOf(107.0));
		bh.consume(collection.contains(55.0));
		bh.consume(collection.remove(2));
		collection.remove(128.0);
		bh.consume(collection.set(188, 195.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(145.0,37.0,105.0,114.0,172.0,128.0,191.0,170.0)));
		bh.consume(collection.indexOf(92.0));
		bh.consume(collection.lastIndexOf(195.0));
		collection.add(0, 101.0);
		bh.consume(collection.get(139));
		collection.add(141, 61.0);
		collection.add(120.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(189.0,141.0,75.0,165.0,77.0,42.0,109.0,124.0)));
		collection.add(114, 82.0);
		collection.remove(43.0);
		collection.remove(190.0);
		bh.consume(collection.contains(14.0));
		bh.consume(collection.remove(30));
		bh.consume(collection.remove(17));
		bh.consume(collection.remove(78));
		bh.consume(collection.remove(98));
		collection.add(60.0);
		bh.consume(collection.remove(52));
		bh.consume(collection.set(45, 88.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(81.0,113.0,66.0,153.0,86.0,170.0,118.0)));
		collection.remove(121.0);
		bh.consume(collection.contains(118.0));
		bh.consume(collection.set(7, 80.0));
		bh.consume(collection.indexOf(55.0));
		bh.consume(collection.indexOf(97.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(43.0,11.0,53.0,42.0,72.0,156.0,112.0,2.0)));
		collection.add(157, 86.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(154.0,91.0,58.0,69.0)));
		collection.add(22.0);
		bh.consume(collection.contains(108.0));
		bh.consume(collection.remove(130));
		bh.consume(collection.remove(79));
		bh.consume(collection.contains(145.0));
		bh.consume(collection.get(128));
		bh.consume(collection.addAll(39, java.util.Arrays.asList(86.0,180.0,11.0,56.0,172.0,22.0,20.0)));
		collection.remove(83.0);
		bh.consume(collection.lastIndexOf(140.0));
		bh.consume(collection.contains(62.0));
		bh.consume(collection.remove(75));
		bh.consume(collection.lastIndexOf(115.0));
		collection.remove(31.0);
		bh.consume(collection.set(186, 160.0));
		bh.consume(collection.remove(24));
		bh.consume(collection.contains(167.0));
		bh.consume(collection.get(59));
		collection.add(125.0);
		collection.add(92, 191.0);
		collection.add(165.0);
		bh.consume(collection.addAll(5, java.util.Arrays.asList(127.0,8.0,76.0,170.0,196.0,80.0)));
		bh.consume(collection.indexOf(105.0));
		bh.consume(collection.set(69, 127.0));
		bh.consume(collection.remove(40));
		collection.add(68.0);
		bh.consume(collection.get(34));
		bh.consume(collection.addAll(java.util.Arrays.asList(167.0,198.0,159.0,60.0,138.0,23.0,199.0,157.0,189.0)));
		collection.remove(83.0);
		collection.add(0, 78.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(100.0,169.0,68.0,153.0,163.0)));
		bh.consume(collection.get(139));
		bh.consume(collection.remove(195));
		bh.consume(collection.addAll(java.util.Arrays.asList(42.0,64.0,22.0,20.0,48.0,64.0,94.0)));
		bh.consume(collection.remove(67));
		bh.consume(collection.set(65, 60.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(72.0,124.0,178.0,186.0,15.0,197.0,87.0)));
		bh.consume(collection.lastIndexOf(121.0));
		collection.add(71, 137.0);
		bh.consume(collection.remove(71));
		bh.consume(collection.addAll(java.util.Arrays.asList(3.0,72.0,200.0,7.0,21.0,114.0,187.0,168.0)));
		bh.consume(collection.contains(161.0));
		bh.consume(collection.set(92, 177.0));
		collection.remove(142.0);
		collection.remove(20.0);
		bh.consume(collection.get(146));
		bh.consume(collection.addAll(java.util.Arrays.asList(19.0,176.0,94.0,52.0,112.0,61.0,130.0,145.0,166.0)));
		collection.remove(51.0);
		bh.consume(collection.get(66));
		collection.remove(44.0);
		collection.remove(91.0);
		bh.consume(collection.remove(102));
		bh.consume(collection.addAll(33, java.util.Arrays.asList(77.0,99.0,176.0,131.0,113.0,131.0,26.0)));
		bh.consume(collection.lastIndexOf(118.0));
		bh.consume(collection.set(174, 65.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(76.0,163.0,143.0,155.0,112.0,16.0,11.0,68.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(99.0,29.0,105.0,55.0,177.0,86.0)));
		bh.consume(collection.addAll(37, java.util.Arrays.asList(180.0,161.0,30.0,102.0,174.0,132.0,91.0,89.0)));
		bh.consume(collection.lastIndexOf(191.0));
		bh.consume(collection.set(88, 9.0));
		collection.remove(104.0);
		bh.consume(collection.addAll(129, java.util.Arrays.asList(29.0,122.0,186.0,69.0,176.0,48.0,126.0,170.0)));
		collection.remove(148.0);
		bh.consume(collection.addAll(22, java.util.Arrays.asList(134.0,9.0,169.0,48.0,4.0,65.0,174.0,98.0,176.0)));
		bh.consume(collection.addAll(33, java.util.Arrays.asList(79.0,119.0,22.0,124.0,153.0,138.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(4.0,49.0,169.0,117.0,134.0,11.0,38.0)));
		bh.consume(collection.addAll(75, java.util.Arrays.asList(193.0,145.0,61.0)));
		bh.consume(collection.addAll(119, java.util.Arrays.asList(181.0,172.0,28.0,175.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(151.0,19.0,110.0,136.0)));
		bh.consume(collection.get(94));
		bh.consume(collection.set(97, 75.0));
		collection.remove(11.0);
		bh.consume(collection.set(199, 194.0));
		collection.remove(113.0);
		bh.consume(collection.set(107, 128.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(149.0,173.0,6.0,6.0,83.0,115.0)));
		bh.consume(collection.addAll(34, java.util.Arrays.asList(14.0,181.0,64.0,178.0,92.0,27.0)));
		bh.consume(collection.remove(21));
		collection.add(39.0);
		collection.add(70.0);
		bh.consume(collection.lastIndexOf(44.0));
		collection.add(105.0);
		bh.consume(collection.contains(115.0));
		collection.add(94.0);
		bh.consume(collection.addAll(35, java.util.Arrays.asList(177.0,11.0,139.0,5.0,194.0,126.0,184.0,154.0)));
		bh.consume(collection.contains(154.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(118.0,150.0,158.0,90.0,10.0,18.0)));
		bh.consume(collection.set(108, 95.0));
		collection.remove(78.0);
		collection.remove(106.0);
		bh.consume(collection.set(112, 41.0));
		bh.consume(collection.get(164));
		bh.consume(collection.indexOf(36.0));
		bh.consume(collection.addAll(28, java.util.Arrays.asList(30.0,187.0,104.0,1.0,57.0,146.0,14.0)));
		collection.add(65, 180.0);
		collection.remove(69.0);
		bh.consume(collection.remove(104));
		bh.consume(collection.remove(156));
		collection.add(173.0);
		bh.consume(collection.addAll(192, java.util.Arrays.asList(181.0,99.0,37.0,36.0,69.0)));
		bh.consume(collection.set(32, 47.0));
		collection.remove(131.0);
		collection.remove(186.0);
		bh.consume(collection.addAll(162, java.util.Arrays.asList(171.0,162.0,54.0,51.0)));
		bh.consume(collection.lastIndexOf(99.0));
		collection.remove(173.0);
		collection.add(54, 147.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(47.0,167.0,96.0,2.0,39.0,30.0)));
		collection.remove(15.0);
		bh.consume(collection.lastIndexOf(7.0));
		bh.consume(collection.remove(144));
		collection.add(170.0);
		bh.consume(collection.remove(3));
		collection.remove(185.0);
		bh.consume(collection.contains(135.0));
		collection.remove(25.0);
		collection.remove(45.0);
		bh.consume(collection.addAll(16, java.util.Arrays.asList(10.0,114.0,3.0,100.0,111.0,51.0,20.0,133.0)));
		bh.consume(collection.lastIndexOf(191.0));
		bh.consume(collection.indexOf(7.0));
		collection.remove(169.0);
		bh.consume(collection.remove(158));
		bh.consume(collection.addAll(139, java.util.Arrays.asList(182.0,78.0,169.0,25.0,58.0,68.0)));
		bh.consume(collection.addAll(183, java.util.Arrays.asList(60.0,108.0,157.0,57.0)));
		bh.consume(collection.addAll(java.util.Arrays.asList(177.0,73.0,99.0,82.0,114.0,72.0,101.0)));
		bh.consume(collection.remove(67));
		bh.consume(collection.get(19));
		collection.remove(115.0);
		collection.add(65, 69.0);
		bh.consume(collection.indexOf(50.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(189.0,157.0,1.0,155.0,64.0)));
		bh.consume(collection.set(101, 137.0));
		bh.consume(collection.set(159, 26.0));
		collection.add(12.0);
		bh.consume(collection.contains(152.0));
		collection.add(155, 13.0);
		bh.consume(collection.set(19, 16.0));
		collection.remove(141.0);
		collection.add(0, 39.0);
		bh.consume(collection.remove(117));
		bh.consume(collection.set(98, 191.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(113.0,198.0,184.0,29.0,20.0)));
		bh.consume(collection.get(92));
		collection.add(71.0);
		bh.consume(collection.lastIndexOf(130.0));
		collection.add(95.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(29.0,143.0,95.0)));
		collection.add(146, 11.0);
		collection.add(28.0);
		bh.consume(collection.addAll(25, java.util.Arrays.asList(118.0,117.0,136.0,139.0,98.0,150.0)));
		bh.consume(collection.indexOf(156.0));
		bh.consume(collection.indexOf(94.0));
		bh.consume(collection.addAll(119, java.util.Arrays.asList(115.0,39.0,162.0)));
		collection.add(142, 140.0);
		bh.consume(collection.contains(107.0));
		bh.consume(collection.addAll(183, java.util.Arrays.asList(136.0,119.0,135.0,124.0,1.0,103.0)));
		collection.add(45, 161.0);
		collection.add(148, 111.0);
		bh.consume(collection.set(75, 82.0));
		collection.add(181.0);
		collection.add(95, 160.0);
		bh.consume(collection.addAll(157, java.util.Arrays.asList(47.0,95.0,5.0,153.0,23.0,181.0)));
		collection.remove(98.0);
		bh.consume(collection.get(130));
		bh.consume(collection.addAll(java.util.Arrays.asList(81.0,23.0,152.0,46.0)));
		bh.consume(collection.set(183, 57.0));
		collection.add(13, 17.0);
		bh.consume(collection.set(153, 164.0));
		collection.add(193, 38.0);
		bh.consume(collection.remove(41));
		collection.remove(178.0);
		bh.consume(collection.addAll(135, java.util.Arrays.asList(26.0,199.0,151.0,4.0,69.0,42.0,186.0,194.0)));
		bh.consume(collection.contains(197.0));
		bh.consume(collection.indexOf(70.0));
		collection.add(152, 81.0);
		bh.consume(collection.addAll(131, java.util.Arrays.asList(122.0,38.0,126.0,83.0,78.0,13.0,115.0,149.0)));
		collection.add(16, 58.0);
		collection.add(95.0);
		bh.consume(collection.get(115));
		bh.consume(collection.indexOf(189.0));
		bh.consume(collection.contains(119.0));
		bh.consume(collection.remove(84));
		bh.consume(collection.get(71));
		bh.consume(collection.lastIndexOf(172.0));
		bh.consume(collection.addAll(124, java.util.Arrays.asList(177.0,66.0,121.0,64.0,122.0,163.0,78.0,48.0,66.0)));
		bh.consume(collection.addAll(2, java.util.Arrays.asList(1.0,29.0,123.0,187.0,174.0,13.0,139.0,180.0)));
		bh.consume(collection.contains(131.0));
		collection.remove(56.0);
		collection.remove(177.0);
		bh.consume(collection.lastIndexOf(52.0));
		collection.add(5, 73.0);
		bh.consume(collection.contains(59.0));
		collection.add(11.0);
		bh.consume(collection.addAll(142, java.util.Arrays.asList(22.0,138.0,192.0)));
		collection.add(78, 154.0);
		bh.consume(collection.addAll(27, java.util.Arrays.asList(196.0,51.0,133.0,33.0)));
		collection.add(55.0);
		collection.remove(155.0);
		bh.consume(collection.get(163));
		bh.consume(collection.contains(121.0));
		bh.consume(collection.remove(38));
		bh.consume(collection.get(120));
		bh.consume(collection.addAll(132, java.util.Arrays.asList(11.0,57.0,154.0,81.0,103.0,107.0,135.0,55.0,170.0)));
		collection.remove(196.0);
		collection.add(196, 150.0);
		bh.consume(collection.get(67));
		bh.consume(collection.lastIndexOf(158.0));
		bh.consume(collection.addAll(65, java.util.Arrays.asList(176.0,146.0,38.0,46.0,112.0)));
		bh.consume(collection.addAll(168, java.util.Arrays.asList(122.0,147.0,161.0,174.0,185.0,49.0)));
		bh.consume(collection.contains(81.0));
		bh.consume(collection.lastIndexOf(100.0));
		bh.consume(collection.contains(131.0));
		bh.consume(collection.remove(113));
		collection.remove(100.0);
		collection.remove(194.0);
		collection.add(108, 166.0);
		bh.consume(collection.remove(67));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(160.0,34.0,166.0,5.0,133.0)));
		collection.add(141.0);
		bh.consume(collection.remove(38));
		collection.remove(115.0);
		bh.consume(collection.addAll(186, java.util.Arrays.asList(194.0,84.0,32.0,114.0,48.0,92.0)));
		collection.add(68.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(102.0,124.0,95.0)));
		bh.consume(collection.set(42, 92.0));
		collection.remove(52.0);
		collection.remove(19.0);
		bh.consume(collection.remove(54));
		bh.consume(collection.addAll(63, java.util.Arrays.asList(23.0,174.0,193.0,137.0,87.0,7.0)));
		bh.consume(collection.lastIndexOf(147.0));
		bh.consume(collection.lastIndexOf(109.0));
		bh.consume(collection.contains(9.0));
		bh.consume(collection.set(175, 1.0));
		bh.consume(collection.addAll(48, java.util.Arrays.asList(15.0,74.0,193.0,169.0,182.0,138.0,177.0,137.0)));
		bh.consume(collection.lastIndexOf(2.0));
		bh.consume(collection.lastIndexOf(49.0));
		bh.consume(collection.addAll(184, java.util.Arrays.asList(93.0,13.0,141.0)));
		collection.add(67, 146.0);
		bh.consume(collection.set(17, 163.0));
		bh.consume(collection.set(45, 124.0));
		bh.consume(collection.remove(75));
		bh.consume(collection.lastIndexOf(44.0));
		collection.remove(94.0);
		bh.consume(collection.remove(100));
		bh.consume(collection.lastIndexOf(104.0));
		bh.consume(collection.contains(75.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(129.0,65.0,152.0)));
		bh.consume(collection.contains(167.0));
		bh.consume(collection.contains(57.0));
		bh.consume(collection.lastIndexOf(46.0));
		collection.add(110.0);
		collection.remove(101.0);
		bh.consume(collection.contains(91.0));
		bh.consume(collection.set(86, 116.0));
		bh.consume(collection.addAll(151, java.util.Arrays.asList(188.0,66.0,103.0)));
		bh.consume(collection.indexOf(162.0));
		collection.add(119.0);
		bh.consume(collection.contains(133.0));
		collection.remove(195.0);
		collection.add(79.0);
		bh.consume(collection.set(21, 185.0));
		collection.add(94.0);
		bh.consume(collection.get(175));
		collection.remove(102.0);
		bh.consume(collection.contains(194.0));
		bh.consume(collection.get(145));
		collection.add(185.0);
		bh.consume(collection.addAll(28, java.util.Arrays.asList(149.0,153.0,91.0,46.0,34.0,181.0)));
		bh.consume(collection.lastIndexOf(108.0));
		bh.consume(collection.lastIndexOf(165.0));
		bh.consume(collection.get(144));
		collection.add(184.0);
		bh.consume(collection.addAll(180, java.util.Arrays.asList(87.0,55.0,189.0,53.0,110.0,144.0,127.0,165.0)));
		bh.consume(collection.addAll(13, java.util.Arrays.asList(77.0,154.0,109.0)));
		bh.consume(collection.set(164, 53.0));
		collection.add(99.0);
		bh.consume(collection.lastIndexOf(142.0));
		collection.remove(90.0);
		bh.consume(collection.remove(199));
		bh.consume(collection.addAll(java.util.Arrays.asList(18.0,38.0,179.0,176.0)));
		bh.consume(collection.remove(102));
		bh.consume(collection.addAll(java.util.Arrays.asList(175.0,177.0,144.0,155.0,77.0,32.0,43.0,113.0,132.0)));
		bh.consume(collection.set(38, 15.0));
		bh.consume(collection.indexOf(68.0));
		bh.consume(collection.remove(10));
		bh.consume(collection.lastIndexOf(65.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(38.0,199.0,88.0,108.0,20.0,121.0,176.0,64.0,114.0)));
		collection.add(145.0);
		collection.add(144.0);
		bh.consume(collection.contains(37.0));
		collection.add(88.0);
		bh.consume(collection.set(34, 84.0));
		bh.consume(collection.addAll(java.util.Arrays.asList(81.0,108.0,32.0,184.0,149.0,27.0,55.0)));
		bh.consume(collection.lastIndexOf(30.0));
		bh.consume(collection.addAll(42, java.util.Arrays.asList(164.0,83.0,93.0,155.0,103.0,174.0,48.0)));
		bh.consume(collection.addAll(27, java.util.Arrays.asList(45.0,140.0,94.0,152.0,65.0,9.0)));
		bh.consume(collection.addAll(70, java.util.Arrays.asList(51.0,38.0,142.0,78.0)));
		bh.consume(collection.addAll(56, java.util.Arrays.asList(182.0,121.0,114.0)));
		bh.consume(collection.contains(147.0));
		bh.consume(collection.indexOf(22.0));
		collection.remove(114.0);
		collection.remove(55.0);
		bh.consume(collection.contains(105.0));
		bh.consume(collection.addAll(82, java.util.Arrays.asList(120.0,4.0,151.0,88.0,29.0,83.0,91.0,75.0)));
		bh.consume(collection.addAll(152, java.util.Arrays.asList(116.0,79.0,132.0,196.0,23.0,184.0,55.0)));
		bh.consume(collection.addAll(36, java.util.Arrays.asList(165.0,174.0,44.0,182.0,102.0,34.0)));
		bh.consume(collection.contains(63.0));
		bh.consume(collection.get(64));
		bh.consume(collection.addAll(java.util.Arrays.asList(66.0,131.0,18.0,50.0)));
		bh.consume(collection.contains(130.0));
		collection.remove(8.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(26.0,42.0,94.0,188.0,105.0)));
		bh.consume(collection.indexOf(154.0));
		collection.add(60.0);
		bh.consume(collection.addAll(32, java.util.Arrays.asList(12.0,94.0,121.0,174.0,62.0,199.0,191.0,90.0)));
		bh.consume(collection.set(179, 68.0));
		bh.consume(collection.indexOf(123.0));
		bh.consume(collection.contains(159.0));
		bh.consume(collection.lastIndexOf(18.0));
		bh.consume(collection.addAll(194, java.util.Arrays.asList(165.0,169.0,54.0,120.0,71.0,8.0,30.0,111.0,177.0)));
		collection.remove(80.0);
		bh.consume(collection.remove(190));
		bh.consume(collection.get(27));
		collection.remove(26.0);
		bh.consume(collection.addAll(java.util.Arrays.asList(124.0,48.0,53.0)));
		collection.add(120, 31.0);
		bh.consume(collection.contains(14.0));
		bh.consume(collection.set(55, 2.0));
		bh.consume(collection.contains(121.0));
		bh.consume(collection.contains(80.0));
		bh.consume(collection.contains(82.0));
	}
}
